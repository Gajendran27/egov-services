{
	"info": {
		"name": "eGov_Inventory",
		"_postman_id": "97eb2091-8baa-ed32-2271-a02c6f407a66",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Masters",
			"item": [
				{
					"name": "Material Master",
					"item": [
						{
							"name": "Functional",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"MDMS_DATA\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "MDMS_DATA",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var resBody = JSON.parse(responseBody);",
													"var max = resBody.MdmsRes.inventory.Material.length - 1;",
													"         var rand = 0;",
													"         var materialCode = null;",
													"        //  var UomCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"             materialCode = resBody.MdmsRes.inventory.Material[rand].code;",
													"             pm.environment.set(\"materialCode\",materialCode);",
													"             ",
													"            //  UomCode = resBody.MdmsRes.inventory.Material[rand].baseUom.code;",
													"            //  pm.environment.set(\"UomCode\",UomCode);",
													"}",
													"",
													"postman.setNextRequest(\"Search Store\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               },\n               {\n               \t \"name\":\"Uom\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
										},
										"url": {
											"raw": "{{url}}/egov-mdms-service/v1/_search",
											"host": [
												"{{url}}"
											],
											"path": [
												"egov-mdms-service",
												"v1",
												"_search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var resBody = JSON.parse(responseBody);",
													"var max = resBody.stores.length - 1;",
													"         var rand = 0;",
													"         var materialCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"             searchStoreCode = resBody.stores[rand].code;",
													"             pm.environment.set(\"searchStoreCode\",searchStoreCode);",
													"}",
													"",
													"postman.setNextRequest(\"Create Material\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n        \"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/stores/_search?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"stores",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Material",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"postman.setNextRequest(\"Search Material\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"materials\": [\n    {\n      \"code\": \"{{materialCode}}\",\n      \"reorderLevel\": 1,\n      \"reorderQuantity\": 1,\n      \"minQuantity\": 1,\n      \"maxQuantity\": 1,\n      \"storeMapping\": [\n        {\n          \"store\": {\n            \"code\": \"{{searchStoreCode}}\"\n          },\n          \"chartofAccount\": {\n            \"glcode\": \"46130\"\n          },\n          \"active\": true\n        },\n        {\n          \"store\": {\n            \"code\": \"{{searchStoreCode}}\"\n          },\n          \"chartofAccount\": {\n            \"glcode\": \"42190\"\n          },\n          \"active\": true\n        }\n      ]\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510568486856,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\": {\n      \"id\": 1,\n      \"userName\":\"bimal\",\n      \"tenantId\":\" default\"\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materials/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materials",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Material",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"var ResMaterialCode=responseBody.materials[0].code;",
													"pm.environment.set(\"ResMaterialCode\",ResMaterialCode);",
													"",
													"pm.test(\"MaterialCode Matches\", function () {",
													"    pm.expect(ResMaterialCode).to.include(pm.environment.get(\"materialCode\"));",
													"});",
													"",
													"postman.setNextRequest(\"Update Material\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n      \t\"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materials/_search?tenantId={{tenantId}}&code={{materialCode}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materials",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "code",
													"value": "{{materialCode}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Material",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"var requestBody=JSON.parse(responseBody);",
													"// var materialClass=requestBody.materials[0].materialClass;",
													"// pm.environment.set(\"materialClass\",materialClass);",
													"postman.setNextRequest(\"Search Update Material\");",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"materials\": [\n    {\n      \"code\": \"{{materialCode}}\",\n      \"reorderLevel\": 20,\n      \"reorderQuantity\": 10,\n      \"minQuantity\": 5,\n      \"maxQuantity\": 5,\n      \"storeMapping\": [\n        {\n         \"id\": 98,\n          \"store\": {\n            \"code\": \"{{searchStoreCode}}\"\n          },\n          \"chartofAccount\": {\n            \"glcode\": \"88888\"\n          },\n          \"active\": true\n        },\n        {\n         \"id\": 99,\n          \"store\": {\n            \"code\": \"{{searchStoreCode}}\"\n          },\n          \"chartofAccount\": {\n            \"glcode\": \"42190\"\n          },\n          \"active\": false\n        }\n      ]\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510568486856,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\": {\n      \"id\": 1,\n      \"userName\":\"Bimal\",\n      \"tenantId\":\" default\"\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materials/_update?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materials",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Update Material",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var ResmaterialClass=responseBody.materials[0].materialClass;",
													"",
													"pm.environment.set(\"ResmaterialClass\",ResmaterialClass);",
													"",
													"pm.test(\"MaterialClass Matches\", function () {",
													"    pm.expect(ResmaterialClass).to.eql(pm.environment.get(\"materialClass\"));",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"create\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n      \t\"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materials/_search?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materials",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Format",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"Create Material\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Material",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"",
													"postman.setEnvironmentVariable(\"MaterialName\",\"MaterialName \"+name1);",
													"",
													"",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"var materialCode=responseBody.materials[0].code;",
													"",
													"pm.environment.set(\"materialCode\",materialCode);",
													"",
													"",
													"var ResMaterialName=responseBody.materials[0].name;",
													"",
													"pm.environment.set(\"ResMaterialName\",ResMaterialName);",
													"",
													"pm.test(\"MaterialName Matches\", function () {",
													"    pm.expect(ResMaterialName).to.include(pm.environment.get(\"MaterialName\"));",
													"});",
													"",
													"",
													"postman.setNextRequest(\"Search Material\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"materials\": [\n    {\n      \"lotControl\": true,\n      \"serialNumber\": true,\n      \"shelfLifeControl\": true,\n      \"scrapable\": true,\n      \"materialType\": {\n        \"code\": \"MT3\"\n      },\n      \"name\": \"{{MaterialName}}\",\n      \"description\": \"test desc\",\n      \"baseUom\": {\n        \"code\": \"GMS\"\n      },\n      \"inventoryType\": \"Asset\",\n      \"assetCategory\":{\n      \t\"code\":\"null\" \n      },\n      \"storeMapping\": [\n        {\n          \"store\": {\n            \"code\": \"STR01\"\n          },\n          \"department\": {\n            \"code\": \"FM\",\n            \"name\": \"Accounts\"\n          },\n          \"chartofAccount\": {\n            \"glCode\": \"46130\"\n          },\n          \"active\": true\n        },\n        {\n          \"store\": {\n            \"code\": \"STR01\"\n          },\n          \"department\": {\n            \"code\": \"CD\",\n            \"name\": \"Computer Department\"\n          },\n          \"chartofAccount\": {\n            \"glCode\": \"42190\"\n          },\n          \"active\": true\n        }\n      ],\n      \"purchaseUom\": {\n        \"code\": \"KGS\"\n      },\n      \"expenseAccount\": {\n        \"glCode\": \"44020\"\n      },\n      \"materialClass\": \"HighUsage\",\n      \"stockingUom\": {\n        \"code\": \"44020\"\n      },\n      \"minQuantity\": \"2\",\n      \"maxQuantity\": \"20\",\n      \"reorderLevel\": \"10\",\n      \"reorderQuantity\": \"8\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510568486856,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n    \t\"id\":1\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materials/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materials",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Material",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var ResMaterialCode=responseBody.materials[0].code;",
													"",
													"pm.environment.set(\"ResMaterialCode\",ResMaterialCode);",
													"",
													"pm.test(\"MaterialCode Matches\", function () {",
													"    pm.expect(ResMaterialCode).to.include(pm.environment.get(\"materialCode\"));",
													"});",
													"",
													"postman.setNextRequest(\"Update Material\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n      \t\"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materials/_search?tenantId={{tenantId}}&code={{materialCode}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materials",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "code",
													"value": "{{materialCode}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Material",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"var requestBody=JSON.parse(request.data);",
													"var materialClass=requestBody.materials[0].materialClass;",
													"",
													"",
													"pm.environment.set(\"materialClass\",materialClass);",
													"",
													"",
													"postman.setNextRequest(\"Search Update Material\");",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"materials\": [\n    {\n      \"lotControl\": true,\n      \"serialNumber\": true,\n      \"shelfLifeControl\": true,\n      \"scrapable\": true,\n      \"materialType\": {\n        \"code\": \"MT3\"\n      },\n      \"name\": \"{{MaterialName}}\",\n      \"code\": \"{{materialCode}}\",\n      \"description\": \"test desc\",\n      \"baseUom\": {\n        \"code\": \"GMS\"\n      },\n      \"inventoryType\": \"Asset\",\n      \"assetCategory\":{\n      \t\"code\":\"null\" \n      },\n      \"storeMapping\": [\n        {\n          \"store\": {\n            \"code\": \"STR01\"\n          },\n          \"department\": {\n            \"code\": \"FM\",\n            \"name\": \"Accounts\"\n          },\n          \"chartofAccount\": {\n            \"glCode\": \"46130\"\n          },\n          \"active\": true\n        },\n        {\n          \"store\": {\n            \"code\": \"STR01\"\n          },\n          \"department\": {\n            \"code\": \"CD\",\n            \"name\": \"Computer Department\"\n          },\n          \"chartofAccount\": {\n            \"glCode\": \"42190\"\n          },\n          \"active\": true\n        }\n      ],\n      \"purchaseUom\": {\n        \"code\": \"KGS\"\n      },\n      \"expenseAccount\": {\n        \"glCode\": \"44020\"\n      },\n      \"materialClass\": \"HighUsage\",\n      \"stockingUom\": {\n        \"code\": \"44020\"\n      },\n      \"minQuantity\": \"15\",\n      \"maxQuantity\": \"20\",\n      \"reorderLevel\": \"10\",\n      \"reorderQuantity\": \"8\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510568486856,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n    \t\"id\":1\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materials/_update?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materials",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Store Master",
					"item": [
						{
							"name": "Functional",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"Create Material\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Store",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"",
													"postman.setEnvironmentVariable(\"storeCode\",\"storeCode\"+name1);",
													"",
													"",
													"var name2 = Math.random().toString(26).replace(/[^a-z]+/g, '').substr(0, 5);",
													"",
													"postman.setEnvironmentVariable(\"storeName\",\"Store Name \"+name2);",
													"",
													"",
													"",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"var storeId=responseBody.stores[0].id;",
													"pm.environment.set(\"storeId\",storeId);",
													"",
													"var storeCode=responseBody.stores[0].code;",
													"pm.environment.set(\"storeCode\",storeCode);",
													"",
													"postman.setNextRequest(\"Search Store\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"stores\": [\n    {\n      \"code\": \"{{storeCode}}\",\n      \"name\": \"{{storeName}}\",\n      \"department\": {\n        \"code\": null\n      },\n      \"description\": \"test\",\n      \"officeLocation\": {\n        \"code\": \"LOC1\"\n      },\n      \"isCentralStore\": true,\n      \"billingAddress\": \"mumbai\",\n      \"deliveryAddress\": \"mumbai\",\n      \"storeInCharge\": {\n        \"code\": \"658039\"\n      },\n      \"contactNo1\": \"\",\n      \"email\": \"\",\n      \"active\": true,\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510742992622,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n      \"id\":1,\n      \"tenantId\":\"{{tenantId}}\",\n      \"userName\":\"Bimal\"\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/stores/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"stores",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var resBody = JSON.parse(responseBody);",
													"",
													"",
													"var max = resBody.stores.length - 1;",
													"         var rand = 0;",
													"         var storeCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"             materialCode = resBody.MdmsRes.inventory.Material[rand].code;",
													"             pm.environment.set(\"materialCode\",materialCode);",
													"             storeCode = resBody.stores[rand].code;",
													"             ",
													"             pm.environment.set(\"storeCode\",storeCode);",
													"}",
													"",
													"// var ResStoreCode=responseBody.stores[0].code;",
													"// pm.environment.set(\"ResStoreCode\",ResStoreCode);",
													"",
													"postman.setNextRequest(\"Create Indent\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n        \"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/stores/_search?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"stores",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"var requestBody=JSON.parse(request.data);",
													"var billingAddress=requestBody.stores[0].billingAddress;",
													"",
													"pm.environment.set(\"billingAddress\",billingAddress);",
													"",
													"",
													"postman.setNextRequest(\"Search Update Store\");",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"12345677\",\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"rajesh\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":\n    {\n    \t\"id\":\"1\"\n    }\n\n  },\n  \"stores\":[{\n\t\"tenantId\":\"{{tenantId}}\",\n\t\"id\":\"{{storeId}}\",\n  \t\"code\":\"{{storeCode}}\",\n  \t\"name\":\"cosmeticstore\",\n  \t\"description\":\"This is a cosmetic store\",\n  \t\"department\":{\n  \t\"code\":\"dept_123\",\n  \t\"name\":\"Stationary\"\n  \t},\n  \t\"storeInCharge\":{\n  \t\t\"code\":\"employee1\",\n  \t\t\"name\":\"Ram\"\n  \t},\n  \t\"officeLocation\":{\n  \t\t\"code\":\"office234\",\n  \t\t\"name\":\"Kormangala\"\n  \t},\n  \t\"billingAddress\":\"Marathhalli\",\n  \t\"deliveryAddress\":\"BTM Layout\",\n  \t\"contactNo1\":\"9368963246\",\n  \t\"contactNo2\":\"8923618863\",\n  \t\"email\":\"jantastores@gmail.com\",\n  \t\"isCentralStore\":true,\n  \t\"active\":true\n }]\n  \n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/stores/_update?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"stores",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "MDMS_DATA",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var resBody = JSON.parse(responseBody);",
													"var max = resBody.MdmsRes.inventory.Material.length - 1;",
													"         var rand = 0;",
													"         var materialCode = null;",
													"         var UomCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"             materialCode = resBody.MdmsRes.inventory.Material[rand].code;",
													"             pm.environment.set(\"materialCode\",materialCode);",
													"             ",
													"             UomCode = resBody.MdmsRes.inventory.Material[rand].baseUom.code;",
													"             pm.environment.set(\"UomCode\",UomCode);",
													"}",
													"",
													"postman.setNextRequest(\"Create Indents\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               },\n               {\n               \t \"name\":\"Uom\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
										},
										"url": {
											"raw": "{{url}}/egov-mdms-service/v1/_search",
											"host": [
												"{{url}}"
											],
											"path": [
												"egov-mdms-service",
												"v1",
												"_search"
											]
										}
									},
									"response": []
								},
								{
									"name": "MDMS_DATA",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var resBody = JSON.parse(responseBody);",
													"var max = resBody.MdmsRes.inventory.Material.length - 1;",
													"         var rand = 0;",
													"         var materialCode = null;",
													"         var UomCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"             materialCode = resBody.MdmsRes.inventory.Material[rand].code;",
													"             pm.environment.set(\"materialCode\",materialCode);",
													"             ",
													"             UomCode = resBody.MdmsRes.inventory.Material[rand].baseUom.code;",
													"             pm.environment.set(\"UomCode\",UomCode);",
													"}",
													"",
													"postman.setNextRequest(\"Create Indents\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               },\n               {\n               \t \"name\":\"Uom\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
										},
										"url": {
											"raw": "{{url}}/egov-mdms-service/v1/_search",
											"host": [
												"{{url}}"
											],
											"path": [
												"egov-mdms-service",
												"v1",
												"_search"
											]
										}
									},
									"response": []
								},
								{
									"name": "MDMS_DATA",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var resBody = JSON.parse(responseBody);",
													"var max = resBody.MdmsRes.inventory.Material.length - 1;",
													"         var rand = 0;",
													"         var materialCode = null;",
													"         var UomCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"             materialCode = resBody.MdmsRes.inventory.Material[rand].code;",
													"             pm.environment.set(\"materialCode\",materialCode);",
													"             ",
													"             UomCode = resBody.MdmsRes.inventory.Material[rand].baseUom.code;",
													"             pm.environment.set(\"UomCode\",UomCode);",
													"}",
													"",
													"postman.setNextRequest(\"Create Indents\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               },\n               {\n               \t \"name\":\"Uom\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
										},
										"url": {
											"raw": "{{url}}/egov-mdms-service/v1/_search",
											"host": [
												"{{url}}"
											],
											"path": [
												"egov-mdms-service",
												"v1",
												"_search"
											]
										}
									},
									"response": []
								},
								{
									"name": "MDMS_DATA",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var resBody = JSON.parse(responseBody);",
													"var max = resBody.MdmsRes.inventory.Material.length - 1;",
													"         var rand = 0;",
													"         var materialCode = null;",
													"         var UomCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"             materialCode = resBody.MdmsRes.inventory.Material[rand].code;",
													"             pm.environment.set(\"materialCode\",materialCode);",
													"             ",
													"             UomCode = resBody.MdmsRes.inventory.Material[rand].baseUom.code;",
													"             pm.environment.set(\"UomCode\",UomCode);",
													"}",
													"",
													"postman.setNextRequest(\"Create Indents\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               },\n               {\n               \t \"name\":\"Uom\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
										},
										"url": {
											"raw": "{{url}}/egov-mdms-service/v1/_search",
											"host": [
												"{{url}}"
											],
											"path": [
												"egov-mdms-service",
												"v1",
												"_search"
											]
										}
									},
									"response": []
								},
								{
									"name": "MDMS_DATA",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var resBody = JSON.parse(responseBody);",
													"var max = resBody.MdmsRes.inventory.Material.length - 1;",
													"         var rand = 0;",
													"         var materialCode = null;",
													"         var UomCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"             materialCode = resBody.MdmsRes.inventory.Material[rand].code;",
													"             pm.environment.set(\"materialCode\",materialCode);",
													"             ",
													"             UomCode = resBody.MdmsRes.inventory.Material[rand].baseUom.code;",
													"             pm.environment.set(\"UomCode\",UomCode);",
													"}",
													"",
													"postman.setNextRequest(\"Create Indents\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               },\n               {\n               \t \"name\":\"Uom\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
										},
										"url": {
											"raw": "{{url}}/egov-mdms-service/v1/_search",
											"host": [
												"{{url}}"
											],
											"path": [
												"egov-mdms-service",
												"v1",
												"_search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Update Store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var ResbillingAddress=responseBody.stores[0].billingAddress;",
													"",
													"pm.environment.set(\"ResbillingAddress\",ResbillingAddress);",
													"",
													"pm.test(\"StoreBillingAddress Matches\", function () {",
													"    pm.expect(ResbillingAddress).to.eql(pm.environment.get(\"billingAddress\"));",
													"});",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n        \"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/stores/_search?tenantId={{tenantId}}&ids={{storeId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"stores",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "ids",
													"value": "{{storeId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Format",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"MDMS_DATA\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "MDMS_DATA",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var resBody = JSON.parse(responseBody);",
													"",
													"",
													"var max = resBody.MdmsRes[\"common-masters\"].Department.length - 1;",
													"         var rand = 0;",
													"         var departmentCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"             departmentCode = resBody.MdmsRes[\"common-masters\"].Department[rand].code;",
													"             pm.environment.set(\"departmentCode\",departmentCode);",
													"}",
													"",
													"var max = resBody.MdmsRes.inventory.Location.length - 1;",
													"         var rand = 0;",
													"         var LocationCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"             LocationCode = resBody.MdmsRes.inventory.Location[rand].code;",
													"             pm.environment.set(\"LocationCode\",LocationCode);",
													"}",
													"",
													"postman.setNextRequest(\"Create Store\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               },\n               {\n                  \"name\":\"Uom\"\n               },\n               {\n                  \"name\":\"Location\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
										},
										"url": {
											"raw": "{{url}}/egov-mdms-service/v1/_search",
											"host": [
												"{{url}}"
											],
											"path": [
												"egov-mdms-service",
												"v1",
												"_search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Store without Store Code",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// var name1 = Math.floor(Math.random() * 10000);",
													"",
													"// postman.setEnvironmentVariable(\"storeCode\",\"storeCode\"+name1);",
													"",
													"",
													"// var name2 = Math.random().toString(26).replace(/[^a-z]+/g, '').substr(0, 5);",
													"",
													"// postman.setEnvironmentVariable(\"storeName\",\"Store Name \"+name2);",
													"",
													"",
													"",
													"",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var ResBody =JSON.parse(responseBody);",
													"var NameerrorMsg=ResBody.Errors[1].message;",
													"",
													"pm.test(\"Store Name is Unique\", function () {",
													"    pm.expect(NameerrorMsg).to.include(\"already exists\");",
													"});",
													"",
													"var CodeerrorMsg=ResBody.Errors[0].message;",
													"",
													"pm.test(\"Store Code is Unique\", function () {",
													"    pm.expect(CodeerrorMsg).to.include(\"already exists\");",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"stores\": [\n    {\n      \"code\": \"{{storeCode}}\",\n      \"name\": \"{{storeName}}\",\n      \"department\": {\n        \"code\": \"ADM\"\n      },\n      \"description\": \"test\",\n      \"officeLocation\": {\n        \"code\": \"LOC1\"\n      },\n      \"isCentralStore\": true,\n      \"billingAddress\": \"mumbai\",\n      \"deliveryAddress\": \"mumbai\",\n      \"storeInCharge\": {\n        \"code\": \"658039\"\n      },\n      \"contactNo1\": \"\",\n      \"email\": \"\",\n      \"active\": true,\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510742992622,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n      \"id\":1,\n      \"tenantId\":\"default\",\n      \"userName\":\"ramesh\"\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/stores/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"stores",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Store without Mandatory",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// var name1 = Math.floor(Math.random() * 10000);",
													"",
													"// postman.setEnvironmentVariable(\"storeCode\",\"storeCode\"+name1);",
													"",
													"",
													"// var name2 = Math.random().toString(26).replace(/[^a-z]+/g, '').substr(0, 5);",
													"",
													"// postman.setEnvironmentVariable(\"storeName\",\"Store Name \"+name2);",
													"",
													"",
													"",
													"",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var ResBody =JSON.parse(responseBody);",
													"var nullcodeName=ResBody.Errors[0].description;",
													"",
													"pm.test(\"Success Mandatory Error Message\", function () {",
													"    pm.expect(nullcodeName).to.include(\"NotNull\");",
													"});",
													"",
													"// var CodeerrorMsg=ResBody.Errors[0].message;",
													"",
													"// pm.test(\"Store Code is Unique\", function () {",
													"//     pm.expect(CodeerrorMsg).to.include(\"already exists\");",
													"// });",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"stores\": [\n    {\n      \"code\": null,\n      \"name\": null,\n      \"department\": {\n        \"code\": \"ADM\"\n      },\n      \"description\": \"test\",\n      \"officeLocation\": {\n        \"code\": \"LOC1\"\n      },\n      \"isCentralStore\": true,\n      \"billingAddress\": \"mumbai\",\n      \"deliveryAddress\": \"mumbai\",\n      \"storeInCharge\": {\n        \"code\": \"658039\"\n      },\n      \"contactNo1\": \"\",\n      \"email\": \"\",\n      \"active\": true,\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510742992622,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n      \"id\":1,\n      \"tenantId\":\"default\",\n      \"userName\":\"ramesh\"\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/stores/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"stores",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Supplier Master",
					"item": [
						{
							"name": "Format",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"Create Store\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bank Master",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\t\t\t\t\n      \t\"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/egf-master/banks/_search?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"egf-master",
												"banks",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Supplier",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"",
													"postman.setEnvironmentVariable(\"SupplierCode\",\"SUPPLIERCODE\"+name1);",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var supplierId = responseBody.suppliers[0].id;",
													"pm.environment.set(\"supplierId\",supplierId);",
													"",
													"",
													"postman.setNextRequest(\"Search Supplier\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \"RequestInfo\": {\n   \"apiId\": \"emp\",\n   \"ver\": \"1.0\",\n   \"ts\": \"12345677\",\n   \"action\": \"create\",\n   \"did\": \"1\",\n   \"key\": \"abcdkey\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"rajesh\",\n   \"authToken\": \"{{access_token}}\"\n\n  \n },\n \"suppliers\":\n[  {\n\"tenantId\":\"{{tenantId}}\",\n \t\"type\":\"INDIVIDUAL\",\n \t\"code\":\"{{SupplierCode}}\",\n \t\"active\":\"true\",\n \t\"name\":\"Anand And Sons\",\n \t\"address\":\"btm layout\",\n \t\"status\":\"ACTIVE\",\n \t\"inActiveDate\":\"15436789\",\n \t\"contactNo\":\"0132278956\",\n \t\"faxNo\":\"123788890\",\n \t\"website\":\"http://www.google.com\",\n \t\"email\":\"anand@gmail.com\",\n \t\"description\":\"supplier for cosmetics\",\n \t\"panNo\":\"DFGPV3459D\",\n \t\"tinNo\":\"34676767uiu\",\n \t\"cstNo\":\"34676767uiC\",\n \t\"vatNo\":\"34676767uiV\",\n \t\"gstNo\":\"75AGHFD7890A0Z0\",\n \t\"contactPerson\":\"anand dubay\",\n \t\"contactPersonNo\":\"8388743488\",\n \t\"bankCode\":\"CITI\",\n   \"bankBranch\":\"bankbranch1\",\n \t\"acctNo\":\"3161001500005068\",\n \t\"ifsc\":\"IFSC38899\",\n \t\"micr\":\"MICR983985\"\n \t}\n\n]\n \n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/suppliers/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"suppliers",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Supplier",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var ResSupplierCode=responseBody.suppliers[0].code;",
													"",
													"pm.environment.set(\"ResSupplierCode\",ResSupplierCode);",
													"",
													"pm.test(\"SupplierCode Matches\", function () {",
													"    pm.expect(ResSupplierCode).to.include(pm.environment.get(\"SupplierCode\"));",
													"});",
													"",
													"postman.setNextRequest(\"Update Supplier\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n      \t\"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/suppliers/_search?tenantId={{tenantId}}&codes={{SupplierCode}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"suppliers",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "codes",
													"value": "{{SupplierCode}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Supplier",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var requestBody=JSON.parse(request.data);",
													"var PanNo=requestBody.suppliers[0].panNo;",
													"",
													"",
													"pm.environment.set(\"PanNo\",PanNo);",
													"",
													"postman.setNextRequest(\"Search Update Supplier\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \"RequestInfo\": {\n   \"apiId\": \"emp\",\n   \"ver\": \"1.0\",\n   \"ts\": \"12345677\",\n   \"action\": \"update\",\n   \"did\": \"1\",\n   \"key\": \"abcdkey\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"rajesh\",\n   \"authToken\": \"{{access_token}}\"\n\n  \n },\n \"suppliers\":\n[  {\n\"tenantId\":\"{{tenantId}}\",\n\t\"id\":\"{{supplierId}}\",\n \t\"type\":\"INDIVIDUAL\",\n \t\"code\":\"{{SupplierCode}}\",\n \t\"active\":\"true\",\n \t\"name\":\"Anand And Sons\",\n \t\"address\":\"btm layout\",\n \t\"status\":\"ACTIVE\",\n \t\"inActiveDate\":\"15436789\",\n \t\"contactNo\":\"0132278956\",\n \t\"faxNo\":\"123788890\",\n \t\"website\":\"http://www.google.com\",\n \t\"email\":\"anand@gmail.com\",\n \t\"description\":\"supplier for cosmetics\",\n \t\"panNo\":\"ABCDP3456D\",\n \t\"tinNo\":\"34676767uiu\",\n \t\"cstNo\":\"34676767uiC\",\n \t\"vatNo\":\"34676767uiV\",\n \t\"gstNo\":\"75AGHFD7890A0Z0\",\n \t\"contactPerson\":\"anand dubay\",\n \t\"contactPersonNo\":\"8388743488\",\n \t\"bankCode\":\"bankcode1\",\n   \"bankBranch\":\"bankbranch1\",\n \t\"acctNo\":\"3161001500005068\",\n \t\"ifsc\":\"IFSC38899\",\n \t\"micr\":\"MICR983985\"\n \t}\n\n]\n \n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/suppliers/_update?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"suppliers",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Update Supplier",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var ResPanNo=responseBody.suppliers[0].panNo;",
													"",
													"pm.environment.set(\"ResPanNo\",ResPanNo);",
													"",
													"pm.test(\"PanNo Matches\", function () {",
													"    pm.expect(ResPanNo).to.eql(pm.environment.get(\"PanNo\"));",
													"});",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n      \t\"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/suppliers/_search?tenantId={{tenantId}}&ids={{supplierId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"suppliers",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "ids",
													"value": "{{supplierId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Functional",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"MDMS_DATA\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "MDMS_DATA",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"postman.setNextRequest(\"Create Supplier\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               },\n               {\n                  \"name\":\"Uom\"\n               },\n               {\n                  \"name\":\"Location\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
										},
										"url": {
											"raw": "{{url}}/egov-mdms-service/v1/_search",
											"host": [
												"{{url}}"
											],
											"path": [
												"egov-mdms-service",
												"v1",
												"_search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Supplier with unique code",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// var name1 = Math.floor(Math.random() * 10000);",
													"// postman.setEnvironmentVariable(\"SupplierCode\",\"SUPPLIERCODE\"+name1);",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// pm.test(\"Status code is 200\", function () {",
													"//     pm.response.to.have.status(200);",
													"// });",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var ResError = responseBody.Errors[0].description;",
													"pm.environment.set(\"ResError\",ResError);",
													"",
													"pm.test(\"Supplier Code is Unique\", function () {",
													"    pm.expect(ResError).to.include(\"suppliers\");",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \"RequestInfo\": {\n   \"apiId\": \"emp\",\n   \"ver\": \"1.0\",\n   \"ts\": \"12345677\",\n   \"action\": \"create\",\n   \"did\": \"1\",\n   \"key\": \"abcdkey\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"rajesh\",\n   \"authToken\": \"{{access_token}}\"\n\n  \n },\n \"suppliers\":\n[  {\n\"tenantId\":\"{{tenantId}}\",\n \t\"type\":\"INDIVIDUAL\",\n \t\"code\":\"{{SupplierCode}}\",\n \t\"active\":\"true\",\n \t\"name\":\"Anand And Sons\",\n \t\"address\":\"btm layout\",\n \t\"status\":\"ACTIVE\",\n \t\"inActiveDate\":\"15436789\",\n \t\"contactNo\":\"0132278956\",\n \t\"faxNo\":\"123788890\",\n \t\"website\":\"http://www.google.com\",\n \t\"email\":\"anand@gmail.com\",\n \t\"description\":\"supplier for cosmetics\",\n \t\"panNo\":\"DFGPV3459D\",\n \t\"tinNo\":\"34676767uiu\",\n \t\"cstNo\":\"34676767uiC\",\n \t\"vatNo\":\"34676767uiV\",\n \t\"gstNo\":\"75AGHFD7890A0Z0\",\n \t\"contactPerson\":\"anand dubay\",\n \t\"contactPersonNo\":\"8388743488\",\n \t\"bankCode\":\"SBI\",\n   \"bankBranch\":\"bankbranch1\",\n \t\"acctNo\":\"3161001500005068\",\n \t\"ifsc\":\"IFSC38899\",\n \t\"micr\":\"MICR983985\"\n \t}\n\n]\n \n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/suppliers/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"suppliers",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Supplier without mandatory",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// var name1 = Math.floor(Math.random() * 10000);",
													"// postman.setEnvironmentVariable(\"SupplierCode\",\"SUPPLIERCODE\"+name1);",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var ResError = responseBody.Errors[0].description;",
													"pm.environment.set(\"ResError\",ResError);",
													"",
													"pm.test(\"Supplier and bank code should not be null\", function () {",
													"    pm.expect(ResError).to.include(\"default message [may not be null]]\");",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \"RequestInfo\": {\n   \"apiId\": \"emp\",\n   \"ver\": \"1.0\",\n   \"ts\": \"12345677\",\n   \"action\": \"create\",\n   \"did\": \"1\",\n   \"key\": \"abcdkey\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"rajesh\",\n   \"authToken\": \"{{access_token}}\"\n\n  \n },\n \"suppliers\":\n[  {\n\"tenantId\":\"{{tenantId}}\",\n \t\"type\":\"INDIVIDUAL\",\n \t\"code\": null,\n \t\"active\":\"true\",\n \t\"name\":\"Anand And Sons\",\n \t\"address\":\"btm layout\",\n \t\"status\":\"ACTIVE\",\n \t\"inActiveDate\":\"15436789\",\n \t\"contactNo\":\"0132278956\",\n \t\"faxNo\":\"123788890\",\n \t\"website\":\"http://www.google.com\",\n \t\"email\":\"anand@gmail.com\",\n \t\"description\":\"supplier for cosmetics\",\n \t\"panNo\":\"DFGPV3459D\",\n \t\"tinNo\":\"34676767uiu\",\n \t\"cstNo\":\"34676767uiC\",\n \t\"vatNo\":\"34676767uiV\",\n \t\"gstNo\":\"75AGHFD7890A0Z0\",\n \t\"contactPerson\":\"anand dubay\",\n \t\"contactPersonNo\":\"8388743488\",\n \t\"bankCode\":null,\n   \"bankBranch\":\"bankbranch1\",\n \t\"acctNo\":\"3161001500005068\",\n \t\"ifsc\":\"IFSC38899\",\n \t\"micr\":\"MICR983985\"\n \t}\n\n]\n \n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/suppliers/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"suppliers",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Material Store Mapping Master",
					"item": [
						{
							"name": "Format",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"MDMS_DATA\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "MDMS_DATA",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var resBody = JSON.parse(responseBody);",
													"",
													"",
													"var max = resBody.MdmsRes.inventory.Material[0].code.length - 1;",
													"         var rand = 0;",
													"         var departmentCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"            MaterialCode = resBody.MdmsRes.inventory.Material[rand].code;",
													"             pm.environment.set(\"MaterialCode\",MaterialCode);",
													"             ",
													"         }",
													"",
													"postman.setNextRequest(\"Search Store Random\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
										},
										"url": {
											"raw": "{{url}}/egov-mdms-service/v1/_search",
											"host": [
												"{{url}}"
											],
											"path": [
												"egov-mdms-service",
												"v1",
												"_search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Store Random",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var ResStoreCode = responseBody.stores[ Math.floor(Math.random() * responseBody.stores.length) ]['code'];",
													"pm.environment.set(\"ResStoreCode\",ResStoreCode);",
													"",
													"// var ResMaterialCode = responseBody.Material[ Math.floor(Math.random() * responseBody.Material.length) ]['code'];",
													"// pm.environment.set(\"ResMaterialCode\",ResMaterialCode);",
													"",
													"",
													"",
													"postman.setNextRequest(\"Create Material Store\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n        \"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/stores/_search?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"stores",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Material Store",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// var name1 = Math.floor(Math.random() * 10000);",
													"",
													"// postman.setEnvironmentVariable(\"MaterialCode\",\"MaterialCode\"+name1);"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"var requestBody = JSON.parse(request.data);",
													"var Resid=responseBody.materialStoreMappings[0].id;",
													"pm.environment.set(\"Resid\",Resid);",
													"",
													"// var ResMaterialCode=requestBody.materialStoreMappings[0].code;",
													"// pm.environment.set(\"ResMaterialCode\",ResMaterialCode);",
													"",
													"postman.setNextRequest(\"Search Material Store\");",
													"",
													"",
													"",
													"// pm.test(\"Successful POST request\", function () {",
													"//     pm.expect(\"SUCCESSFUL\").to.include(responseBody.status);",
													"// });"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"create\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{  \n         \"id\":1\n      }\n   },\n   \"materialStoreMappings\":\n   [  \n      {  \n         \"material\":{  \n            \"code\":\"{{MaterialCode}}\"\n         },\n         \"store\":{  \n            \"code\":\"{{ResStoreCode}}\"\n         },\n         \"active\":true,\n         \"tenantId\":\"{{tenantId}}\"\n      }\n   ]\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materialstoremapping/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materialstoremapping",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Material Store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"create\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n      \t\"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materialstoremapping/_search?tenantId={{tenantId}}&ids={{Resid}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materialstoremapping",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "ids",
													"value": "{{Resid}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Store Random before Update",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var ResStoreCode = responseBody.stores[ Math.floor(Math.random() * responseBody.stores.length) ]['code'];",
													"pm.environment.set(\"ResStoreCode\",ResStoreCode);",
													"",
													"postman.setNextRequest(\"Create Material Store\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n        \"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/stores/_search?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"stores",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Material Store",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"create\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{  \n         \"id\":1\n      }\n   },\n   \"materialStoreMappings\":[  \n      {  \n         \"id\":\"{{Resid}}\",\n         \"material\":{  \n            \"code\":\"{{MaterialCode}}\"\n         },\n         \"store\":{  \n            \"code\":\"{{ResStoreCode}}\"\n         },\n         \"active\":true,\n        \"tenantId\":\"{{tenantId}}\"\n\n      }\n   ]\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materialstoremapping/_update?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materialstoremapping",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Update Material Store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t \"requestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"create\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n      \t\"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materialstoremapping/_search?tenantId={{tenantId}}&ids={{Resid}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materialstoremapping",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "ids",
													"value": "{{Resid}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Functional",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"Search Store Random\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Store Random",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var ResStoreCode = responseBody.stores[ Math.floor(Math.random() * responseBody.stores.length) ]['code'];",
													"pm.environment.set(\"ResStoreCode\",ResStoreCode);",
													"",
													"",
													"postman.setNextRequest(\"Material with invalid code\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n        \"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/stores/_search?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"stores",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Material with invalid code",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var ResErrorMTCode=responseBody.Errors[0].message;",
													"pm.environment.set(\"ResErrorMTCode\",ResErrorMTCode);",
													"",
													"pm.test(\"Material not found\", function () {",
													"    pm.expect(ResErrorMTCode).to.include(\"Given Material is invalid\");",
													"});",
													"",
													"postman.setNextRequest(\"MDMS_DATA\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"create\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{  \n         \"id\":1\n      }\n   },\n   \"materialStoreMappings\":\n   [  \n      {  \n         \"material\":{  \n            \"code\":\"testMaterial\"\n         },\n         \"store\":{  \n            \"code\":\"{{ResStoreCode}}\"\n         },\n         \"active\":true,\n         \"tenantId\":\"{{tenantId}}\"\n      }\n   ]\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materialstoremapping/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materialstoremapping",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "MDMS_DATA",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var resBody = JSON.parse(responseBody);",
													"",
													"",
													"var max = resBody.MdmsRes.inventory.Material[0].code.length - 1;",
													"         var rand = 0;",
													"         var departmentCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"            MaterialCode = resBody.MdmsRes.inventory.Material[rand].code;",
													"             pm.environment.set(\"MaterialCode\",MaterialCode);",
													"             ",
													"         }",
													"",
													"postman.setNextRequest(\"Material with invalid Store\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
										},
										"url": {
											"raw": "{{url}}/egov-mdms-service/v1/_search",
											"host": [
												"{{url}}"
											],
											"path": [
												"egov-mdms-service",
												"v1",
												"_search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Material with invalid Store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var ResErrorStore=responseBody.Errors[0].message;",
													"pm.environment.set(\"ResErrorStore\",ResErrorStore);",
													"",
													"pm.test(\"Store not found\", function () {",
													"    pm.expect(ResErrorStore).to.include(\"Store Not Found\");",
													"});",
													"",
													"postman.setNextRequest(\"Material & Store as Null\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"create\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{  \n         \"id\":1\n      }\n   },\n   \"materialStoreMappings\":\n   [  \n      {  \n         \"material\":{  \n            \"code\":\"{{MaterialCode}}\"\n         },\n         \"store\":{  \n            \"code\":\"DEE765\"\n         },\n         \"active\":true,\n         \"tenantId\":\"{{tenantId}}\"\n      }\n   ]\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materialstoremapping/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materialstoremapping",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Material & Store as Null",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var ResErrorMTStore=responseBody.Errors[0].description;",
													"pm.environment.set(\"ResErrorMTStore\",ResErrorMTStore);",
													"",
													"pm.test(\"Both Material and Store not found\", function () {",
													"    pm.expect(ResErrorMTStore).to.include(\"Please provide correct value\");",
													"});",
													"",
													"postman.setNextRequest(\"Material & Store with invalid value\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"create\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{  \n         \"id\":1\n      }\n   },\n   \"materialStoreMappings\":\n   [  \n      {  \n         \"material\":{  \n            \"code\": \"\"\n         },\n         \"store\":{  \n            \"code\": \"\"\n         },\n         \"active\":true,\n         \"tenantId\":\"{{tenantId}}\"\n      }\n   ]\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materialstoremapping/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materialstoremapping",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Material & Store with invalid value",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var ResErrorMTStorewtData=responseBody.Errors[0].message;",
													"pm.environment.set(\"ResErrorMTStorewtData\",ResErrorMTStorewtData);",
													"",
													"pm.test(\"Both Material and Store data are invalid\", function () {",
													"    pm.expect(ResErrorMTStorewtData).to.include(\"Store Not Found\");",
													"});",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"create\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{  \n         \"id\":1\n      }\n   },\n   \"materialStoreMappings\":\n   [  \n      {  \n         \"material\":{  \n            \"code\": \"MHDS22\"\n         },\n         \"store\":{  \n            \"code\": \"TT656\"\n         },\n         \"active\":true,\n         \"tenantId\":\"{{tenantId}}\"\n      }\n   ]\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materialstoremapping/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materialstoremapping",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Material Type Store Mapping Master",
					"item": [
						{
							"name": "Format",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"MDMS_DATA\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "MDMS_DATA",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"var resBody = JSON.parse(responseBody);",
													"",
													"var max = resBody.MdmsRes.inventory.MaterialType[0].code.length - 1;",
													"         var rand = 0;",
													"         var departmentCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"            MaterialTypeCode = resBody.MdmsRes.inventory.MaterialType[rand].code;",
													"             pm.environment.set(\"MaterialTypeCode\",MaterialTypeCode);",
													"             ",
													"         }",
													"",
													"postman.setNextRequest(\"Search Store Random\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
										},
										"url": {
											"raw": "{{url}}/egov-mdms-service/v1/_search",
											"host": [
												"{{url}}"
											],
											"path": [
												"egov-mdms-service",
												"v1",
												"_search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Store Random",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var ResStoreCode = responseBody.stores[ Math.floor(Math.random() * responseBody.stores.length) ]['code'];",
													"pm.environment.set(\"ResStoreCode\",ResStoreCode);",
													"",
													"postman.setNextRequest(\"Create Type Material Store\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n        \"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/stores/_search?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"stores",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Type Material Store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var ResId = responseBody.materialTypeStores[0].id;",
													"pm.environment.set(\"ResId\",ResId);",
													"",
													"postman.setNextRequest(\"Update Type Material Store\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"materialTypeStores\": [\n    {\n      \"materialType\": {\n        \"code\": \"{{MaterialTypeCode}}\"\n      },\n      \"store\": {\n        \"code\": \"{{ResStoreCode}}\"\n      },\n      \"chartofAccount\": {\n        \"glCode\": \"4209001\"\n      },\n      \"active\": true,\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510290513893,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n      \"id\":1\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materialtypestoremapping/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materialtypestoremapping",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Type Material Store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"postman.setNextRequest(\"Search Material Type Store\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"create\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{  \n         \"id\":1\n      }\n   },\n   \"materialTypeStores\":[  \n      {  \n        \"id\":\"{{ResId}}\",\n        \"tenantId\":\"{{tenantId}}\",\n         \"materialType\":{  \n            \"code\":\"{{MaterialTypeCode}}\",\n            \"name\":\"material75\"\n         },\n         \"store\":{  \n            \"code\":\"{{ResStoreCode}}\",\n            \"name\":\"store12\"\n         },\n         \"active\":false,\n         \"chartofAccount\":{  \n           \"id\":1,\n           \"glCode\":\"glcode\"\n         }\n      }\n   ]\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materialtypestoremapping/_update?tenantId={{tenantId}}&id={{ResId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materialtypestoremapping",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "id",
													"value": "{{ResId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Material Type Store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"create\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n        \"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materialtypestoremapping/_search?tenantId={{tenantId}}&id={{ResId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materialtypestoremapping",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "id",
													"value": "{{ResId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Functional",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"Search Store Random\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Store Random",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var ResStoreCode = responseBody.stores[ Math.floor(Math.random() * responseBody.stores.length) ]['code'];",
													"pm.environment.set(\"ResStoreCode\",ResStoreCode);",
													"",
													"postman.setNextRequest(\"Material Type with invalid value\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n        \"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/stores/_search?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"stores",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Material Type with invalid value",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var ResErrorMTtype = responseBody.Errors[0].message;",
													"pm.environment.set(\"ResErrorMTtype\",ResErrorMTtype);",
													"",
													"pm.test(\"Material type is invalid\", function () {",
													"    pm.expect(ResErrorMTtype).to.include(\"is invalid\");",
													"});",
													"",
													"postman.setNextRequest(\"MDMS_DATA\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"materialTypeStores\": [\n    {\n      \"materialType\": {\n        \"code\": \"text123\"\n      },\n      \"store\": {\n        \"code\": \"{{ResStoreCode}}\"\n      },\n      \"chartofAccount\": {\n        \"glCode\": \"4209001\"\n      },\n      \"active\": true,\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510290513893,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n      \"id\":1\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materialtypestoremapping/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materialtypestoremapping",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "MDMS_DATA",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// pm.test(\"Status code is 200\", function () {",
													"//     pm.response.to.have.status(200);",
													"// });",
													"",
													"",
													"var resBody = JSON.parse(responseBody);",
													"",
													"var max = resBody.MdmsRes.inventory.MaterialType[0].code.length - 1;",
													"         var rand = 0;",
													"         var departmentCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"            MaterialTypeCode = resBody.MdmsRes.inventory.MaterialType[rand].code;",
													"             pm.environment.set(\"MaterialTypeCode\",MaterialTypeCode);",
													"             ",
													"         }",
													"",
													"postman.setNextRequest(\"Material Type with invalid Store\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
										},
										"url": {
											"raw": "{{url}}/egov-mdms-service/v1/_search",
											"host": [
												"{{url}}"
											],
											"path": [
												"egov-mdms-service",
												"v1",
												"_search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Material Type with invalid Store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var ResErrorStore= responseBody.Errors[0].message;",
													"pm.environment.set(\"ResErrorStore\",ResErrorStore);",
													"",
													"pm.test(\"Store type is invalid\", function () {",
													"    pm.expect(ResErrorStore).to.include(\"not found\");",
													"});",
													"",
													"postman.setNextRequest(\"Material & Store without value\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"materialTypeStores\": [\n    {\n      \"materialType\": {\n        \"code\": \"{{MaterialTypeCode}}\"\n      },\n      \"store\": {\n        \"code\": \"RRTT44\"\n      },\n      \"chartofAccount\": {\n        \"glCode\": \"4209001\"\n      },\n      \"active\": true,\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510290513893,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n      \"id\":1\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materialtypestoremapping/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materialtypestoremapping",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Material & Store without value",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var ResErrorMTStore= responseBody.Errors[0].message;",
													"pm.environment.set(\"ResErrorMTStore\",ResErrorMTStore);",
													"",
													"pm.test(\"Material & Store type are invalid\", function () {",
													"    pm.expect(ResErrorMTStore).to.include(\"must be not be null or empty\");",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"materialTypeStores\": [\n    {\n      \"materialType\": {\n        \"code\": \"\"\n      },\n      \"store\": {\n        \"code\": \"\"\n      },\n      \"chartofAccount\": {\n        \"glCode\": \"4209001\"\n      },\n      \"active\": true,\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510290513893,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n      \"id\":1\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materialtypestoremapping/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materialtypestoremapping",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Transactions",
			"item": [
				{
					"name": "Indents",
					"item": [
						{
							"name": "Functional",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"Create Indents\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "MDMS_DATA",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var resBody = JSON.parse(responseBody);",
													"var max = resBody.MdmsRes.inventory.Material.length - 1;",
													"         var rand = 0;",
													"         var materialCode = null;",
													"         var UomCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"             materialCode = resBody.MdmsRes.inventory.Material[rand].code;",
													"             pm.environment.set(\"materialCode\",materialCode);",
													"             ",
													"             UomCode = resBody.MdmsRes.inventory.Material[rand].baseUom.code;",
													"             pm.environment.set(\"UomCode\",UomCode);",
													"}",
													"",
													"postman.setNextRequest(\"Search Store\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               },\n               {\n               \t \"name\":\"Uom\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
										},
										"url": {
											"raw": "{{url}}/egov-mdms-service/v1/_search",
											"host": [
												"{{url}}"
											],
											"path": [
												"egov-mdms-service",
												"v1",
												"_search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var resBody = JSON.parse(responseBody);",
													"",
													"",
													"var max = resBody.stores.length - 1;",
													"         var rand = 0;",
													"         var storeCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"             storeCode = resBody.stores[rand].code;",
													"             pm.environment.set(\"storeCode\",storeCode);",
													"}",
													"postman.setNextRequest(\"Create Indent\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n        \"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/stores/_search?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"stores",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Indents",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var indentStatus=responseBody.indents[0].indentStatus;",
													"var indentNumber=responseBody.indents[0].indentNumber;",
													"",
													"pm.environment.set(\"indentNumber\",indentNumber);",
													"",
													"pm.test(\"Indent created Successfully\", function () {",
													"    pm.expect(indentStatus).to.include(\"APPROVED\");",
													"});",
													"",
													"postman.setNextRequest(\"Search Indents\");",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"indents\": [\n    {\n      \"issueStore\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"indentDate\": 1512412200000,\n      \"indentNumber\": \"\",\n      \"indentType\": \"Indent\",\n      \"expectedDeliveryDate\": 1512412200000,\n      \"narration\": \"fgfd\",\n      \"materialHandOverTo\": \"fdgdf\",\n      \"designation\": \"\",\n      \"indentDetails\": [\n        {\n          \"uom\": {\n            \"code\": \"{{UomCode}}\"\n          },\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"userQuantity\": \"25\",\n          \"asset\": {\n            \"code\": \"2\"\n          }\n        },\n        {\n          \"material\": {\n            \"code\": \"MAT1\"\n          },\n          \"uom\": {\n            \"code\": \"CM\"\n          },\n          \"userQuantity\": \"3\",\n          \"asset\": {\n            \"code\": \"2\"\n          }\n        }\n      ],\n      \"indentPurpose\": \"Consumption\",\n      \"inventoryType\": \"Asset\",\n      \"tenantId\": \"default\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511527847642,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/indents/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"indents",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Indents",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var ResindentNumber=responseBody.indents[0].indentNumber;",
													"pm.environment.set(\"ResindentNumber\",ResindentNumber);",
													"",
													"pm.test(\"Indent Number Matches\", function () {",
													"    pm.expect(ResindentNumber).to.include(pm.environment.get(\"indentNumber\"));",
													"});",
													"",
													"var ResIndentId=responseBody.indents[0].id;",
													"pm.environment.set(\"ResIndentId\",ResIndentId); ",
													"",
													"var ResIndentdetailId=responseBody.indents[0].indentDetails[0].id;",
													"pm.environment.set(\"ResIndentdetailId\",ResIndentdetailId); ",
													"",
													"postman.setNextRequest(\"Update Indents\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n      \t\"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/indents/_search?tenantId={{tenantId}}&indentNumber={{indentNumber}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"indents",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "indentNumber",
													"value": "{{indentNumber}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Indents",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"var requestBody=JSON.parse(request.data);",
													"var indentPurpose=requestBody.indents[0].indentPurpose;",
													"",
													"pm.environment.set(\"indentPurpose\",indentPurpose);",
													"",
													"postman.setNextRequest(\"Search Update Indents\");",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"indents\": [\n  \t\n    {\n      \"id\":\"{{ResIndentId}}\",\n      \"issueStore\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"indentDate\": 1512412200000,\n      \"indentNumber\": \"{{ResindentNumber}}\",\n      \"indentType\": \"Indent\",\n      \"expectedDeliveryDate\": 1512412200000,\n      \"narration\": \"test\",\n      \"materialHandOverTo\": \"test\",\n      \"designation\": \"\",\n      \"indentDetails\": [\n        {\n          \"id\":\"{{ResIndentdetailId}}\",\n          \"uom\": {\n            \"code\": \"{{UomCode}}\"\n          },\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"userQuantity\": \"25\",\n          \"asset\": {\n            \"code\": \"2\"\n          }\n        },\n        {\n          \"material\": {\n            \"code\": \"MAT1\"\n          },\n          \"uom\": {\n            \"code\": \"CM\"\n          },\n          \"userQuantity\": \"3\",\n          \"asset\": {\n          \"code\": \"2\"\n          }\n        }\n      ],\n      \"indentPurpose\": \"Consumption\",\n      \"inventoryType\": \"Asset\",\n      \"tenantId\": \"default\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511527847642,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/indents/_update?tenantId={{tenantId}}&indentNumber={{indentNumber}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"indents",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "indentNumber",
													"value": "{{indentNumber}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Update Indents",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var ResindentPurpose =responseBody.indents[0].indentPurpose;",
													"pm.environment.set(\"ResindentPurpose\",ResindentPurpose);",
													"",
													"pm.test(\"Indent Purpose Matches\", function () {",
													"    pm.expect(ResindentPurpose).to.include(pm.environment.get(\"indentPurpose\"));",
													"});",
													"",
													"postman.setNextRequest(\"Logout\");",
													"",
													"",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n      \t\"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/indents/_search?tenantId={{tenantId}}&indentNumber={{indentNumber}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"indents",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "indentNumber",
													"value": "{{indentNumber}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"RequestInfo\": {\r\n    \"apiId\": \"org.egov.pgr\",\r\n    \"ver\": \"1.0\",\r\n    \"ts\": \"13-04-2017 12:13:30\",\r\n    \"action\": \"POST\",\r\n    \"did\": \"4354648646\",\r\n    \"key\": \"xyz\",\r\n    \"msgId\": \"654654\",\r\n    \"requesterId\": \"61\",\r\n    \"authToken\": \"{{access_token}}\"\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{url}}/user/_logout?access_token={{access_token}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"_logout"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{access_token}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Format",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"MDMS_DATA\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "MDMS_DATA",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var resBody = JSON.parse(responseBody);",
													"var max = resBody.MdmsRes.inventory.Material.length - 1;",
													"         var rand = 0;",
													"         var materialCode = null;",
													"         var UomCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"             materialCode = resBody.MdmsRes.inventory.Material[rand].code;",
													"             pm.environment.set(\"materialCode\",materialCode);",
													"             ",
													"             UomCode = resBody.MdmsRes.inventory.Material[rand].baseUom.code;",
													"             pm.environment.set(\"UomCode\",UomCode);",
													"}",
													"",
													"postman.setNextRequest(\"Search Store\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               },\n               {\n               \t \"name\":\"Uom\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
										},
										"url": {
											"raw": "{{url}}/egov-mdms-service/v1/_search",
											"host": [
												"{{url}}"
											],
											"path": [
												"egov-mdms-service",
												"v1",
												"_search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var resBody = JSON.parse(responseBody);",
													"",
													"",
													"var max = resBody.stores.length - 1;",
													"         var rand = 0;",
													"         var storeCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"             storeCode = resBody.stores[rand].code;",
													"             pm.environment.set(\"storeCode\",storeCode);",
													"}",
													"postman.setNextRequest(\"Create Indent\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n        \"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/stores/_search?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"stores",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "DeliveryDate greaterThan Indent Date",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var deliveryDateError=responseBody.Errors[0].message;",
													"pm.environment.set(\"deliveryDateError\",deliveryDateError);",
													"",
													"pm.test(\"DeliveryDate should be greater than indentDate Date\", function () {",
													"    pm.expect(deliveryDateError).to.include(\"should be greater than\");",
													"});",
													"postman.setNextRequest(\"Search Indents\");",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"indents\": [\n    {\n      \"issueStore\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"indentDate\": 1512412200000,\n      \"indentNumber\": \"\",\n      \"indentType\": \"Indent\",\n      \"expectedDeliveryDate\": 1460440718000,\n      \"narration\": \"fgfd\",\n      \"materialHandOverTo\": \"fdgdf\",\n      \"designation\": \"\",\n      \"indentDetails\": [\n        {\n          \"uom\": {\n            \"code\": \"{{UomCode}}\"\n          },\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"userQuantity\": \"25\",\n          \"asset\": {\n            \"code\": \"2\"\n          }\n        },\n        {\n          \"material\": {\n            \"code\": \"MAT1\"\n          },\n          \"uom\": {\n            \"code\": \"CM\"\n          },\n          \"userQuantity\": \"3\",\n          \"asset\": {\n            \"code\": \"2\"\n          }\n        }\n      ],\n      \"indentPurpose\": \"Consumption\",\n      \"inventoryType\": \"Asset\",\n      \"tenantId\": \"default\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511527847642,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/indents/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"indents",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "indentDate with futureDate",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var dateError=responseBody.Errors[0].message;",
													"pm.environment.set(\"dateError\",dateError);",
													"",
													"pm.test(\"indentDate should be Less than or Equal to Current Date\", function () {",
													"    pm.expect(dateError).to.include(\"Less than or Equal to Current Date\");",
													"});",
													"postman.setNextRequest(\"Search Indents\");",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"indents\": [\n    {\n      \"issueStore\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"indentDate\": 1523512718000,\n      \"indentNumber\": \"\",\n      \"indentType\": \"Indent\",\n      \"expectedDeliveryDate\": 1512412200000,\n      \"narration\": \"fgfd\",\n      \"materialHandOverTo\": \"fdgdf\",\n      \"designation\": \"\",\n      \"indentDetails\": [\n        {\n          \"uom\": {\n            \"code\": \"{{UomCode}}\"\n          },\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"userQuantity\": \"25\",\n          \"asset\": {\n            \"code\": \"2\"\n          }\n        },\n        {\n          \"material\": {\n            \"code\": \"MAT1\"\n          },\n          \"uom\": {\n            \"code\": \"CM\"\n          },\n          \"userQuantity\": \"3\",\n          \"asset\": {\n            \"code\": \"2\"\n          }\n        }\n      ],\n      \"indentPurpose\": \"Consumption\",\n      \"inventoryType\": \"Asset\",\n      \"tenantId\": \"default\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511527847642,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/indents/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"indents",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Project Code",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var resBody = JSON.parse(responseBody);",
													"var max = resBody.projectCodes.length - 1;",
													"         var rand = 0;",
													"        //  var projectCode = null;",
													"          var projectCodes = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"             projectCodes = resBody.projectCodes[rand].code;",
													"             pm.environment.set(\"projectCodes\",projectCodes);",
													"}",
													"",
													"postman.setNextRequest(\"Purpose Type Capital\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Cache-Control",
												"value": "no-cache"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"requestInfo\":{\r\n    \"apiId\": \"org.egov.works\",\r\n    \"ver\": \"1.0\",\r\n    \"ts\" : \"12345678\",\r\n    \"action\": \"search\",\r\n    \"did\": \"4354648646\",\r\n    \"key\": \"xyz\",\r\n    \"msgId\": \"654654\",\r\n    \"requesterId\": \"61\",\r\n    \"authToken\": \"{{access_token}}\"\r\n    }\r\n }"
										},
										"url": {
											"raw": "{{url}}/works-estimate/v1/projectcodes/_search?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"works-estimate",
												"v1",
												"projectcodes",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Purpose Type Capital",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var dateError=responseBody.Errors[0].message;",
													"pm.environment.set(\"dateError\",dateError);",
													"",
													"pm.test(\"indentDate should be Less than or Equal to Current Date\", function () {",
													"    pm.expect(dateError).to.include(\"Less than or Equal to Current Date\");",
													"});",
													"postman.setNextRequest(\"Search Indents\");",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"indents\": [\n    {\n      \"issueStore\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"indentDate\": 1512412200000,\n      \"indentNumber\": \"\",\n      \"indentType\": \"Indent\",\n      \"expectedDeliveryDate\": 1512412200000,\n      \"narration\": \"fgfd\",\n      \"materialHandOverTo\": \"fdgdf\",\n      \"designation\": \"\",\n      \"indentDetails\": [\n        {\n          \"uom\": {\n            \"code\": \"{{UomCode}}\"\n          },\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"userQuantity\": \"25\",\n          \"asset\": {\n            \"code\": \"2\"\n          }\n        },\n        {\n          \"material\": {\n            \"code\": \"MAT1\"\n          },\n          \"uom\": {\n            \"code\": \"CM\"\n          },\n          \"userQuantity\": \"3\",\n          \"projectCode\":{\n          \t\"code\":\"{{}}\"\n          },\n          \"asset\": {\n            \"code\": \"1\"\n          }\n        }\n      ],\n      \"indentPurpose\": \"Capital\",\n      \"inventoryType\": \"Asset\",\n      \"tenantId\": \"default\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511527847642,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/indents/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"indents",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Purpose Type Repair",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var dateError=responseBody.Errors[0].message;",
													"pm.environment.set(\"dateError\",dateError);",
													"",
													"pm.test(\"indentDate should be Less than or Equal to Current Date\", function () {",
													"    pm.expect(dateError).to.include(\"Less than or Equal to Current Date\");",
													"});",
													"postman.setNextRequest(\"Search Indents\");",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"indents\": [\n    {\n      \"issueStore\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"indentDate\": 1512412200000,\n      \"indentNumber\": \"\",\n      \"indentType\": \"Indent\",\n      \"expectedDeliveryDate\": 1512412200000,\n      \"narration\": \"fgfd\",\n      \"materialHandOverTo\": \"fdgdf\",\n      \"designation\": \"\",\n      \"indentDetails\": [\n        {\n          \"uom\": {\n            \"code\": \"{{UomCode}}\"\n          },\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"userQuantity\": \"25\",\n          \"asset\": {\n            \"code\": \"2\"\n          }\n        },\n        {\n          \"material\": {\n            \"code\": \"MAT1\"\n          },\n          \"uom\": {\n            \"code\": \"CM\"\n          },\n          \"userQuantity\": \"3\",\n          \"asset\": {\n            \"code\": \"\"\n          }\n        }\n      ],\n      \"indentPurpose\": \"Consumption\",\n      \"inventoryType\": \"Asset\",\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511527847642,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/indents/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"indents",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Without Indent Type",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var ResError=responseBody.Errors[0].description;",
													"pm.environment.set(\"ResError\",ResError);",
													"",
													"pm.test(\"Indent Type is Mandatory\", function () {",
													"    pm.expect(ResError).to.include(\"Unhandled Null error\");",
													"});",
													"",
													"postman.setNextRequest(\"Search Indents\");",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"indents\": [\n    {\n      \"issueStore\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"indentDate\": 1512412200000,\n      \"indentNumber\": \"\",\n      \"indentType\": \"\",\n      \"expectedDeliveryDate\": 1512412200000,\n      \"narration\": \"fgfd\",\n      \"materialHandOverTo\": \"fdgdf\",\n      \"designation\": \"\",\n      \"indentDetails\": [\n        {\n          \"uom\": {\n            \"code\": \"{{UomCode}}\"\n          },\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"userQuantity\": \"25\",\n          \"asset\": {\n            \"code\": \"2\"\n          }\n        },\n        {\n          \"material\": {\n            \"code\": \"MAT1\"\n          },\n          \"uom\": {\n            \"code\": \"CM\"\n          },\n          \"userQuantity\": \"3\",\n          \"asset\": {\n            \"code\": \"2\"\n          }\n        }\n      ],\n      \"indentPurpose\": \"Consumption\",\n      \"inventoryType\": \"Asset\",\n      \"tenantId\": \"default\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511527847642,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/indents/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"indents",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"RequestInfo\": {\r\n    \"apiId\": \"org.egov.pgr\",\r\n    \"ver\": \"1.0\",\r\n    \"ts\": \"13-04-2017 12:13:30\",\r\n    \"action\": \"POST\",\r\n    \"did\": \"4354648646\",\r\n    \"key\": \"xyz\",\r\n    \"msgId\": \"654654\",\r\n    \"requesterId\": \"61\",\r\n    \"authToken\": \"{{access_token}}\"\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{url}}/user/_logout?access_token={{access_token}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"_logout"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{access_token}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Purchase Order Indent",
					"item": [
						{
							"name": "Functional",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"MDMS_DATA\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "MDMS_DATA",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var resBody = JSON.parse(responseBody);",
													"var max = resBody.MdmsRes.inventory.Material.length - 1;",
													"         var rand = 0;",
													"         var materialCode = null;",
													"         var UomCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"             materialCode = resBody.MdmsRes.inventory.Material[rand].code;",
													"             pm.environment.set(\"materialCode\",materialCode);",
													"             ",
													"             UomCode = resBody.MdmsRes.inventory.Material[rand].baseUom.code;",
													"             pm.environment.set(\"UomCode\",UomCode);",
													"}",
													"",
													"postman.setNextRequest(\"Create Indents\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               },\n               {\n               \t \"name\":\"Uom\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
										},
										"url": {
											"raw": "{{url}}/egov-mdms-service/v1/_search",
											"host": [
												"{{url}}"
											],
											"path": [
												"egov-mdms-service",
												"v1",
												"_search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Indents",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"var requestBody = JSON.parse(request.data);",
													"",
													"var indentNumber=responseBody.indents[0].indentNumber;",
													"pm.environment.set(\"indentNumber\",indentNumber);",
													"",
													"var userQuantity=requestBody.indents[0].indentDetails[0].userQuantity;",
													"pm.environment.set(\"userQuantity\",userQuantity);",
													"",
													"postman.setNextRequest(\"Create Supplier\");",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"indents\": [\n    {\n      \"issueStore\": {\n        \"code\": \"MED001\"\n      },\n      \"indentDate\": 1512412200000,\n      \"indentNumber\": \"\",\n      \"indentType\": \"Indent\",\n      \"expectedDeliveryDate\": 1512412200000,\n      \"narration\": \"fgfd\",\n      \"materialHandOverTo\": \"fdgdf\",\n      \"designation\": \"\",\n      \"indentDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\"\n          },\n          \"userQuantity\": \"8\",\n          \"asset\": {\n            \"code\": \"2\"\n          }\n        }\n      ],\n      \"indentPurpose\": \"Consumption\",\n      \"inventoryType\": \"Asset\",\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511527847642,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/indents/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"indents",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Supplier",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"",
													"postman.setEnvironmentVariable(\"SupplierCode\",\"SUPPLIERCODE\"+name1);",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"postman.setNextRequest(\"Create Pricelists\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \"RequestInfo\": {\n   \"apiId\": \"emp\",\n   \"ver\": \"1.0\",\n   \"ts\": \"12345677\",\n   \"action\": \"create\",\n   \"did\": \"1\",\n   \"key\": \"abcdkey\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"rajesh\",\n   \"authToken\": \"{{access_token}}\"\n\n  \n },\n \"suppliers\":\n[  {\n\"tenantId\":\"{{tenantId}}\",\n \t\"type\":\"INDIVIDUAL\",\n \t\"code\":\"{{SupplierCode}}\",\n \t\"active\":\"true\",\n \t\"name\":\"Anand And Sons\",\n \t\"address\":\"btm layout\",\n \t\"status\":\"ACTIVE\",\n \t\"inActiveDate\":\"15436789\",\n \t\"contactNo\":\"0132278956\",\n \t\"faxNo\":\"123788890\",\n \t\"website\":\"http://www.google.com\",\n \t\"email\":\"anand@gmail.com\",\n \t\"description\":\"supplier for cosmetics\",\n \t\"panNo\":\"DFGPV3459D\",\n \t\"tinNo\":\"34676767uiu\",\n \t\"cstNo\":\"34676767uiC\",\n \t\"vatNo\":\"34676767uiV\",\n \t\"gstNo\":\"75AGHFD7890A0Z0\",\n \t\"contactPerson\":\"anand dubay\",\n \t\"contactPersonNo\":\"8388743488\",\n \t\"bankCode\":\"CITI\",\n   \"bankBranch\":\"bankbranch1\",\n \t\"acctNo\":\"3161001500005068\",\n \t\"ifsc\":\"IFSC38899\",\n \t\"micr\":\"MICR983985\"\n \t}\n\n]\n \n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/suppliers/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"suppliers",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Pricelists",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"postman.setEnvironmentVariable(\"rateContractNumber\",\"rateContractNumber \"+name1);",
													"",
													"var name2 = Math.floor(Math.random() * 10000);",
													"postman.setEnvironmentVariable(\"agreementNumber\",\"agreementNumber \"+name2);",
													"",
													"function randomPreviousDate(){",
													"   var startDate = new Date(2012,0,1).getTime();",
													"   var endDate =  new Date(2015,0,1).getTime();",
													"   var spaces = (endDate - startDate);",
													"   var timestamp = Math.round(Math.random() * spaces);",
													"   timestamp += startDate;",
													"   return new Date(timestamp);",
													"}",
													"",
													"function randomFutureDate(){",
													"   var startDate = new Date().getTime();",
													"   var endDate =  new Date(2019,0,1).getTime();",
													"   var spaces = (endDate - startDate);",
													"   var timestamp = Math.round(Math.random() * spaces);",
													"   timestamp += startDate;",
													"   return new Date(timestamp);",
													"}",
													"",
													"var PreviousTime = new randomPreviousDate().getTime();",
													"var FutureTime = new randomFutureDate().getTime();",
													"",
													"pm.environment.set(\"PreviousTime\",PreviousTime);",
													"pm.environment.set(\"FutureTime\",FutureTime);",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"var requestBody = JSON.parse(request.data);",
													"",
													"var unitPrice=requestBody.priceLists[0].priceListDetails[0].ratePerUnit;",
													"pm.environment.set(\"unitPrice\",unitPrice);",
													"",
													"var responsePriceList=responseBody.priceLists[0];",
													"pm.environment.set(\"responsePriceList\",JSON.stringify(responsePriceList));",
													"",
													"postman.setNextRequest(\"Create Store\");",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"priceLists\": [\n    {\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"rateContractNumber\": \"{{rateContractNumber}}\",\n      \"rateContractDate\": 1489224710000,\n      \"agreementNumber\": \"{{agreementNumber}}\",\n      \"agreementDate\": 1491903110000,\n      \"agreementStartDate\": \"{{PreviousTime}}\",\n      \"agreementEndDate\": \"{{FutureTime}}\",\n      \"active\": true,\n      \"fileStoreId\": \"\",\n      \"rateType\": \"Quotation\",\n      \"priceListDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\",\n            \"conversionFactor\": 1\n          },\n          \"ratePerUnit\": \"12\",\n          \"quantity\": \"11\"\n        }\n      ],\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1512988123880,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/pricelists/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"pricelists",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": "create pricelist"
									},
									"response": []
								},
								{
									"name": "Create Store",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"postman.setEnvironmentVariable(\"storeCode\",\"STORECODE\"+name1);",
													"",
													"var name2 = Math.random().toString(26).replace(/[^a-z]+/g, '').substr(0, 5);",
													"postman.setEnvironmentVariable(\"storeName\",\"Store Name \"+name2);",
													"",
													"",
													"",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"postman.setNextRequest(\"Create Purchase Order Generation\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"stores\": [\n    {\n      \"code\": \"{{storeCode}}\",\n      \"name\": \"{{storeName}}\",\n      \"department\": {\n        \"code\": \"ADM\"\n      },\n      \"description\": \"test\",\n      \"officeLocation\": {\n        \"code\": \"LOC1\"\n      },\n      \"isCentralStore\": true,\n      \"billingAddress\": \"mumbai\",\n      \"deliveryAddress\": \"mumbai\",\n      \"storeInCharge\": {\n        \"code\": \"658039\"\n      },\n      \"contactNo1\": \"\",\n      \"email\": \"\",\n      \"active\": true,\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510742992622,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n      \"id\":1,\n      \"tenantId\":\"default\",\n      \"userName\":\"ramesh\"\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/stores/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"stores",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Purchase Order Generation",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d5371d9b-34a8-4be3-af1d-528156296b35",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"// console.log(JSON.stringify(responseBody));",
													"",
													"var ResPurchaseIndentDetails= responseBody.purchaseOrders[0].purchaseOrderDetails[0].purchaseIndentDetails[0].indentDetail;",
													"pm.environment.set(\"ResPurchaseIndentDetails\",JSON.stringify(ResPurchaseIndentDetails));",
													"",
													"postman.setNextRequest(\"Create Purchase Order\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"purchaseOrders\": [\n    {\n      \"indentNumbers\": [\n        \"{{indentNumber}}\"\n      ],\n      \"purchaseType\":\"Indent\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1513579003518,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/purchaseorders/_preparepofromindents?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"purchaseorders",
												"_preparepofromindents"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Purchase Order",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var today = new Date().getTime();",
													"pm.environment.set(\"today\", today);"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var PurchaseOrderNumber=responseBody.purchaseOrders[0].purchaseOrderNumber;",
													"pm.environment.set(\"PurchaseOrderNumber\",PurchaseOrderNumber);",
													"",
													"var PODetailsID=responseBody.purchaseOrders[0].purchaseOrderDetails[0].id;",
													"pm.environment.set(\"PODetailsID\",PODetailsID);",
													"",
													"postman.setNextRequest(\"Search Purchase Order\");",
													"",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1513930422037,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \"purchaseOrders\": [\n    {\n      \"store\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"purchaseType\": \"Indent\",\n      \"tenantId\": \"{{tenantId}}\",\n      \"purchaseOrderDate\": \"{{today}}\",\n      \"rateType\": \"Quotation\",\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"purchaseOrderDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"material\": {\n            \"tenantId\": \"{{tenantId}}\",\n            \"code\": \"{{materialCode}}\",\n            \"name\": \"SEAL\",\n            \"description\": \"Seal\",\n            \"materialType\": {\n              \"code\": \"MAT1\"\n            },\n            \"baseUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"purchaseUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"expenseAccount\": {\n              \"glCode\": \"44001\"\n            },\n            \"minQuantity\": 2,\n            \"maxQuantity\": 20,\n            \"stockingUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"reorderLevel\": 10,\n            \"reorderQuantity\": 12,\n            \"lotControl\": false,\n            \"shelfLifeControl\": false,\n            \"serialNumber\": false\n          },\n          \"uom\": {\n            \"id\": \"1\",\n            \"tenantId\": \"default\",\n            \"code\": \"{{UomCode}}\",\n            \"description\": \"Numbers\",\n            \"baseUom\": true,\n            \"uomCategory\": \"QUANTITY\",\n            \"fromDate\": 1508740856,\n            \"toDate\": 1893436200,\n            \"conversionFactor\": 1\n          },\n          \"priceList\" : {{responsePriceList}},\n          \"unitPrice\": 12,\n          \"indentNumber\": \"{{indentNumber}}\",\n          \"userQuantity\": \"{{userQuantity}}\",\n          \"orderQuantity\": \"{{userQuantity}}\",\n          \"tenderQuantity\": 0,\n          \"receivedQuantity\": 0,\n          \"usedQuantity\": 0,\n          \"purchaseIndentDetails\": [\n            {\n              \"tenantId\": \"default\",\n              \"indentDetail\": {{ResPurchaseIndentDetails}},\n              \"quantity\": 3,\n              \"auditDetails\": {\n                \"createdBy\": \"22534\",\n                \"lastModifiedBy\": \"22534\",\n                \"createdTime\": 1514354899171,\n                \"lastModifiedTime\": 1514354899171\n              }\n            }\n          ]\n        }\n      ],\n      \"indentNumbers\": [\n        \"{{indentNumber}}\"\n      ]\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/purchaseorders/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"purchaseorders",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Purchase Order",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n      \t\"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/purchaseorders/_search?tenantId={{tenantId}}&purchaseOrderNumber={{PurchaseOrderNumber}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"purchaseorders",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "purchaseOrderNumber",
													"value": "{{PurchaseOrderNumber}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Format",
							"item": [],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Material Receipt",
					"item": [
						{
							"name": "Functional",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"MDMS_DATA\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "MDMS_DATA",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var resBody = JSON.parse(responseBody);",
													"var max = resBody.MdmsRes.inventory.Material.length - 1;",
													"         var rand = 0;",
													"         var materialCode = null;",
													"         var UomCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"             materialCode = resBody.MdmsRes.inventory.Material[rand].code;",
													"             pm.environment.set(\"materialCode\",materialCode);",
													"             ",
													"             UomCode = resBody.MdmsRes.inventory.Material[rand].baseUom.code;",
													"             pm.environment.set(\"UomCode\",UomCode);",
													"}",
													"",
													"postman.setNextRequest(\"Create Indents\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               },\n               {\n               \t \"name\":\"Uom\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
										},
										"url": {
											"raw": "{{url}}/egov-mdms-service/v1/_search",
											"host": [
												"{{url}}"
											],
											"path": [
												"egov-mdms-service",
												"v1",
												"_search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Indents",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"var requestBody = JSON.parse(request.data);",
													"",
													"var indentNumber=responseBody.indents[0].indentNumber;",
													"pm.environment.set(\"indentNumber\",indentNumber);",
													"",
													"var userQuantity=requestBody.indents[0].indentDetails[0].userQuantity;",
													"pm.environment.set(\"userQuantity\",userQuantity);",
													"",
													"postman.setNextRequest(\"Create Supplier\");",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"indents\": [\n    {\n      \"issueStore\": {\n        \"code\": \"MED001\"\n      },\n      \"indentDate\": 1512412200000,\n      \"indentNumber\": \"\",\n      \"indentType\": \"Indent\",\n      \"expectedDeliveryDate\": 1512412200000,\n      \"narration\": \"fgfd\",\n      \"materialHandOverTo\": \"fdgdf\",\n      \"designation\": \"\",\n      \"indentDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\"\n          },\n          \"userQuantity\": \"8\",\n          \"asset\": {\n            \"code\": \"2\"\n          }\n        }\n      ],\n      \"indentPurpose\": \"Consumption\",\n      \"inventoryType\": \"Asset\",\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511527847642,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/indents/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"indents",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Supplier",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"",
													"postman.setEnvironmentVariable(\"SupplierCode\",\"SUPPLIERCODE\"+name1);",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"postman.setNextRequest(\"Create Pricelists\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \"RequestInfo\": {\n   \"apiId\": \"emp\",\n   \"ver\": \"1.0\",\n   \"ts\": \"12345677\",\n   \"action\": \"create\",\n   \"did\": \"1\",\n   \"key\": \"abcdkey\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"rajesh\",\n   \"authToken\": \"{{access_token}}\"\n\n  \n },\n \"suppliers\":\n[  {\n\"tenantId\":\"{{tenantId}}\",\n \t\"type\":\"INDIVIDUAL\",\n \t\"code\":\"{{SupplierCode}}\",\n \t\"active\":\"true\",\n \t\"name\":\"Anand And Sons\",\n \t\"address\":\"btm layout\",\n \t\"status\":\"ACTIVE\",\n \t\"inActiveDate\":\"15436789\",\n \t\"contactNo\":\"0132278956\",\n \t\"faxNo\":\"123788890\",\n \t\"website\":\"http://www.google.com\",\n \t\"email\":\"anand@gmail.com\",\n \t\"description\":\"supplier for cosmetics\",\n \t\"panNo\":\"DFGPV3459D\",\n \t\"tinNo\":\"34676767uiu\",\n \t\"cstNo\":\"34676767uiC\",\n \t\"vatNo\":\"34676767uiV\",\n \t\"gstNo\":\"75AGHFD7890A0Z0\",\n \t\"contactPerson\":\"anand dubay\",\n \t\"contactPersonNo\":\"8388743488\",\n \t\"bankCode\":\"CITI\",\n   \"bankBranch\":\"bankbranch1\",\n \t\"acctNo\":\"3161001500005068\",\n \t\"ifsc\":\"IFSC38899\",\n \t\"micr\":\"MICR983985\"\n \t}\n\n]\n \n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/suppliers/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"suppliers",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Pricelists",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"postman.setEnvironmentVariable(\"rateContractNumber\",\"rateContractNumber \"+name1);",
													"",
													"var name2 = Math.floor(Math.random() * 10000);",
													"postman.setEnvironmentVariable(\"agreementNumber\",\"agreementNumber \"+name2);",
													"",
													"function randomPreviousDate(){",
													"   var startDate = new Date(2012,0,1).getTime();",
													"   var endDate =  new Date(2015,0,1).getTime();",
													"   var spaces = (endDate - startDate);",
													"   var timestamp = Math.round(Math.random() * spaces);",
													"   timestamp += startDate;",
													"   return new Date(timestamp);",
													"}",
													"",
													"function randomFutureDate(){",
													"   var startDate = new Date().getTime();",
													"   var endDate =  new Date(2019,0,1).getTime();",
													"   var spaces = (endDate - startDate);",
													"   var timestamp = Math.round(Math.random() * spaces);",
													"   timestamp += startDate;",
													"   return new Date(timestamp);",
													"}",
													"",
													"var PreviousTime = new randomPreviousDate().getTime();",
													"var FutureTime = new randomFutureDate().getTime();",
													"",
													"pm.environment.set(\"PreviousTime\",PreviousTime);",
													"pm.environment.set(\"FutureTime\",FutureTime);",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"var requestBody = JSON.parse(request.data);",
													"",
													"var unitPrice=requestBody.priceLists[0].priceListDetails[0].ratePerUnit;",
													"pm.environment.set(\"unitPrice\",unitPrice);",
													"",
													"var responsePriceList=responseBody.priceLists[0];",
													"pm.environment.set(\"responsePriceList\",JSON.stringify(responsePriceList));",
													"",
													"postman.setNextRequest(\"Create Store\");",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"priceLists\": [\n    {\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"rateContractNumber\": \"{{rateContractNumber}}\",\n      \"rateContractDate\": 1489224710000,\n      \"agreementNumber\": \"{{agreementNumber}}\",\n      \"agreementDate\": 1491903110000,\n      \"agreementStartDate\": \"{{PreviousTime}}\",\n      \"agreementEndDate\": \"{{FutureTime}}\",\n      \"active\": true,\n      \"fileStoreId\": \"\",\n      \"rateType\": \"Quotation\",\n      \"priceListDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\",\n            \"conversionFactor\": 1\n          },\n          \"ratePerUnit\": \"12\",\n          \"quantity\": \"11\"\n        }\n      ],\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1512988123880,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/pricelists/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"pricelists",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": "create pricelist"
									},
									"response": []
								},
								{
									"name": "Create Store",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"postman.setEnvironmentVariable(\"storeCode\",\"STORECODE\"+name1);",
													"",
													"var name2 = Math.random().toString(26).replace(/[^a-z]+/g, '').substr(0, 5);",
													"postman.setEnvironmentVariable(\"storeName\",\"Store Name \"+name2);",
													"",
													"",
													"",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"postman.setNextRequest(\"Create Purchase Order Generation\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"stores\": [\n    {\n      \"code\": \"{{storeCode}}\",\n      \"name\": \"{{storeName}}\",\n      \"department\": {\n        \"code\": \"ADM\"\n      },\n      \"description\": \"test\",\n      \"officeLocation\": {\n        \"code\": \"LOC1\"\n      },\n      \"isCentralStore\": true,\n      \"billingAddress\": \"mumbai\",\n      \"deliveryAddress\": \"mumbai\",\n      \"storeInCharge\": {\n        \"code\": \"658039\"\n      },\n      \"contactNo1\": \"\",\n      \"email\": \"\",\n      \"active\": true,\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510742992622,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n      \"id\":1,\n      \"tenantId\":\"default\",\n      \"userName\":\"ramesh\"\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/stores/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"stores",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Purchase Order Generation",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"// console.log(JSON.stringify(responseBody));",
													"",
													"var ResPurchaseIndentDetails= responseBody.purchaseOrders[0].purchaseOrderDetails[0].purchaseIndentDetails[0];",
													"pm.environment.set(\"ResPurchaseIndentDetails\",JSON.stringify(ResPurchaseIndentDetails));",
													"",
													"postman.setNextRequest(\"Create Purchase Order\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"purchaseOrders\": [\n    {\n      \"indentNumbers\": [\n        \"{{indentNumber}}\"\n      ],\n      \"purchaseType\":\"Indent\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1513579003518,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/purchaseorders/_preparepofromindents?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"purchaseorders",
												"_preparepofromindents"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Purchase Order",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var today = new Date().getTime();",
													"pm.environment.set(\"today\", today);"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var PurchaseOrderNumber=responseBody.purchaseOrders[0].purchaseOrderNumber;",
													"pm.environment.set(\"PurchaseOrderNumber\",PurchaseOrderNumber);",
													"",
													"var PODetailsID=responseBody.purchaseOrders[0].purchaseOrderDetails[0].id;",
													"pm.environment.set(\"PODetailsID\",PODetailsID);",
													"",
													"postman.setNextRequest(\"Create Material Receipt Note\");",
													"",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1513930422037,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \"purchaseOrders\": [\n    {\n      \"store\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"purchaseType\": \"Indent\",\n      \"tenantId\": \"{{tenantId}}\",\n      \"purchaseOrderDate\": \"{{today}}\",\n      \"rateType\": \"Quotation\",\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"purchaseOrderDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"material\": {\n            \"tenantId\": \"{{tenantId}}\",\n            \"code\": \"{{materialCode}}\",\n            \"name\": \"SEAL\",\n            \"description\": \"Seal\",\n            \"materialType\": {\n              \"code\": \"MAT1\"\n            },\n            \"baseUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"purchaseUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"expenseAccount\": {\n              \"glCode\": \"44001\"\n            },\n            \"minQuantity\": 2,\n            \"maxQuantity\": 20,\n            \"stockingUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"reorderLevel\": 10,\n            \"reorderQuantity\": 12,\n            \"lotControl\": false,\n            \"shelfLifeControl\": false,\n            \"serialNumber\": false\n          },\n          \"uom\": {\n            \"id\": \"1\",\n            \"tenantId\": \"default\",\n            \"code\": \"{{UomCode}}\",\n            \"description\": \"Numbers\",\n            \"baseUom\": true,\n            \"uomCategory\": \"QUANTITY\",\n            \"fromDate\": 1508740856,\n            \"toDate\": 1893436200,\n            \"conversionFactor\": 1\n          },\n          \"priceList\" : {{responsePriceList}},\n          \"unitPrice\": 12,\n          \"indentNumber\": \"{{indentNumber}}\",\n          \"userQuantity\": \"{{userQuantity}}\",\n          \"orderQuantity\": \"{{userQuantity}}\",\n          \"tenderQuantity\": 0,\n          \"receivedQuantity\": 0,\n          \"usedQuantity\": 0,\n          \"purchaseIndentDetails\": [\n            {\n              \"tenantId\": \"default\",\n              \"indentDetail\": {\n                \"id\": \"158\",\n                \"tenantId\": \"default\",\n                \"material\": {\n                  \"tenantId\": \"default\",\n                  \"code\": \"{{materialCode}}\",\n                  \"name\": \"SEAL\",\n                  \"description\": \"Seal\",\n                  \"materialType\": {\n                    \"code\": \"MT1\"\n                  },\n                  \"baseUom\": {\n                    \"id\": \"1\",\n                    \"tenantId\": \"default\",\n                    \"code\": \"NOS\",\n                    \"description\": \"Numbers\",\n                    \"baseUom\": true,\n                    \"uomCategory\": \"QUANTITY\",\n                    \"fromDate\": 1508740856,\n                    \"toDate\": 1893436200,\n                    \"conversionFactor\": 1\n                  },\n                  \"purchaseUom\": {\n                    \"id\": \"1\",\n                    \"tenantId\": \"default\",\n                    \"code\": \"NOS\",\n                    \"description\": \"Numbers\",\n                    \"baseUom\": true,\n                    \"uomCategory\": \"QUANTITY\",\n                    \"fromDate\": 1508740856,\n                    \"toDate\": 1893436200,\n                    \"conversionFactor\": 1\n                  },\n                  \"expenseAccount\": {\n                    \"glCode\": \"44001\"\n                  },\n                  \"minQuantity\": 2,\n                  \"maxQuantity\": 20,\n                  \"stockingUom\": {\n                    \"id\": \"1\",\n                    \"tenantId\": \"default\",\n                    \"code\": \"NOS\",\n                    \"description\": \"Numbers\",\n                    \"baseUom\": true,\n                    \"uomCategory\": \"QUANTITY\",\n                    \"fromDate\": 1508740856,\n                    \"toDate\": 1893436200,\n                    \"conversionFactor\": 1\n                  },\n                  \"reorderLevel\": 10,\n                  \"reorderQuantity\": 12,\n                  \"lotControl\": false,\n                  \"shelfLifeControl\": false,\n                  \"serialNumber\": false\n                },\n                \"uom\": {\n                  \"code\": \"NOS\",\n                  \"baseUom\": false\n                },\n                \"projectCode\": {\n                  \n                },\n                \"asset\": {\n                  \"code\": \"2\"\n                },\n                \"indentQuantity\": 3,\n                \"totalProcessedQuantity\": 0,\n                \"indentIssuedQuantity\": 0,\n                \"poOrderedQuantity\": 0,\n                \"interstoreRequestQuantity\": 0\n              },\n              \"quantity\": 3,\n              \"auditDetails\": {\n                \"createdBy\": \"22534\",\n                \"lastModifiedBy\": \"22534\",\n                \"createdTime\": 1514354899171,\n                \"lastModifiedTime\": 1514354899171\n              }\n            }\n          ]\n        }\n      ],\n      \"indentNumbers\": [\n        \"{{indentNumber}}\"\n      ]\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/purchaseorders/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"purchaseorders",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Material Receipt Note",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var userReceivedQty = pm.environment.get(\"userQuantity\");",
													"var rQ = (userReceivedQty) - 1;",
													"pm.environment.set(\"userReceivedQty\", rQ);",
													"",
													"",
													"var userAcceptedQty = pm.environment.get(\"userQuantity\");",
													"var rQ = (userAcceptedQty) - 2;",
													"pm.environment.set(\"userAcceptedQty\", rQ);"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var materialReceiptMRN = responseBody.MaterialReceipt[0].mrnNumber;",
													"pm.environment.set(\"materialReceiptMRN\",materialReceiptMRN);",
													"",
													"postman.setNextRequest(\"Search Material Receipt Note\");",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510290513893,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\": {\n      \"id\": 73\n    }\n  },\n  \"materialReceipt\": [\n    {\n      \"receivingStore\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"receiptDate\": \"{{today}}\",\n      \"receiptType\": \"PURCHASE RECEIPT\",\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"supplierBillNo\": \"AB-PO-2017\",\n      \"supplierBillDate\": 1512365762000,\n      \"challanNo\": \"CD-LK-2017\",\n      \"challanDate\": 1512365762000,\n      \"description\": \"description for receipt\",\n      \"paymentTerms\": \"paymentTerms for receipt\",\n      \"receivedBy\": \"Bimal\",\n      \"designation\": \"ASST-ENG\",\n      \"inspectedBy\": \"ramesh\",\n      \"inspectionDate\": 45698756,\n      \"inspectionRemarks\": \"inspection remarks for receipt\",\n      \"receiptDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\"\n          },\n          \"userReceivedQty\": \"{{userReceivedQty}}\",\n          \"userAcceptedQty\": \"{{userAcceptedQty}}\",\n          \"unitRate\": 5,\n          \"isScrapItem\":\"true\",\n          \"rejectionRemark\": \"rejection remark for receipt detail\",\n          \"purchaseOrderDetail\": {\n            \"id\": \"{{PODetailsID}}\"\n          },\n         \"receiptDetailsAddnInfo\": [\n            {\n              \"userQuantity\": \"{{userAcceptedQty}}\",\n              \"manufactureDate\": 12345698,\n              \"lotNo\":\"LOT-01\",\n              \"serialNo\": \"SR-02\",\n              \"expiryDate\": 1544509979000,\n              \"batchNo\": \"BA-NO-2017\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/receiptnotes/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"receiptnotes",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Material Receipt Note",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"12345677\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"rajesh\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n    \t\"id\":1,\n    \t\"tenantId\":\"default\",\n    \t\"username\":\"abc\"\n    }\n  }\n}\n"
										},
										"url": {
											"raw": "{{url}}/inventory-services/receiptnotes/_search?tenantId={{tenantId}}&mrnNumber={{materialReceiptMRN}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"receiptnotes",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "mrnNumber",
													"value": "{{materialReceiptMRN}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Format",
							"item": [],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Opening Balance",
					"item": [
						{
							"name": "Functional",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"Create Opening Balance\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "MDMS_DATA",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var resBody = JSON.parse(responseBody);",
													"var max = resBody.MdmsRes.inventory.Material.length - 1;",
													"         var rand = 0;",
													"         var materialCode = null;",
													"         var UomCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"             materialCode = resBody.MdmsRes.inventory.Material[rand].code;",
													"             pm.environment.set(\"materialCode\",materialCode);",
													"             ",
													"             UomCode = resBody.MdmsRes.inventory.Material[rand].baseUom.code;",
													"             pm.environment.set(\"UomCode\",UomCode);",
													"}",
													"",
													"postman.setNextRequest(\"Create Indents\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               },\n               {\n               \t \"name\":\"Uom\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
										},
										"url": {
											"raw": "{{url}}/egov-mdms-service/v1/_search",
											"host": [
												"{{url}}"
											],
											"path": [
												"egov-mdms-service",
												"v1",
												"_search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var resBody = JSON.parse(responseBody);",
													"var max = resBody.stores.length - 1;",
													"         var rand = 0;",
													"         var storeCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"             storeCode = resBody.stores[rand].code;",
													"             pm.environment.set(\"storeCode\",storeCode);",
													"}",
													"",
													"postman.setNextRequest(\"Create Indent\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n        \"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/stores/_search?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"stores",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Opening Balance",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var mrnNumber = responseBody.materialReceipt[0].mrnNumber;",
													"pm.environment.set(\"mrnNumber\",mrnNumber);",
													"",
													"postman.setNextRequest(\"Search Opening Balance\");",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"materialReceipt\": [\n    {\n      \"receivingStore\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"financialYear\": \"2017-18\",\n      \"receiptDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\",\n            \"description\": \"\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\"\n          },\n          \"userReceivedQty\": \"10\",\n          \"unitRate\": \"5\",\n          \"remarks\": \"test\",\n          \"receiptDetailsAddnInfo\": [\n            {\n            \t\"lotNo\":123,\n              \"receivedDate\": \"1510117560000\",\n              \"expiryDate\": \"1544520710000\"\n            }\n          ]\n        }\n      ],\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510549656506,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{  \n         \"id\":1,\n         \"userName\":\"testUser\",\n         \"name\":\"test user\"\n      }\n   \n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/openingbalance/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"openingbalance",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Opening Balance",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"var requestBody=JSON.parse(request.data);",
													"",
													"var ResmrnNumber=responseBody.materialReceipt[0].mrnNumber;",
													"pm.environment.set(\"ResmrnNumber\",ResmrnNumber);",
													"",
													"pm.test(\"MrnNumber Matches\", function () {",
													"    pm.expect(ResmrnNumber).to.include(pm.environment.get(\"mrnNumber\"));",
													"});",
													"",
													"var materialReceiptId=responseBody.materialReceipt[0].id;",
													"pm.environment.set(\"materialReceiptId\",materialReceiptId);",
													"",
													"var receiptDetailsid=responseBody.materialReceipt[0].receiptDetails[0].id;",
													"pm.environment.set(\"receiptDetailsid\",receiptDetailsid);",
													"",
													"var receiptDetailsAddnInfoId=responseBody.materialReceipt[0].receiptDetails[0].receiptDetailsAddnInfo[0].id;",
													"pm.environment.set(\"receiptDetailsAddnInfoId\",receiptDetailsAddnInfoId);",
													"",
													"postman.setNextRequest(\"Update Opening Balance\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510400603623,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{  \n         \"id\":1,\n         \"userName\":\"testUser\",\n         \"name\":\"test user\"\n      }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/openingbalance/_search?tenantId={{tenantId}}&mrnNumber={{mrnNumber}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"openingbalance",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "mrnNumber",
													"value": "{{mrnNumber}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Opening Balance",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"var userReceivedQuantity=responseBody.materialReceipt[0].receiptDetails[0].userReceivedQty;",
													"pm.environment.set(\"userReceivedQuantity\",userReceivedQuantity);",
													"",
													"postman.setNextRequest(\"Search Update Opening Balance\");",
													"",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"materialReceipt\": [\n    {\n    \"id\": \"{{materialReceiptId}}\",\n    \"mrnNumber\": \"{{mrnNumber}}\",\n      \"receivingStore\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"financialYear\": \"2017-18\",\n      \"receiptDetails\": [\n        {\n         \"id\":\"{{receiptDetailsid}}\",\n          \"material\": {\n            \"code\": \"{{materialCode}}\",\n            \"description\": \"\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\"\n          },\n          \"mrnNumber\": \"{{mrnNumber}}\",\n          \"userReceivedQty\": \"70\",\n          \"unitRate\": \"5\",\n          \"remarks\": \"ABCD\",\n          \"receiptDetailsAddnInfo\": [\n            {\n            \t\"id\":\"{{receiptDetailsAddnInfoId}}\",\n            \t\"lotNo\":\"333\",\n              \"receivedDate\": \"1510117560000\",\n              \"expiryDate\": \"1544520710000\"\n            }\n          ]\n        }\n      ],\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510549656506,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{  \n         \"id\":1,\n         \"userName\":\"testUser\",\n         \"name\":\"test user\"\n      }\n   \n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/openingbalance/_update?tenantId={{tenantId}}&mrnNumber={{mrnNumber}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"openingbalance",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "mrnNumber",
													"value": "{{mrnNumber}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Update Opening Balance",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var ResuserReceivedQuantity=responseBody.materialReceipt[0].receiptDetails[0].userReceivedQty;",
													"pm.environment.set(\"ResuserReceivedQuantity\",ResuserReceivedQuantity);",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510400603623,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{  \n         \"id\":1,\n         \"userName\":\"testUser\",\n         \"name\":\"test user\"\n      }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/openingbalance/_search?tenantId={{tenantId}}&mrnNumber={{mrnNumber}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"openingbalance",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "mrnNumber",
													"value": "{{mrnNumber}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Format",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"Create Opening Balance\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Opening Balance",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var mrnNumber = responseBody.materialReceipt[0].mrnNumber;",
													"pm.environment.set(\"mrnNumber\",mrnNumber);",
													"",
													"",
													"",
													"",
													"postman.setNextRequest(\"Search Opening Balance\");",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"materialReceipt\": [\n    {\n      \"receivingStore\": {\n        \"code\": \"new123\"\n      },\n      \"financialYear\": \"2018-19\",\n      \"receiptDetails\": [\n        {\n          \"material\": {\n            \"code\": \"MAT2\",\n            \"description\": \"\"\n          },\n          \"uom\": {\n            \"code\": \"NOS\"\n          },\n          \"userReceivedQty\": \"5\",\n          \"unitRate\": \"5\",\n          \"remarks\": \"ABCD\",\n          \"receiptDetailsAddnInfo\": [\n            {\n            \t\"lotNo\":123,\n              \"receivedDate\": \"1510117560000\",\n              \"expiryDate\": \"1544520710000\"\n            }\n          ]\n        }\n      ],\n      \"tenantId\": \"default\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510549656506,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{  \n         \"id\":1,\n         \"userName\":\"testUser\",\n         \"name\":\"test user\"\n      }\n   \n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/openingbalance/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"openingbalance",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Opening Balance",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"var requestBody=JSON.parse(request.data);",
													"",
													"var ResmrnNumber=responseBody.materialReceipt[0].mrnNumber;",
													"pm.environment.set(\"ResmrnNumber\",ResmrnNumber);",
													"",
													"pm.test(\"MrnNumber Matches\", function () {",
													"    pm.expect(ResmrnNumber).to.include(pm.environment.get(\"mrnNumber\"));",
													"});",
													"",
													"var materialReceiptId=responseBody.materialReceipt[0].id;",
													"pm.environment.set(\"materialReceiptId\",materialReceiptId);",
													"",
													"var receiptDetailsid=responseBody.materialReceipt[0].receiptDetails[0].id;",
													"pm.environment.set(\"receiptDetailsid\",receiptDetailsid);",
													"",
													"var receiptDetailsAddnInfoId=responseBody.materialReceipt[0].receiptDetails[0].receiptDetailsAddnInfo[0].id;",
													"pm.environment.set(\"receiptDetailsAddnInfoId\",receiptDetailsAddnInfoId);",
													"",
													"",
													"// pm.environment.set(\"receiptDetails\",responseBody.materialReceipt[0].receiptDetails[0].id);",
													"",
													"",
													"postman.setNextRequest(\"Update Opening Balance\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510400603623,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{  \n         \"id\":1,\n         \"userName\":\"testUser\",\n         \"name\":\"test user\"\n      }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/openingbalance/_search?tenantId={{tenantId}}&mrnNumber={{mrnNumber}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"openingbalance",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "mrnNumber",
													"value": "{{mrnNumber}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Price Lists",
					"item": [
						{
							"name": "Functional",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"Create Pricelists\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "MDMS_DATA",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var resBody = JSON.parse(responseBody);",
													"var max = resBody.MdmsRes.inventory.Material.length - 1;",
													"         var rand = 0;",
													"         var materialCode = null;",
													"         var UomCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"             materialCode = resBody.MdmsRes.inventory.Material[rand].code;",
													"             pm.environment.set(\"materialCode\",materialCode);",
													"             ",
													"             UomCode = resBody.MdmsRes.inventory.Material[rand].baseUom.code;",
													"             pm.environment.set(\"UomCode\",UomCode);",
													"}",
													"postman.setNextRequest(\"Create Indents\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               },\n               {\n               \t \"name\":\"Uom\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
										},
										"url": {
											"raw": "{{url}}/egov-mdms-service/v1/_search",
											"host": [
												"{{url}}"
											],
											"path": [
												"egov-mdms-service",
												"v1",
												"_search"
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Create Supplier",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"postman.setEnvironmentVariable(\"SupplierCode\",\"SUPPLIERCODE\"+name1);",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"postman.setNextRequest(\"Search Supplier\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \"RequestInfo\": {\n   \"apiId\": \"emp\",\n   \"ver\": \"1.0\",\n   \"ts\": \"12345677\",\n   \"action\": \"create\",\n   \"did\": \"1\",\n   \"key\": \"abcdkey\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"rajesh\",\n   \"authToken\": \"{{access_token}}\"\n\n  \n },\n \"suppliers\":\n[  {\n\"tenantId\":\"{{tenantId}}\",\n \t\"type\":\"INDIVIDUAL\",\n \t\"code\":\"{{SupplierCode}}\",\n \t\"active\":\"true\",\n \t\"name\":\"Anand And Sons\",\n \t\"address\":\"btm layout\",\n \t\"status\":\"ACTIVE\",\n \t\"inActiveDate\":\"15436789\",\n \t\"contactNo\":\"0132278956\",\n \t\"faxNo\":\"123788890\",\n \t\"website\":\"http://www.google.com\",\n \t\"email\":\"anand@gmail.com\",\n \t\"description\":\"supplier for cosmetics\",\n \t\"panNo\":\"DFGPV3459D\",\n \t\"tinNo\":\"34676767uiu\",\n \t\"cstNo\":\"34676767uiC\",\n \t\"vatNo\":\"34676767uiV\",\n \t\"gstNo\":\"75AGHFD7890A0Z0\",\n \t\"contactPerson\":\"anand dubay\",\n \t\"contactPersonNo\":\"8388743488\",\n \t\"bankCode\":\"CITI\",\n   \"bankBranch\":\"bankbranch1\",\n \t\"acctNo\":\"3161001500005068\",\n \t\"ifsc\":\"IFSC38899\",\n \t\"micr\":\"MICR983985\"\n \t}\n\n]\n \n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/suppliers/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"suppliers",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Pricelists",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"postman.setEnvironmentVariable(\"rateContractNumber\",\"rateContractNumber \"+name1);",
													"",
													"var name2 = Math.floor(Math.random() * 10000);",
													"postman.setEnvironmentVariable(\"agreementNumber\",\"agreementNumber \"+name2);",
													"",
													"function randomPreviousDate(){",
													"   var startDate = new Date(2012,0,1).getTime();",
													"   var endDate =  new Date(2015,0,1).getTime();",
													"   var spaces = (endDate - startDate);",
													"   var timestamp = Math.round(Math.random() * spaces);",
													"   timestamp += startDate;",
													"   return new Date(timestamp);",
													"}",
													"",
													"function randomFutureDate(){",
													"   var startDate = new Date().getTime();",
													"   var endDate =  new Date(2019,0,1).getTime();",
													"   var spaces = (endDate - startDate);",
													"   var timestamp = Math.round(Math.random() * spaces);",
													"   timestamp += startDate;",
													"   return new Date(timestamp);",
													"}",
													"",
													"",
													"var PreviousTime = new randomPreviousDate().getTime();",
													"",
													"var FutureTime = new randomFutureDate().getTime();",
													"",
													"pm.environment.set(\"PreviousTime\",PreviousTime);",
													"pm.environment.set(\"FutureTime\",FutureTime);",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var rateContractNumber = responseBody.priceLists[0].rateContractNumber;",
													"pm.environment.set(\"rateContractNumber\",rateContractNumber);",
													"",
													"var RespricelistId = responseBody.priceLists[0].id;",
													"pm.environment.set(\"RespricelistId\",RespricelistId);",
													"",
													"var RespricelistDetailsId = responseBody.priceLists[0].priceListDetails[0].id;",
													"pm.environment.set(\"RespricelistDetailsId\",RespricelistDetailsId);",
													"",
													"",
													"postman.setNextRequest(\"Search Pricelists\");",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"priceLists\": [\n    {\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"rateContractNumber\": \"{{rateContractNumber}}\",\n      \"rateContractDate\": 1489224710000,\n      \"agreementNumber\": \"{{agreementNumber}}\",\n      \"agreementDate\": 1491903110000,\n      \"agreementStartDate\": \"{{PreviousTime}}\",\n      \"agreementEndDate\": \"{{FutureTime}}\",\n      \"active\": true,\n      \"fileStoreId\": \"\",\n      \"rateType\": \"One Time Tender\",\n      \"priceListDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\",\n            \"conversionFactor\": 1\n          },\n          \"ratePerUnit\": \"12\",\n          \"quantity\": \"11\"\n        }\n      ],\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1512988123880,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/pricelists/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"pricelists",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": "create pricelist"
									},
									"response": []
								},
								{
									"name": "Search Pricelists",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var ResrateContractNumber=responseBody.priceLists[0].rateContractNumber;",
													"pm.environment.set(\"ResrateContractNumber,ResrateContractNumber\");",
													"",
													"pm.test(\"RateContractNumber Matches\", function () {",
													"    pm.expect(ResrateContractNumber).to.include(pm.environment.get(\"rateContractNumber\"));",
													"});",
													"",
													"postman.setNextRequest(\"Update Pricelists\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1512989173575,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/pricelists/_search?tenantId={{tenantId}}&rateContractNumber={{rateContractNumber}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"pricelists",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "rateContractNumber",
													"value": "{{rateContractNumber}}",
													"equals": true
												}
											]
										},
										"description": "search Pricelists"
									},
									"response": []
								},
								{
									"name": "Update Pricelists",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name2 = Math.floor(Math.random() * 10000);",
													"postman.setEnvironmentVariable(\"agreementNumber\",\"agreementNumber \"+name2);"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var requestBody=JSON.parse(request.data);",
													"",
													"var ReqrateType=requestBody.priceLists[0].rateType;",
													"pm.environment.set(\"ReqrateType\",ReqrateType);",
													"",
													"var resQuantity=requestBody.priceLists[0].priceListDetails[0].quantity;",
													"pm.environment.set(\"resQuantity\",resQuantity);",
													"",
													"postman.setNextRequest(\"Search Update Pricelists\");",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"priceLists\": [\n    {\n    \t\"id\":\"{{RespricelistId}}\",\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"rateContractNumber\": \"{{rateContractNumber}}\",\n      \"rateContractDate\": 1489224710000,\n      \"agreementNumber\": \"{{agreementNumber}}\",\n      \"agreementDate\": 1491903110000,\n      \"agreementStartDate\": \"{{PreviousTime}}\",\n      \"agreementEndDate\": \"{{FutureTime}}\",\n      \"active\": true,\n      \"fileStoreId\": \"\",\n      \"rateType\": \"Quotation\",\n      \"priceListDetails\": [\n        {\n        \t\"id\":\"{{RespricelistDetailsId}}\",\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\",\n            \"conversionFactor\": 1\n          },\n          \"ratePerUnit\": \"123\",\n          \"quantity\": 50,\n          \"active\": true\n        }\n      ],\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1512988123880,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/pricelists/_update?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"pricelists",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": "update Pricelists"
									},
									"response": []
								},
								{
									"name": "Search Update Pricelists",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var ResrateType=responseBody.priceLists[0].rateType;",
													"pm.environment.set(\"ResrateType\",ResrateType);"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1512989173575,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/pricelists/_search?tenantId={{tenantId}}&rateContractNumber={{rateContractNumber}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"pricelists",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "rateContractNumber",
													"value": "{{rateContractNumber}}",
													"equals": true
												}
											]
										},
										"description": "search Pricelists"
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Format",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"Pricelist without unique rateContractNumber\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Pricelist without unique rateContractNumber",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// var name1 = Math.floor(Math.random() * 10000);",
													"",
													"// postman.setEnvironmentVariable(\"rateContractNumber\",\"rateContractNumber \"+name1);",
													"",
													"function randomPreviousDate(){",
													"   var startDate = new Date(2012,0,1).getTime();",
													"   var endDate =  new Date(2015,0,1).getTime();",
													"   var spaces = (endDate - startDate);",
													"   var timestamp = Math.round(Math.random() * spaces);",
													"   timestamp += startDate;",
													"   return new Date(timestamp);",
													"}",
													"",
													"function randomFutureDate(){",
													"   var startDate = new Date().getTime();",
													"   var endDate =  new Date(2019,0,1).getTime();",
													"   var spaces = (endDate - startDate);",
													"   var timestamp = Math.round(Math.random() * spaces);",
													"   timestamp += startDate;",
													"   return new Date(timestamp);",
													"}",
													"",
													"",
													"var PreviousTime = new randomPreviousDate().getTime();",
													"",
													"var FutureTime = new randomFutureDate().getTime();",
													"",
													"pm.environment.set(\"PreviousTime\",PreviousTime);",
													"pm.environment.set(\"FutureTime\",FutureTime);",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var ErrorrateContractNumber = responseBody.Errors[0].message;",
													"pm.environment.set(\"ErrorrateContractNumber\",ErrorrateContractNumber);",
													"",
													"pm.test(\"Rate contract No is unique\", function () {",
													"    pm.expect(ErrorrateContractNumber).to.include(\"already exists\");",
													"});",
													"",
													"postman.setNextRequest(\"Pricelist with future date\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"priceLists\": [\n    {\n      \"supplier\": {\n        \"code\": \"JK002\"\n      },\n      \"rateContractNumber\": \"3333\",\n      \"rateContractDate\": 1489224710000,\n      \"agreementNumber\": \"DEC11AN1\",\n      \"agreementDate\": 1491903110000,\n      \"agreementStartDate\": \"{{PreviousTime}}\",\n      \"agreementEndDate\": \"{{PreviousTime}}\",\n      \"active\": true,\n      \"fileStoreId\": \"\",\n      \"rateType\": \"One Time Tender\",\n      \"priceListDetails\": [\n        {\n          \"material\": {\n            \"code\": \"MAT1\"\n          },\n          \"uom\": {\n            \"code\": \"CM\",\n            \"conversionFactor\": 1\n          },\n          \"ratePerUnit\": \"12\",\n          \"quantity\": \"11\"\n        }\n      ],\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1512988123880,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/pricelists/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"pricelists",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": "create pricelist"
									},
									"response": []
								},
								{
									"name": "Pricelist with future date",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"",
													"postman.setEnvironmentVariable(\"rateContractNumber\",\"rateContractNumber \"+name1);",
													"",
													"// function randomPreviousDate(){",
													"//   var startDate = new Date(2012,0,1).getTime();",
													"//   var endDate =  new Date(2015,0,1).getTime();",
													"//   var spaces = (endDate - startDate);",
													"//   var timestamp = Math.round(Math.random() * spaces);",
													"//   timestamp += startDate;",
													"//   return new Date(timestamp);",
													"// }",
													"",
													"// function randomFutureDate(){",
													"//   var startDate = new Date().getTime();",
													"//   var endDate =  new Date(2019,0,1).getTime();",
													"//   var spaces = (endDate - startDate);",
													"//   var timestamp = Math.round(Math.random() * spaces);",
													"//   timestamp += startDate;",
													"//   return new Date(timestamp);",
													"// }",
													"",
													"",
													"// var PreviousTime = new randomPreviousDate().getTime();",
													"",
													"// var FutureTime = new randomFutureDate().getTime();",
													"",
													"// pm.environment.set(\"PreviousTime\",PreviousTime);",
													"// pm.environment.set(\"FutureTime\",FutureTime);",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var ErrorDate = responseBody.Errors[0].message;",
													"pm.environment.set(\"ErrorDate\",ErrorDate);",
													"",
													"pm.test(\"field agreementStartDate should be Less than or Equal to Current Date.\", function () {",
													"    pm.expect(ErrorDate).to.include(\"Less than or Equal\");",
													"});",
													"",
													"",
													"postman.setNextRequest(\"Pricelist without rate type\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"priceLists\": [\n    {\n      \"supplier\": {\n        \"code\": \"JK002\"\n      },\n      \"rateContractNumber\": \"{{rateContractNumber}}\",\n      \"rateContractDate\": 1489224710000,\n      \"agreementNumber\": \"DEC11AN1\",\n      \"agreementDate\": 1491903110000,\n      \"agreementStartDate\": \"1766142421000\",\n      \"agreementEndDate\": \"1766142421000\",\n      \"active\": true,\n      \"fileStoreId\": \"\",\n      \"rateType\": \"One Time Tender\",\n      \"priceListDetails\": [\n        {\n          \"material\": {\n            \"code\": \"MAT1\"\n          },\n          \"uom\": {\n            \"code\": \"CM\",\n            \"conversionFactor\": 1\n          },\n          \"ratePerUnit\": \"12\",\n          \"quantity\": \"11\"\n        }\n      ],\n      \"tenantId\": \"default\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1512988123880,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/pricelists/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"pricelists",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": "create pricelist"
									},
									"response": []
								},
								{
									"name": "Pricelist without rate type",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"",
													"postman.setEnvironmentVariable(\"rateContractNumber\",\"rateContractNumber \"+name1);",
													"",
													"function randomPreviousDate(){",
													"   var startDate = new Date(2012,0,1).getTime();",
													"   var endDate =  new Date(2015,0,1).getTime();",
													"   var spaces = (endDate - startDate);",
													"   var timestamp = Math.round(Math.random() * spaces);",
													"   timestamp += startDate;",
													"   return new Date(timestamp);",
													"}",
													"",
													"function randomFutureDate(){",
													"   var startDate = new Date().getTime();",
													"   var endDate =  new Date(2019,0,1).getTime();",
													"   var spaces = (endDate - startDate);",
													"   var timestamp = Math.round(Math.random() * spaces);",
													"   timestamp += startDate;",
													"   return new Date(timestamp);",
													"}",
													"",
													"",
													"var PreviousTime = new randomPreviousDate().getTime();",
													"",
													"var FutureTime = new randomFutureDate().getTime();",
													"",
													"pm.environment.set(\"PreviousTime\",PreviousTime);",
													"pm.environment.set(\"FutureTime\",FutureTime);",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var ErrorRatetype = responseBody.Errors[0].message;",
													"pm.environment.set(\"ErrorRatetype\",ErrorRatetype);",
													"",
													"pm.test(\"Rate Type is mandatory\", function () {",
													"    pm.expect(ErrorRatetype).to.include(\"may not be null\");",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"priceLists\": [\n    {\n      \"supplier\": {\n        \"code\": \"JK002\"\n      },\n      \"rateContractNumber\": \"{{rateContractNumber}}\",\n      \"rateContractDate\": 1489224710000,\n      \"agreementNumber\": \"DEC11AN1\",\n      \"agreementDate\": 1491903110000,\n      \"agreementStartDate\": \"{{PreviousTime}}\",\n      \"agreementEndDate\": \"{{PreviousTime}}\",\n      \"active\": true,\n      \"fileStoreId\": \"\",\n      \"rateType\": null,\n      \"priceListDetails\": [\n        {\n          \"material\": {\n            \"code\": \"MAT1\"\n          },\n          \"uom\": {\n            \"code\": \"CM\",\n            \"conversionFactor\": 1\n          },\n          \"ratePerUnit\": \"12\",\n          \"quantity\": \"11\"\n        }\n      ],\n      \"tenantId\": \"default\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1512988123880,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/pricelists/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"pricelists",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": "create pricelist"
									},
									"response": []
								},
								{
									"name": "Pricelist without quantity",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"",
													"postman.setEnvironmentVariable(\"rateContractNumber\",\"rateContractNumber \"+name1);",
													"",
													"function randomPreviousDate(){",
													"   var startDate = new Date(2012,0,1).getTime();",
													"   var endDate =  new Date(2015,0,1).getTime();",
													"   var spaces = (endDate - startDate);",
													"   var timestamp = Math.round(Math.random() * spaces);",
													"   timestamp += startDate;",
													"   return new Date(timestamp);",
													"}",
													"",
													"function randomFutureDate(){",
													"   var startDate = new Date().getTime();",
													"   var endDate =  new Date(2019,0,1).getTime();",
													"   var spaces = (endDate - startDate);",
													"   var timestamp = Math.round(Math.random() * spaces);",
													"   timestamp += startDate;",
													"   return new Date(timestamp);",
													"}",
													"",
													"",
													"var PreviousTime = new randomPreviousDate().getTime();",
													"",
													"var FutureTime = new randomFutureDate().getTime();",
													"",
													"pm.environment.set(\"PreviousTime\",PreviousTime);",
													"pm.environment.set(\"FutureTime\",FutureTime);",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var ErrorQuantity = responseBody.Errors[0].message;",
													"pm.environment.set(\"ErrorQuantity\",ErrorQuantity);",
													"",
													"pm.test(\"quantity is mandatory\", function () {",
													"    pm.expect(ErrorQuantity).to.include(\"greater than zero\");",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"priceLists\": [\n    {\n      \"supplier\": {\n        \"code\": \"JK002\"\n      },\n      \"rateContractNumber\": \"{{rateContractNumber}}\",\n      \"rateContractDate\": 1489224710000,\n      \"agreementNumber\": \"DEC11AN1\",\n      \"agreementDate\": 1491903110000,\n      \"agreementStartDate\": \"{{PreviousTime}}\",\n      \"agreementEndDate\": \"{{PreviousTime}}\",\n      \"active\": true,\n      \"fileStoreId\": \"\",\n      \"rateType\": \"One Time Tender\",\n      \"priceListDetails\": [\n        {\n          \"material\": {\n            \"code\": \"MAT1\"\n          },\n          \"uom\": {\n            \"code\": \"CM\",\n            \"conversionFactor\": 1\n          },\n          \"ratePerUnit\": \"12\",\n          \"quantity\": \"\"\n        }\n      ],\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1512988123880,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/pricelists/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"pricelists",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": "create pricelist"
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Miscellaneous Material Receipt",
					"item": [
						{
							"name": "Format",
							"item": [],
							"_postman_isSubFolder": true
						},
						{
							"name": "Functional",
							"item": [
								{
									"name": "Login copy",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"Create Indents\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Miscellaneous Material Receipt Note",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510290513893,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\": {\n      \"id\": 73\n    }\n  },\n  \"materialReceipt\": [\n    {\n      \"receivingStore\": {\n        \"code\": \"STR\"\n      },\n      \"receiptPurpose\":\"SCRAP\",\n      \"receiptDate\": 1512432086399,\n      \"receiptType\": \"PURCHASE RECEIPT\",\n      \"supplier\": {\n        \"code\": \"SUPPLIER\"\n      },\n      \"issueNumber\":null,\n      \"supplierBillNo\": \"AB-PO-2017\",\n      \"supplierBillDate\": 1512365762000,\n      \"challanNo\": \"CD-LK-2017\",\n      \"challanDate\": 1512365762000,\n      \"description\": \"description for receipt\",\n      \"paymentTerms\": \"paymentTerms for receipt\",\n      \"receivedBy\": \"Bimal\",\n      \"designation\": \"ASST-ENG\",\n      \"inspectedBy\": \"ramesh\",\n      \"inspectionDate\": 45698756,\n      \"inspectionRemarks\": \"inspection remarks for receipt\",\n      \"receiptDetails\": [\n        {\n          \"material\": {\n            \"code\": \"MAT1\"\n          },\n          \"uom\": {\n            \"code\": \"NOS\"\n          },\n          \"receivedQty\": 20,\n          \"acceptedQty\": 20,\n          \"unitRate\": 5,\n          \"rejectionRemark\": \"rejection remark for receipt detail\",\n          \"purchaseOrderDetail\": {\n            \"id\": 1\n          },\n         \"receiptDetailsAddnInfo\": [\n            {\n              \"manufactureDate\": 12345698,\n              \"serialNo\": \"SR-02\",\n              \"expiryDate\": 1512538562000,\n              \"batchNo\": \"BA-NO-2017\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/miscellaneousreceiptnotes/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"miscellaneousreceiptnotes",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Miscellaneous Material Receipt Note",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"12345677\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"rajesh\",\n    \"authToken\": \"{{authToken}}\",\n    \"userInfo\":{\n      \"id\":1,\n      \"tenantId\":\"default\",\n      \"username\":\"abc\"\n    }\n  }\n}\n"
										},
										"url": {
											"raw": "{{host}}:8080/inventory-services/miscellaneousreceiptnotes/_search?tenantId=default&mrnNumber=MRN/00155/2017",
											"host": [
												"{{host}}"
											],
											"port": "8080",
											"path": [
												"inventory-services",
												"miscellaneousreceiptnotes",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "default",
													"equals": true
												},
												{
													"key": "mrnNumber",
													"value": "MRN/00155/2017",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Miscellaneous Material Receipt Note",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510290513893,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{authToken}}\",\n    \"userInfo\": {\n      \"id\": 1\n    }\n  },\n  \"materialReceipt\": [\n    {\n      \"id\": 154,\n      \"receivingStore\": {\n        \"code\": \"STR\"\n      },\n      \"mrnNumber\":\"MRN/00155/2017\",\n      \"receiptDate\": 1512432086399,\n      \"mrnStatus\": \"CANCELED\",\n      \"receiptType\": \"MISCELLANEOUS RECEIPT\",\n      \"supplier\": {\n        \"code\": \"SUPPLIER\"\n      },\n      \"supplierBillNo\": \"ABC-PO-2017\",\n      \"supplierBillDate\": 3654799,\n      \"challanNo\": \"CDE-LK-2017\",\n      \"challanDate\": 1512365762000,\n      \"description\": \"description for receipt update\",\n      \"paymentTerms\": \"paymentTerms for receipt update\",\n      \"receivedBy\": \"sanjeev prasad\",\n      \"designation\": \"ASST-ENG1\",\n      \"inspectedBy\": \"ramesh babu\",\n      \"inspectionDate\": 1245698756,\n      \"inspectionRemarks\": \"inspection remarks for receipt update\",\n      \"receiptDetails\": [\n        {\n          \"id\": 67,\n          \"material\": {\n            \"code\": \"MAT1\"\n          },\n          \"uom\": {\n            \"code\": \"NOS\"\n          },\n          \"receivedQty\": 29.5,\n          \"acceptedQty\": 1,\n          \"unitRate\": 10,\n          \"rejectionRemark\": \"rejection remark for receipt detail update\",\n          \"purchaseOrderDetail\": {\n            \"id\": 2\n          },\n          \"tenantid\":\"default\",\n          \"receiptDetailsAddnInfo\": [\n            {\n              \"id\": 80,\n              \"manufactureDate\": 345698,\n              \"lotNo\": \"LOTU-01\",\n              \"serialNo\": \"SRU-02\",\n              \"expiryDate\": 1512538562000,\n              \"batchNo\": \"BAC-NO-2017\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{host}}:8080/inventory-services/miscellaneousreceiptnotes/_update?tenantId=default",
											"host": [
												"{{host}}"
											],
											"port": "8080",
											"path": [
												"inventory-services",
												"miscellaneousreceiptnotes",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "default"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Purchase Order Non Indent",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
											"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
											"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
											"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
											"    postman.setEnvironmentVariable(\"username\",\"uday\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
											"",
											"postman.setNextRequest(\"MDMS_DATA\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"type": "text",
											"value": "{{username}}"
										},
										{
											"key": "password",
											"type": "text",
											"value": "{{password}}"
										},
										{
											"key": "grant_type",
											"type": "text",
											"value": "password"
										},
										{
											"key": "scope",
											"type": "text",
											"value": "read"
										},
										{
											"key": "tenantId",
											"type": "text",
											"value": "{{tenantId}}"
										}
									]
								},
								"url": {
									"raw": "{{url}}/user/oauth/token",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"oauth",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "MDMS_DATA",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"var resBody = JSON.parse(responseBody);",
											"",
											"",
											"var max = resBody.MdmsRes.inventory.Material.length - 1;",
											"         var rand = 0;",
											"         var materialCode = null;",
											"         var UomCode = null;",
											"         if(max > -1){",
											"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
											"             materialCode = resBody.MdmsRes.inventory.Material[rand].code;",
											"             pm.environment.set(\"materialCode\",materialCode);",
											"             ",
											"             UomCode = resBody.MdmsRes.inventory.Material[rand].baseUom.code;",
											"             pm.environment.set(\"UomCode\",UomCode);",
											"}",
											"",
											"postman.setNextRequest(\"Create Supplier\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               },\n               {\n               \t \"name\":\"Uom\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{url}}/egov-mdms-service/v1/_search",
									"host": [
										"{{url}}"
									],
									"path": [
										"egov-mdms-service",
										"v1",
										"_search"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Supplier",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var name1 = Math.floor(Math.random() * 10000);",
											"",
											"postman.setEnvironmentVariable(\"SupplierCode\",\"SUPPLIERCODE\"+name1);",
											"",
											"",
											"",
											"",
											"",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"postman.setNextRequest(\"Create Pricelists\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"RequestInfo\": {\n   \"apiId\": \"emp\",\n   \"ver\": \"1.0\",\n   \"ts\": \"12345677\",\n   \"action\": \"create\",\n   \"did\": \"1\",\n   \"key\": \"abcdkey\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"rajesh\",\n   \"authToken\": \"{{access_token}}\"\n\n  \n },\n \"suppliers\":\n[  {\n\"tenantId\":\"{{tenantId}}\",\n \t\"type\":\"INDIVIDUAL\",\n \t\"code\":\"{{SupplierCode}}\",\n \t\"active\":\"true\",\n \t\"name\":\"Anand And Sons\",\n \t\"address\":\"btm layout\",\n \t\"status\":\"ACTIVE\",\n \t\"inActiveDate\":\"15436789\",\n \t\"contactNo\":\"0132278956\",\n \t\"faxNo\":\"123788890\",\n \t\"website\":\"http://www.google.com\",\n \t\"email\":\"anand@gmail.com\",\n \t\"description\":\"supplier for cosmetics\",\n \t\"panNo\":\"DFGPV3459D\",\n \t\"tinNo\":\"34676767uiu\",\n \t\"cstNo\":\"34676767uiC\",\n \t\"vatNo\":\"34676767uiV\",\n \t\"gstNo\":\"75AGHFD7890A0Z0\",\n \t\"contactPerson\":\"anand dubay\",\n \t\"contactPersonNo\":\"8388743488\",\n \t\"bankCode\":\"CITI\",\n   \"bankBranch\":\"bankbranch1\",\n \t\"acctNo\":\"3161001500005068\",\n \t\"ifsc\":\"IFSC38899\",\n \t\"micr\":\"MICR983985\"\n \t}\n\n]\n \n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/suppliers/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"suppliers",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Pricelists",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											" var name1 = Math.floor(Math.random() * 10000);",
											"",
											" postman.setEnvironmentVariable(\"rateContractNumber\",\"rateContractNumber \"+name1);",
											"",
											"function randomPreviousDate(){",
											"   var startDate = new Date(2012,0,1).getTime();",
											"   var endDate =  new Date(2015,0,1).getTime();",
											"   var spaces = (endDate - startDate);",
											"   var timestamp = Math.round(Math.random() * spaces);",
											"   timestamp += startDate;",
											"   return new Date(timestamp);",
											"}",
											"",
											"function randomFutureDate(){",
											"   var startDate = new Date().getTime();",
											"   var endDate =  new Date(2019,0,1).getTime();",
											"   var spaces = (endDate - startDate);",
											"   var timestamp = Math.round(Math.random() * spaces);",
											"   timestamp += startDate;",
											"   return new Date(timestamp);",
											"}",
											"",
											"",
											"var PreviousTime = new randomPreviousDate().getTime();",
											"",
											"var FutureTime = new randomFutureDate().getTime();",
											"",
											"pm.environment.set(\"PreviousTime\",PreviousTime);",
											"pm.environment.set(\"FutureTime\",FutureTime);",
											"",
											"",
											"",
											"",
											"",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"var requestBody = JSON.parse(request.data);",
											"",
											"var ResSupplierCode = responseBody.priceLists[0].supplier.code;",
											"pm.environment.set(\"ResSupplierCode\",ResSupplierCode);",
											"",
											"",
											"var unitPrice=requestBody.priceLists[0].priceListDetails[0].ratePerUnit;",
											"pm.environment.set(\"unitPrice\",unitPrice);",
											"",
											"var ResPriceListPO= responseBody.priceLists[0].id;",
											"pm.environment.set(\"ResPriceListPO\",ResPriceListPO);",
											"",
											"",
											"postman.setNextRequest(\"Create Store\");",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"priceLists\": [\n    {\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"rateContractNumber\": \"{{rateContractNumber}}\",\n      \"rateContractDate\": 1489224710000,\n      \"agreementNumber\": \"DEC11AN1\",\n      \"agreementDate\": 1491903110000,\n      \"agreementStartDate\": \"{{PreviousTime}}\",\n      \"agreementEndDate\": \"{{FutureTime}}\",\n      \"active\": true,\n      \"fileStoreId\": \"\",\n      \"rateType\": \"Quotation\",\n      \"priceListDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\",\n            \"conversionFactor\": 1\n          },\n          \"ratePerUnit\": \"12\",\n          \"quantity\": \"11\"\n        }\n      ],\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1512988123880,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/pricelists/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"pricelists",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								},
								"description": "create pricelist"
							},
							"response": []
						},
						{
							"name": "Create Store",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var name1 = Math.floor(Math.random() * 10000);",
											"",
											"postman.setEnvironmentVariable(\"storeCode\",\"STORECODE\"+name1);",
											"",
											"",
											"var name2 = Math.random().toString(26).replace(/[^a-z]+/g, '').substr(0, 5);",
											"",
											"postman.setEnvironmentVariable(\"storeName\",\"Store Name \"+name2);",
											"",
											"",
											"",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"postman.setNextRequest(\"Create Purchase Order Generation\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"stores\": [\n    {\n      \"code\": \"{{storeCode}}\",\n      \"name\": \"{{storeName}}\",\n      \"department\": {\n        \"code\": \"ADM\"\n      },\n      \"description\": \"test\",\n      \"officeLocation\": {\n        \"code\": \"LOC1\"\n      },\n      \"isCentralStore\": true,\n      \"billingAddress\": \"mumbai\",\n      \"deliveryAddress\": \"mumbai\",\n      \"storeInCharge\": {\n        \"code\": \"658039\"\n      },\n      \"contactNo1\": \"\",\n      \"email\": \"\",\n      \"active\": true,\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510742992622,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n      \"id\":1,\n      \"tenantId\":\"default\",\n      \"userName\":\"ramesh\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/stores/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"stores",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Non indent PO",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var today = new Date().getTime();",
											"pm.environment.set(\"today\", today);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"postman.setNextRequest(\"Search Purchase Order\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1513930422037,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \"purchaseOrders\": [\n    {\n      \"store\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"purchaseType\": \"Non Indent\",\n      \"tenantId\": \"{{tenantId}}\",\n      \"purchaseOrderDate\": \"{{today}}\",\n      \"rateType\": \"Quotation\",\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"purchaseOrderDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"material\": {\n            \"tenantId\": \"{{tenantId}}\",\n            \"code\": \"{{materialCode}}\",\n            \"name\": \"SEAL\",\n            \"description\": \"Seal\",\n            \"materialType\": {\n              \"code\": \"MAT1\"\n            },\n            \"baseUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"purchaseUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"expenseAccount\": {\n              \"glCode\": \"44001\"\n            },\n            \"minQuantity\": 2,\n            \"maxQuantity\": 20,\n            \"stockingUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"reorderLevel\": 10,\n            \"reorderQuantity\": 12,\n            \"lotControl\": false,\n            \"shelfLifeControl\": false,\n            \"serialNumber\": false\n          },\n          \"uom\": {\n            \"id\": \"1\",\n            \"tenantId\": \"default\",\n            \"code\": \"NOS\",\n            \"description\": \"Numbers\",\n            \"baseUom\": true,\n            \"uomCategory\": \"QUANTITY\",\n            \"fromDate\": 1508740856,\n            \"toDate\": 1893436200,\n            \"conversionFactor\": 1\n          },\n          \"priceList\": {\n            \"id\": \"{{ResPriceListPO}}\",\n            \"tenantId\": \"{{tenantId}}\",\n            \"supplier\": {\n              \"id\": \"100\",\n              \"tenantId\": \"default\",\n              \"type\": \"INDIVIDUAL\",\n              \"code\": \"{{SupplierCode}}\",\n              \"name\": \"Anand And Sons\",\n              \"address\": \"btm layout\",\n              \"status\": \"ACTIVE\",\n              \"inActiveDate\": 15436789,\n              \"active\": true,\n              \"contactNo\": \"0132278956\",\n              \"faxNo\": \"123788890\",\n              \"website\": \"http://www.google.com\",\n              \"email\": \"anand@gmail.com\",\n              \"description\": \"supplier for cosmetics\",\n              \"panNo\": \"DFGPV3459D\",\n              \"tinNo\": \"34676767uiu\",\n              \"cstNo\": \"34676767uiC\",\n              \"vatNo\": \"34676767uiV\",\n              \"gstNo\": \"75AGHFD7890A0Z0\",\n              \"contactPerson\": \"anand dubay\",\n              \"contactPersonNo\": \"8388743488\",\n              \"bankCode\": \"SBI\",\n              \"bankBranch\": \"bankbranch1\",\n              \"acctNo\": \"3161001500005068\",\n              \"ifsc\": \"IFSC38899\",\n              \"micr\": \"MICR983985\",\n              \"auditDetails\": {\n                \"createdBy\": \"22534\",\n                \"lastModifiedBy\": \"22534\",\n                \"createdTime\": 12345677,\n                \"lastModifiedTime\": 12345677\n              }\n            },\n            \"rateType\": \"Quotation\",\n            \"rateContractNumber\": \"{{rateContractNumber}}\",\n            \"rateContractDate\": 1489224710000,\n            \"agreementNumber\": \"DEC11AN1\",\n            \"agreementDate\": 1491903110000,\n            \"agreementStartDate\": 1328367398850,\n            \"agreementEndDate\": 1527771650467,\n            \"active\": true,\n            \"fileStoreId\": \"\",\n            \"priceListDetails\": [\n              {\n                \"id\": \"201\",\n                \"material\": {\n                  \"code\": \"MAT1\"\n                },\n                \"fromDate\": 1328367398850,\n                \"toDate\": 1527771650467,\n                \"ratePerUnit\": 12,\n                \"quantity\": 11,\n                \"uom\": {\n                  \"id\": \"1\",\n                  \"tenantId\": \"default\",\n                  \"code\": \"NOS\",\n                  \"description\": \"Numbers\",\n                  \"baseUom\": true,\n                  \"uomCategory\": \"QUANTITY\",\n                  \"fromDate\": 1508740856,\n                  \"toDate\": 1893436200,\n                  \"conversionFactor\": 1\n                },\n                \"active\": true,\n                \"auditDetails\": {\n                  \"createdBy\": \"22534\",\n                  \"lastModifiedBy\": \"22534\",\n                  \"createdTime\": 1512988123880,\n                  \"lastModifiedTime\": 1512988123880\n                }\n              }\n            ],\n            \"auditDetails\": {\n              \"createdBy\": \"22534\",\n              \"lastModifiedBy\": \"22534\",\n              \"createdTime\": 1512988123880,\n              \"lastModifiedTime\": 1512988123880\n            }\n          },\n          \"unitPrice\": 12,\n          \"userQuantity\": 20,\n          \"orderQuantity\": 20,\n          \"tenderQuantity\" : 0,\n          \"receivedQuantity\": 0,\n          \"usedQuantity\": 0\n        }\n      ]\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/purchaseorders/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"purchaseorders",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search Purchase Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n      \t\"id\":2\n      }\n }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/indents/_search?tenantId={{tenantId}}&indentNumber={{indentNumber}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"indents",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "indentNumber",
											"value": "{{indentNumber}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Material Issue Indent",
					"item": [
						{
							"name": "Functional",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"MDMS_DATA\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "MDMS_DATA",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var resBody = JSON.parse(responseBody);",
													"var max = resBody.MdmsRes.inventory.Material.length - 1;",
													"         var rand = 0;",
													"         var materialCode = null;",
													"         var UomCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"             materialCode = resBody.MdmsRes.inventory.Material[rand].code;",
													"             pm.environment.set(\"materialCode\",materialCode);",
													"             ",
													"             UomCode = resBody.MdmsRes.inventory.Material[rand].baseUom.code;",
													"             pm.environment.set(\"UomCode\",UomCode);",
													"}",
													"",
													"postman.setNextRequest(\"Create Indents\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               },\n               {\n               \t \"name\":\"Uom\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
										},
										"url": {
											"raw": "{{url}}/egov-mdms-service/v1/_search",
											"host": [
												"{{url}}"
											],
											"path": [
												"egov-mdms-service",
												"v1",
												"_search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Indents",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"var requestBody = JSON.parse(request.data);",
													"",
													"var indentNumber=responseBody.indents[0].indentNumber;",
													"pm.environment.set(\"indentNumber\",indentNumber);",
													"",
													"var userQuantity=requestBody.indents[0].indentDetails[0].userQuantity;",
													"pm.environment.set(\"userQuantity\",userQuantity);",
													"",
													"var indentDetailsId=responseBody.indents[0].indentDetails[0].id;",
													"pm.environment.set(\"indentDetailsId\",indentDetailsId);",
													"",
													"postman.setNextRequest(\"Create Supplier\");",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"indents\": [\n    {\n      \"issueStore\": {\n        \"code\": \"MED001\"\n      },\n      \"indentDate\": 1512412200000,\n      \"indentNumber\": \"\",\n      \"indentType\": \"Indent\",\n      \"expectedDeliveryDate\": 1512412200000,\n      \"narration\": \"fgfd\",\n      \"materialHandOverTo\": \"fdgdf\",\n      \"designation\": \"\",\n      \"indentDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\"\n          },\n          \"userQuantity\": \"8\",\n          \"asset\": {\n            \"code\": \"2\"\n          }\n        }\n      ],\n      \"indentPurpose\": \"Consumption\",\n      \"inventoryType\": \"Asset\",\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511527847642,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/indents/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"indents",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Supplier",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"",
													"postman.setEnvironmentVariable(\"SupplierCode\",\"SUPPLIERCODE\"+name1);",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"postman.setNextRequest(\"Create Pricelists\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \"RequestInfo\": {\n   \"apiId\": \"emp\",\n   \"ver\": \"1.0\",\n   \"ts\": \"12345677\",\n   \"action\": \"create\",\n   \"did\": \"1\",\n   \"key\": \"abcdkey\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"rajesh\",\n   \"authToken\": \"{{access_token}}\"\n\n  \n },\n \"suppliers\":\n[  {\n\"tenantId\":\"{{tenantId}}\",\n \t\"type\":\"INDIVIDUAL\",\n \t\"code\":\"{{SupplierCode}}\",\n \t\"active\":\"true\",\n \t\"name\":\"Anand And Sons\",\n \t\"address\":\"btm layout\",\n \t\"status\":\"ACTIVE\",\n \t\"inActiveDate\":\"15436789\",\n \t\"contactNo\":\"0132278956\",\n \t\"faxNo\":\"123788890\",\n \t\"website\":\"http://www.google.com\",\n \t\"email\":\"anand@gmail.com\",\n \t\"description\":\"supplier for cosmetics\",\n \t\"panNo\":\"DFGPV3459D\",\n \t\"tinNo\":\"34676767uiu\",\n \t\"cstNo\":\"34676767uiC\",\n \t\"vatNo\":\"34676767uiV\",\n \t\"gstNo\":\"75AGHFD7890A0Z0\",\n \t\"contactPerson\":\"anand dubay\",\n \t\"contactPersonNo\":\"8388743488\",\n \t\"bankCode\":\"CITI\",\n   \"bankBranch\":\"bankbranch1\",\n \t\"acctNo\":\"3161001500005068\",\n \t\"ifsc\":\"IFSC38899\",\n \t\"micr\":\"MICR983985\"\n \t}\n\n]\n \n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/suppliers/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"suppliers",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Pricelists",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"postman.setEnvironmentVariable(\"rateContractNumber\",\"rateContractNumber \"+name1);",
													"",
													"var name2 = Math.floor(Math.random() * 10000);",
													"postman.setEnvironmentVariable(\"agreementNumber\",\"agreementNumber \"+name2);",
													"",
													"function randomPreviousDate(){",
													"   var startDate = new Date(2012,0,1).getTime();",
													"   var endDate =  new Date(2015,0,1).getTime();",
													"   var spaces = (endDate - startDate);",
													"   var timestamp = Math.round(Math.random() * spaces);",
													"   timestamp += startDate;",
													"   return new Date(timestamp);",
													"}",
													"",
													"function randomFutureDate(){",
													"   var startDate = new Date().getTime();",
													"   var endDate =  new Date(2019,0,1).getTime();",
													"   var spaces = (endDate - startDate);",
													"   var timestamp = Math.round(Math.random() * spaces);",
													"   timestamp += startDate;",
													"   return new Date(timestamp);",
													"}",
													"",
													"var PreviousTime = new randomPreviousDate().getTime();",
													"var FutureTime = new randomFutureDate().getTime();",
													"",
													"pm.environment.set(\"PreviousTime\",PreviousTime);",
													"pm.environment.set(\"FutureTime\",FutureTime);",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"var requestBody = JSON.parse(request.data);",
													"",
													"var unitPrice=requestBody.priceLists[0].priceListDetails[0].ratePerUnit;",
													"pm.environment.set(\"unitPrice\",unitPrice);",
													"",
													"var responsePriceList=responseBody.priceLists[0];",
													"pm.environment.set(\"responsePriceList\",JSON.stringify(responsePriceList));",
													"",
													"postman.setNextRequest(\"Create Store\");",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"priceLists\": [\n    {\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"rateContractNumber\": \"{{rateContractNumber}}\",\n      \"rateContractDate\": 1489224710000,\n      \"agreementNumber\": \"{{agreementNumber}}\",\n      \"agreementDate\": 1491903110000,\n      \"agreementStartDate\": \"{{PreviousTime}}\",\n      \"agreementEndDate\": \"{{FutureTime}}\",\n      \"active\": true,\n      \"fileStoreId\": \"\",\n      \"rateType\": \"Quotation\",\n      \"priceListDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\",\n            \"conversionFactor\": 1\n          },\n          \"ratePerUnit\": \"12\",\n          \"quantity\": \"11\"\n        }\n      ],\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1512988123880,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/pricelists/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"pricelists",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": "create pricelist"
									},
									"response": []
								},
								{
									"name": "Create Store",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"postman.setEnvironmentVariable(\"storeCode\",\"STORECODE\"+name1);",
													"",
													"var name2 = Math.random().toString(26).replace(/[^a-z]+/g, '').substr(0, 5);",
													"postman.setEnvironmentVariable(\"storeName\",\"Store Name \"+name2);",
													"",
													"",
													"",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"postman.setNextRequest(\"Create Purchase Order Generation\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"stores\": [\n    {\n      \"code\": \"{{storeCode}}\",\n      \"name\": \"{{storeName}}\",\n      \"department\": {\n        \"code\": \"ADM\"\n      },\n      \"description\": \"test\",\n      \"officeLocation\": {\n        \"code\": \"LOC1\"\n      },\n      \"isCentralStore\": true,\n      \"billingAddress\": \"mumbai\",\n      \"deliveryAddress\": \"mumbai\",\n      \"storeInCharge\": {\n        \"code\": \"658039\"\n      },\n      \"contactNo1\": \"\",\n      \"email\": \"\",\n      \"active\": true,\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510742992622,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n      \"id\":1,\n      \"tenantId\":\"default\",\n      \"userName\":\"ramesh\"\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/stores/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"stores",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Purchase Order Generation",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"// console.log(JSON.stringify(responseBody));",
													"",
													"var ResPurchaseIndentDetails= responseBody.purchaseOrders[0].purchaseOrderDetails[0].purchaseIndentDetails[0];",
													"pm.environment.set(\"ResPurchaseIndentDetails\",JSON.stringify(ResPurchaseIndentDetails));",
													"",
													"postman.setNextRequest(\"Create Purchase Order\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"purchaseOrders\": [\n    {\n      \"indentNumbers\": [\n        \"{{indentNumber}}\"\n      ],\n      \"purchaseType\":\"Indent\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1513579003518,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/purchaseorders/_preparepofromindents?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"purchaseorders",
												"_preparepofromindents"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Purchase Order",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var today = new Date().getTime();",
													"pm.environment.set(\"today\", today);"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var PurchaseOrderNumber=responseBody.purchaseOrders[0].purchaseOrderNumber;",
													"pm.environment.set(\"PurchaseOrderNumber\",PurchaseOrderNumber);",
													"",
													"var PODetailsID=responseBody.purchaseOrders[0].purchaseOrderDetails[0].id;",
													"pm.environment.set(\"PODetailsID\",PODetailsID);",
													"",
													"postman.setNextRequest(\"Create Material Receipt Note\");",
													"",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1513930422037,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \"purchaseOrders\": [\n    {\n      \"store\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"purchaseType\": \"Indent\",\n      \"tenantId\": \"{{tenantId}}\",\n      \"purchaseOrderDate\": \"{{today}}\",\n      \"rateType\": \"Quotation\",\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"purchaseOrderDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"material\": {\n            \"tenantId\": \"{{tenantId}}\",\n            \"code\": \"{{materialCode}}\",\n            \"name\": \"SEAL\",\n            \"description\": \"Seal\",\n            \"materialType\": {\n              \"code\": \"MAT1\"\n            },\n            \"baseUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"purchaseUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"expenseAccount\": {\n              \"glCode\": \"44001\"\n            },\n            \"minQuantity\": 2,\n            \"maxQuantity\": 20,\n            \"stockingUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"reorderLevel\": 10,\n            \"reorderQuantity\": 12,\n            \"lotControl\": false,\n            \"shelfLifeControl\": false,\n            \"serialNumber\": false\n          },\n          \"uom\": {\n            \"id\": \"1\",\n            \"tenantId\": \"default\",\n            \"code\": \"{{UomCode}}\",\n            \"description\": \"Numbers\",\n            \"baseUom\": true,\n            \"uomCategory\": \"QUANTITY\",\n            \"fromDate\": 1508740856,\n            \"toDate\": 1893436200,\n            \"conversionFactor\": 1\n          },\n          \"priceList\" : {{responsePriceList}},\n          \"unitPrice\": 12,\n          \"indentNumber\": \"{{indentNumber}}\",\n          \"userQuantity\": \"{{userQuantity}}\",\n          \"orderQuantity\": \"{{userQuantity}}\",\n          \"tenderQuantity\": 0,\n          \"receivedQuantity\": 0,\n          \"usedQuantity\": 0,\n          \"purchaseIndentDetails\": [\n            {\n              \"tenantId\": \"default\",\n              \"indentDetail\": {\n                \"id\": \"158\",\n                \"tenantId\": \"default\",\n                \"material\": {\n                  \"tenantId\": \"default\",\n                  \"code\": \"{{materialCode}}\",\n                  \"name\": \"SEAL\",\n                  \"description\": \"Seal\",\n                  \"materialType\": {\n                    \"code\": \"MT1\"\n                  },\n                  \"baseUom\": {\n                    \"id\": \"1\",\n                    \"tenantId\": \"default\",\n                    \"code\": \"NOS\",\n                    \"description\": \"Numbers\",\n                    \"baseUom\": true,\n                    \"uomCategory\": \"QUANTITY\",\n                    \"fromDate\": 1508740856,\n                    \"toDate\": 1893436200,\n                    \"conversionFactor\": 1\n                  },\n                  \"purchaseUom\": {\n                    \"id\": \"1\",\n                    \"tenantId\": \"default\",\n                    \"code\": \"NOS\",\n                    \"description\": \"Numbers\",\n                    \"baseUom\": true,\n                    \"uomCategory\": \"QUANTITY\",\n                    \"fromDate\": 1508740856,\n                    \"toDate\": 1893436200,\n                    \"conversionFactor\": 1\n                  },\n                  \"expenseAccount\": {\n                    \"glCode\": \"44001\"\n                  },\n                  \"minQuantity\": 2,\n                  \"maxQuantity\": 20,\n                  \"stockingUom\": {\n                    \"id\": \"1\",\n                    \"tenantId\": \"default\",\n                    \"code\": \"NOS\",\n                    \"description\": \"Numbers\",\n                    \"baseUom\": true,\n                    \"uomCategory\": \"QUANTITY\",\n                    \"fromDate\": 1508740856,\n                    \"toDate\": 1893436200,\n                    \"conversionFactor\": 1\n                  },\n                  \"reorderLevel\": 10,\n                  \"reorderQuantity\": 12,\n                  \"lotControl\": false,\n                  \"shelfLifeControl\": false,\n                  \"serialNumber\": false\n                },\n                \"uom\": {\n                  \"code\": \"NOS\",\n                  \"baseUom\": false\n                },\n                \"projectCode\": {\n                  \n                },\n                \"asset\": {\n                  \"code\": \"2\"\n                },\n                \"indentQuantity\": 3,\n                \"totalProcessedQuantity\": 0,\n                \"indentIssuedQuantity\": 0,\n                \"poOrderedQuantity\": 0,\n                \"interstoreRequestQuantity\": 0\n              },\n              \"quantity\": 3,\n              \"auditDetails\": {\n                \"createdBy\": \"22534\",\n                \"lastModifiedBy\": \"22534\",\n                \"createdTime\": 1514354899171,\n                \"lastModifiedTime\": 1514354899171\n              }\n            }\n          ]\n        }\n      ],\n      \"indentNumbers\": [\n        \"{{indentNumber}}\"\n      ]\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/purchaseorders/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"purchaseorders",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Material Receipt Note",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var userReceivedQty = pm.environment.get(\"userQuantity\");",
													"var rQ = (userReceivedQty) - 1;",
													"pm.environment.set(\"userReceivedQty\", rQ);",
													"",
													"",
													"var userAcceptedQty = pm.environment.get(\"userQuantity\");",
													"var rQ = (userAcceptedQty) - 2;",
													"pm.environment.set(\"userAcceptedQty\", rQ);"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var materialReceiptMRN = responseBody.MaterialReceipt[0].mrnNumber;",
													"pm.environment.set(\"materialReceiptMRN\",materialReceiptMRN);",
													"",
													"postman.setNextRequest(\"Search Material Receipt Note\");",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510290513893,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\": {\n      \"id\": 73\n    }\n  },\n  \"materialReceipt\": [\n    {\n      \"receivingStore\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"receiptDate\": \"{{today}}\",\n      \"receiptType\": \"PURCHASE RECEIPT\",\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"supplierBillNo\": \"AB-PO-2017\",\n      \"supplierBillDate\": 1512365762000,\n      \"challanNo\": \"CD-LK-2017\",\n      \"challanDate\": 1512365762000,\n      \"description\": \"description for receipt\",\n      \"paymentTerms\": \"paymentTerms for receipt\",\n      \"receivedBy\": \"Bimal\",\n      \"designation\": \"ASST-ENG\",\n      \"inspectedBy\": \"ramesh\",\n      \"inspectionDate\": 45698756,\n      \"inspectionRemarks\": \"inspection remarks for receipt\",\n      \"receiptDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\"\n          },\n          \"userReceivedQty\": \"{{userReceivedQty}}\",\n          \"userAcceptedQty\": \"{{userAcceptedQty}}\",\n          \"unitRate\": 5,\n          \"isScrapItem\":\"true\",\n          \"rejectionRemark\": \"rejection remark for receipt detail\",\n          \"purchaseOrderDetail\": {\n            \"id\": \"{{PODetailsID}}\"\n          },\n         \"receiptDetailsAddnInfo\": [\n            {\n              \"userQuantity\": \"{{userAcceptedQty}}\",\n              \"manufactureDate\": 12345698,\n              \"lotNo\":\"LOT-01\",\n              \"serialNo\": \"SR-02\",\n              \"expiryDate\": 1544509979000,\n              \"batchNo\": \"BA-NO-2017\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/receiptnotes/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"receiptnotes",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Material Issue",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var today = new Date().getTime();",
													"pm.environment.set(\"today\", today);"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var issueNumber = responseBody.materialIssues[0].issueNumber;",
													"pm.environment.set(\"issueNumber\",issueNumber);",
													"",
													"postman.setNextRequest(\"Search Material Issue\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"12345677\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"rajesh\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":\n    {\n      \"id\":\"1\",\n      \"userName\":\"Bimal\",\n      \"tenantId\":\"{{tenantId}}\"\n    }\n\n  },\n  \"materialIssues\":[\n    {\n    \"issueType\": \"INDENTISSUE\",\n    \"issuePurpose\":\"write off\",\n    \"materialIssueStatus\": \"CREATED\",\n    \"tenantId\":\"{{tenantId}}\",\n    \"fromStore\":{\n      \"id\":\"1\",\n      \"code\":\"{{storeCode}}\",\n      \"name\":\"manyavars\",\n      \"description\":\"njdcfjdjc\",\n      \"billingAddress\":\"djsadjsadxj\",\n          \"department\":{\n           \"id\":\"1\",\n           \"name\":\"clothes\"\n      },\n      \"deliveryAddress\":\"jhvjdshjdsjc\",\n      \"storeInCharge\":{\n        \"code\":\"storeincharge1\"\n      },\n      \"tenantId\":\"default\"\n    },\n    \"toStore\":null,\n    \"issueDate\":\"{{today}}\",\n    \"description\":\"this is a defect\",\n    \"designation\":\"issue inspector\",\n    \"indent\":{\n      \"id\": \"1\",\n      \"tenantId\":\"{{tenantId}}\",\n      \"issueStore\":null,\n    \"indentStore\": null,\n      \"indentNumber\":\"{{indentNumber}}\",\n      \"indentDate\":\"1512864000000\",\n      \"indentType\":\"Indent\",\n      \"indentPurpose\":\"Consumption\",\n      \"indentCreatedBy\":\"Bimal\",\n      \"designation\":\"assistant manager\",\n      \"indentDetails\":[\n        {\n          \"id\":\"1\",\n          \"uom\":{\n            \"id\":\"1\"\n          },\n          \"userQuantity\":\"{{userQuantity}}\",\n          \"material\":{\n            \"id\":\"1\"\n          }\n        }]\n     },\n     \"issuedToEmployee\":null,\n     \"issuedToDesignation\":null,\n     \"supplier\":{\n       \"id\":\"1\",\n       \"tenantId\":\"default\",\n       \"type\":\"OTHERS\",\n       \"code\":\"{{SupplierCode}}\",\n       \"name\":\"ANAND\",\n       \"ifsc\":\"6767676787\",\n       \"contactNo\":\"7878988899\",\n       \"bankCode\":\"CITI\",\n       \"address\":\"jjdshcfjdh\",\n       \"acctNo\":\"9844989489\"\n   \n     },\n     \"materialIssueDetails\":[\n       {\n    \n         \"tenantId\":\"{{tenantId}}\",\n         \"material\":{\n           \"id\":\"1\",\n           \"tenantId\":\"default\",\n           \"code\":\"{{materialCode}}\",\n           \"name\":\"pensss\",\n           \"description\":\"stationary pen\",\n           \"reorderLevel\":\"2\",\n           \"materialType\":{\n             \"id\":\"1\",\n             \"name\":\"stationary\"\n           },\n           \"baseUom\":{\n             \"id\":\"1\"\n           },\n           \"minQuantity\":\"5\",\n           \"stockingUom\":{\n             \"id\":\"1\"\n           },\n           \"inventoryType\":\"Asset\",\n        \t\"materialClass\":\"MediumUsage\",\n           \"maxQuantity\":\"9\",\n           \"reorderQuantity\":\"56\",\n             \"purchaseUom\":{\n             \"id\":\"1\"\n           },\n             \"materialControlType\":\"LOTControl\"\n         },\n         \"orderNumber\":\"5\",\n         \"userQuantityIssued\":\"{{userAcceptedQty}}\",\n         \"value\":\"100\",\n         \"uom\": {\n           \"id\":\"1\",\n           \"code\":\"{{UomCode}}\",\n           \"name\":\"dozens\"\n            },\n         \"voucherHeader\":\"vou123\",\n         \"indentDetail\":{\n           \"id\":\"{{indentDetailsId}}\",\n           \"tenantId\":\"default\",\n           \"userQuantity\":\"{{userQuantity}}\",\n           \"uom\": null,\n           \"material\": null,\n         \"description\":\"broken pens\"\n       \n       }\n      }\n     ]\n    }]\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materialissues/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materialissues",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Matrial Issue",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"12345677\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"rajesh\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":\n    {\n      \"id\":\"1\",\n      \"userName\":\"Bimal\",\n      \"tenantId\":\"{{tenantId}}\"\n    }\n\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materialissues/_search?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materialissues",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Format",
							"item": [],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Transfer Outward with PO",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
											"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
											"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
											"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
											"    postman.setEnvironmentVariable(\"username\",\"uday\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
											"",
											"postman.setNextRequest(\"MDMS_DATA\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"type": "text",
											"value": "{{username}}"
										},
										{
											"key": "password",
											"type": "text",
											"value": "{{password}}"
										},
										{
											"key": "grant_type",
											"type": "text",
											"value": "password"
										},
										{
											"key": "scope",
											"type": "text",
											"value": "read"
										},
										{
											"key": "tenantId",
											"type": "text",
											"value": "{{tenantId}}"
										}
									]
								},
								"url": {
									"raw": "{{url}}/user/oauth/token",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"oauth",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "MDMS_DATA",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"var resBody = JSON.parse(responseBody);",
											"",
											"",
											"var max = resBody.MdmsRes.inventory.Material.length - 1;",
											"         var rand = 0;",
											"         var materialCode = null;",
											"         var UomCode = null;",
											"         if(max > -1){",
											"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
											"             materialCode = resBody.MdmsRes.inventory.Material[rand].code;",
											"             pm.environment.set(\"materialCode\",materialCode);",
											"             ",
											"             UomCode = resBody.MdmsRes.inventory.Material[rand].baseUom.code;",
											"             pm.environment.set(\"UomCode\",UomCode);",
											"}",
											"",
											"postman.setNextRequest(\"Create Indents\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"inventory-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               },\n               {\n               \t \"name\":\"Uom\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{url}}/egov-mdms-service/v1/_search",
									"host": [
										"{{url}}"
									],
									"path": [
										"egov-mdms-service",
										"v1",
										"_search"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search Store",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var resBody = JSON.parse(responseBody);",
											"var max = resBody.stores.length - 1;",
											"         var rand = 0;",
											"         var storeCode = null;",
											"         if(max > -1){",
											"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
											"             storeCode = resBody.stores[rand].code;",
											"             pm.environment.set(\"storeCode\",storeCode);",
											"            //  rand1 = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
											"",
											"}",
											"",
											"postman.setNextRequest(\"Create Indents\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n        \"id\":2\n      }\n }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/stores/_search?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"stores",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Store",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var name1 = Math.floor(Math.random() * 10000);",
											"",
											"postman.setEnvironmentVariable(\"randStoreCode\",\"STORECODE\"+name1);",
											"",
											"",
											"var name2 = Math.random().toString(26).replace(/[^a-z]+/g, '').substr(0, 5);",
											"",
											"postman.setEnvironmentVariable(\"storeName\",\"Store Name \"+name2);",
											"",
											"",
											"",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"postman.setNextRequest(\"Create Purchase Order Generation\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"stores\": [\n    {\n      \"code\": \"{{randStoreCode}}\",\n      \"name\": \"{{storeName}}\",\n      \"department\": {\n        \"code\": \"ADM\"\n      },\n      \"description\": \"test\",\n      \"officeLocation\": {\n        \"code\": \"LOC1\"\n      },\n      \"isCentralStore\": true,\n      \"billingAddress\": \"mumbai\",\n      \"deliveryAddress\": \"mumbai\",\n      \"storeInCharge\": {\n        \"code\": \"658039\"\n      },\n      \"contactNo1\": \"\",\n      \"email\": \"\",\n      \"active\": true,\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510742992622,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n      \"id\":1,\n      \"tenantId\":\"default\",\n      \"userName\":\"ramesh\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/stores/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"stores",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Indents",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"",
											"var indentNumber=responseBody.indents[0].indentNumber;",
											"pm.environment.set(\"indentNumber\",indentNumber);",
											"",
											"var indentQuantity=responseBody.indents[0].indentDetails[0].userQuantity;",
											"pm.environment.set(\"indentQuantity\",indentQuantity);",
											"",
											"var indentId=responseBody.indents[0].id;",
											"pm.environment.set(\"indentId\",indentId);",
											"",
											"var indentDetailsId = responseBody.indents[0].indentDetails[0].id;",
											"pm.environment.set(\"indentDetailsId\",indentDetailsId);",
											"",
											"postman.setNextRequest(\"Create Suppliers\");",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"indents\": [\n    {\n      \"issueStore\": {\n        \"code\": \"{{randStoreCode}}\"\n      },\n\t\n\t    \"indentStore\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"indentDate\": 1512412200000,\n      \"indentNumber\": \"\",\n      \"indentType\": \"Transfer Indent\",\n      \"expectedDeliveryDate\": 1512412200000,\n      \"narration\": \"fgfd\",\n      \"materialHandOverTo\": \"fdgdf\",\n      \"designation\": \"\",\n      \"indentDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\"\n          },\n          \"userQuantity\": \"12\",\n          \"asset\": {\n            \"code\": \"2\"\n          }\n        }\n      ],\n      \"indentPurpose\": \"Consumption\",\n      \"inventoryType\": \"Asset\",\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511527847642,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/indents/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"indents",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Suppliers",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var name1 = Math.floor(Math.random() * 10000);",
											"",
											"postman.setEnvironmentVariable(\"SupplierCode\",\"SUPPLIERCODE\"+name1);",
											"",
											"",
											"",
											"",
											"",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"postman.setNextRequest(\"Create Pricelists\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"RequestInfo\": {\n   \"apiId\": \"emp\",\n   \"ver\": \"1.0\",\n   \"ts\": \"12345677\",\n   \"action\": \"create\",\n   \"did\": \"1\",\n   \"key\": \"abcdkey\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"rajesh\",\n   \"authToken\": \"{{access_token}}\"\n\n  \n },\n \"suppliers\":\n[  {\n\"tenantId\":\"{{tenantId}}\",\n \t\"type\":\"INDIVIDUAL\",\n \t\"code\":\"{{SupplierCode}}\",\n \t\"active\":\"true\",\n \t\"name\":\"Anand And Sons\",\n \t\"address\":\"btm layout\",\n \t\"status\":\"ACTIVE\",\n \t\"inActiveDate\":\"15436789\",\n \t\"contactNo\":\"0132278956\",\n \t\"faxNo\":\"123788890\",\n \t\"website\":\"http://www.google.com\",\n \t\"email\":\"anand@gmail.com\",\n \t\"description\":\"supplier for cosmetics\",\n \t\"panNo\":\"DFGPV3459D\",\n \t\"tinNo\":\"34676767uiu\",\n \t\"cstNo\":\"34676767uiC\",\n \t\"vatNo\":\"34676767uiV\",\n \t\"gstNo\":\"75AGHFD7890A0Z0\",\n \t\"contactPerson\":\"anand dubay\",\n \t\"contactPersonNo\":\"8388743488\",\n \t\"bankCode\":\"CITI\",\n   \"bankBranch\":\"bankbranch1\",\n \t\"acctNo\":\"3161001500005068\",\n \t\"ifsc\":\"IFSC38899\",\n \t\"micr\":\"MICR983985\"\n \t}\n\n]\n \n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/suppliers/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"suppliers",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Pricelists",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											" var name1 = Math.floor(Math.random() * 10000);",
											"",
											" postman.setEnvironmentVariable(\"rateContractNumber\",\"rateContractNumber \"+name1);",
											" ",
											" var name2 = Math.floor(Math.random() * 10000);",
											"postman.setEnvironmentVariable(\"agreementNumber\",\"agreementNumber \"+name2);",
											"",
											"function randomPreviousDate(){",
											"   var startDate = new Date(2012,0,1).getTime();",
											"   var endDate =  new Date(2015,0,1).getTime();",
											"   var spaces = (endDate - startDate);",
											"   var timestamp = Math.round(Math.random() * spaces);",
											"   timestamp += startDate;",
											"   return new Date(timestamp);",
											"}",
											"",
											"function randomFutureDate(){",
											"   var startDate = new Date().getTime();",
											"   var endDate =  new Date(2019,0,1).getTime();",
											"   var spaces = (endDate - startDate);",
											"   var timestamp = Math.round(Math.random() * spaces);",
											"   timestamp += startDate;",
											"   return new Date(timestamp);",
											"}",
											"",
											"",
											"var PreviousTime = new randomPreviousDate().getTime();",
											"",
											"var FutureTime = new randomFutureDate().getTime();",
											"",
											"pm.environment.set(\"PreviousTime\",PreviousTime);",
											"pm.environment.set(\"FutureTime\",FutureTime);",
											"",
											"",
											"",
											"",
											"",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"var requestBody = JSON.parse(request.data);",
											"",
											"var ResSupplierCode = responseBody.priceLists[0].supplier.code;",
											"pm.environment.set(\"ResSupplierCode\",ResSupplierCode);",
											"",
											"",
											"var unitPrice=requestBody.priceLists[0].priceListDetails[0].ratePerUnit;",
											"pm.environment.set(\"unitPrice\",unitPrice);",
											"",
											"var responsePriceList=responseBody.priceLists[0];",
											"pm.environment.set(\"responsePriceList\",JSON.stringify(responsePriceList));",
											"",
											"postman.setNextRequest(\"Create Store\");",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"priceLists\": [\n    {\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"rateContractNumber\": \"{{rateContractNumber}}\",\n      \"rateContractDate\": 1489224710000,\n      \"agreementNumber\": \"{{agreementNumber}}\",\n      \"agreementDate\": 1491903110000,\n      \"agreementStartDate\": \"{{PreviousTime}}\",\n      \"agreementEndDate\": \"{{FutureTime}}\",\n      \"active\": true,\n      \"fileStoreId\": \"\",\n      \"rateType\": \"Quotation\",\n      \"priceListDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\",\n            \"conversionFactor\": 1\n          },\n          \"ratePerUnit\": \"12\",\n          \"quantity\": \"11\"\n        }\n      ],\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1512988123880,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/pricelists/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"pricelists",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Purchase Order Generation",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"// // console.log(JSON.stringify(responseBody));",
											"// var ResPriceListPO= responseBody.purchaseOrders[0].purchaseOrderDetails[0].priceList.id;",
											"// pm.environment.set(\"ResPriceListPO\",ResPriceListPO);",
											"",
											"var ResPurchaseIndentDetails= responseBody.purchaseOrders[0].purchaseOrderDetails[0].purchaseIndentDetails[0];",
											"pm.environment.set(\"ResPurchaseIndentDetails\",JSON.stringify(ResPurchaseIndentDetails));",
											"",
											"",
											"postman.setNextRequest(\"Create Purchase Order\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"purchaseOrders\": [\n    {\n      \"indentNumbers\": [\n        \"{{indentNumber}}\"\n      ],   \n      \"purchaseType\":\"Indent\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1513579003518,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/purchaseorders/_preparepofromindents?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"purchaseorders",
										"_preparepofromindents"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Purchase Order",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var today = new Date().getTime();",
											"pm.environment.set(\"today\", today);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody=JSON.parse(responseBody);",
											"var RespurchaseOrderNumber=responseBody.purchaseOrders[0].purchaseOrderNumber;",
											"pm.environment.set(\"purchaseOrderNumber\",RespurchaseOrderNumber);",
											"",
											"var PODetailsID=responseBody.purchaseOrders[0].purchaseOrderDetails[0].id;",
											"pm.environment.set(\"PODetailsID\",PODetailsID);",
											"",
											"// postman.setNextRequest(\"Search Purchase Order\");",
											"",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1513930422037,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \"purchaseOrders\": [\n    {\n      \"store\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"purchaseType\": \"Indent\",\n      \"tenantId\": \"{{tenantId}}\",\n      \"purchaseOrderDate\": \"{{today}}\",\n      \"rateType\": \"Quotation\",\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"purchaseOrderDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"material\": {\n            \"tenantId\": \"{{tenantId}}\",\n            \"code\": \"{{materialCode}}\",\n            \"name\": \"SEAL\",\n            \"description\": \"Seal\",\n            \"materialType\": {\n              \"code\": \"MAT1\"\n            },\n            \"baseUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"purchaseUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"expenseAccount\": {\n              \"glCode\": \"44001\"\n            },\n            \"minQuantity\": 2,\n            \"maxQuantity\": 20,\n            \"stockingUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"reorderLevel\": 10,\n            \"reorderQuantity\": 12,\n            \"lotControl\": false,\n            \"shelfLifeControl\": false,\n            \"serialNumber\": false\n          },\n          \"uom\": {\n            \"id\": \"1\",\n            \"tenantId\": \"default\",\n            \"code\": \"NOS\",\n            \"description\": \"Numbers\",\n            \"baseUom\": true,\n            \"uomCategory\": \"QUANTITY\",\n            \"fromDate\": 1508740856,\n            \"toDate\": 1893436200,\n            \"conversionFactor\": 1\n          },\n          \"priceList\" : {{responsePriceList}},\n          \"unitPrice\": 12,\n          \"indentNumber\": \"{{indentNumber}}\",\n          \"userQuantity\": \"{{indentQuantity}}\",\n          \"orderQuantity\": \"{{indentQuantity}}\",\n          \"tenderQuantity\": 0,\n          \"receivedQuantity\": 0,\n          \"usedQuantity\": 0,\n          \"purchaseIndentDetails\": [\n            {\n              \"tenantId\": \"default\",\n              \"indentDetail\": {\n                \"id\": \"158\",\n                \"tenantId\": \"default\",\n                \"material\": {\n                  \"tenantId\": \"default\",\n                  \"code\": \"{{materialCode}}\",\n                  \"name\": \"SEAL\",\n                  \"description\": \"Seal\",\n                  \"materialType\": {\n                    \"code\": \"MT1\"\n                  },\n                  \"baseUom\": {\n                    \"id\": \"1\",\n                    \"tenantId\": \"default\",\n                    \"code\": \"NOS\",\n                    \"description\": \"Numbers\",\n                    \"baseUom\": true,\n                    \"uomCategory\": \"QUANTITY\",\n                    \"fromDate\": 1508740856,\n                    \"toDate\": 1893436200,\n                    \"conversionFactor\": 1\n                  },\n                  \"purchaseUom\": {\n                    \"id\": \"1\",\n                    \"tenantId\": \"default\",\n                    \"code\": \"NOS\",\n                    \"description\": \"Numbers\",\n                    \"baseUom\": true,\n                    \"uomCategory\": \"QUANTITY\",\n                    \"fromDate\": 1508740856,\n                    \"toDate\": 1893436200,\n                    \"conversionFactor\": 1\n                  },\n                  \"expenseAccount\": {\n                    \"glCode\": \"44001\"\n                  },\n                  \"minQuantity\": 2,\n                  \"maxQuantity\": 20,\n                  \"stockingUom\": {\n                    \"id\": \"1\",\n                    \"tenantId\": \"default\",\n                    \"code\": \"NOS\",\n                    \"description\": \"Numbers\",\n                    \"baseUom\": true,\n                    \"uomCategory\": \"QUANTITY\",\n                    \"fromDate\": 1508740856,\n                    \"toDate\": 1893436200,\n                    \"conversionFactor\": 1\n                  },\n                  \"reorderLevel\": 10,\n                  \"reorderQuantity\": 12,\n                  \"lotControl\": false,\n                  \"shelfLifeControl\": false,\n                  \"serialNumber\": false\n                },\n                \"uom\": {\n                  \"code\": \"NOS\",\n                  \"baseUom\": false\n                },\n                \"projectCode\": {\n                  \n                },\n                \"asset\": {\n                  \"code\": \"2\"\n                },\n                \"indentQuantity\": 3,\n                \"totalProcessedQuantity\": 0,\n                \"indentIssuedQuantity\": 0,\n                \"poOrderedQuantity\": 0,\n                \"interstoreRequestQuantity\": 0\n              },\n              \"quantity\": 3,\n              \"auditDetails\": {\n                \"createdBy\": \"22534\",\n                \"lastModifiedBy\": \"22534\",\n                \"createdTime\": 1514354899171,\n                \"lastModifiedTime\": 1514354899171\n              }\n            }\n          ]\n        }\n      ],\n      \"indentNumbers\": [\n        \"{{indentNumber}}\"\n      ]\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/purchaseorders/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"purchaseorders",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Material Receipt Note",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var userReceivedQty = pm.environment.get(\"indentQuantity\");",
											"var rQ = (userReceivedQty) - 1;",
											"pm.environment.set(\"userReceivedQty\", rQ);",
											"",
											"",
											"var userAcceptedQty = pm.environment.get(\"indentQuantity\");",
											"var rQ = (userAcceptedQty) - 2;",
											"pm.environment.set(\"userAcceptedQty\", rQ);",
											"",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"",
											"var materialReceiptMRN = responseBody.MaterialReceipt[0].mrnNumber;",
											"pm.environment.set(\"materialReceiptMRN\",materialReceiptMRN);",
											"",
											"postman.setNextRequest(\"Create Material Issue\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510290513893,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\": {\n      \"id\": 73\n    }\n  },\n  \"materialReceipt\": [\n    {\n      \"receivingStore\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"receiptDate\": \"{{today}}\",\n      \"receiptType\": \"PURCHASE RECEIPT\",\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"supplierBillNo\": \"AB-PO-2017\",\n      \"supplierBillDate\": 1512365762000,\n      \"challanNo\": \"CD-LK-2017\",\n      \"challanDate\": 1512365762000,\n      \"description\": \"description for receipt\",\n      \"paymentTerms\": \"paymentTerms for receipt\",\n      \"receivedBy\": \"Bimal\",\n      \"designation\": \"ASST-ENG\",\n      \"inspectedBy\": \"ramesh\",\n      \"inspectionDate\": 45698756,\n      \"inspectionRemarks\": \"inspection remarks for receipt\",\n      \"receiptDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\"\n          },\n          \"userReceivedQty\": \"{{userReceivedQty}}\",\n          \"userAcceptedQty\": \"{{userAcceptedQty}}\",\n          \"unitRate\": 5,\n          \"isScrapItem\":\"true\",\n          \"rejectionRemark\": \"rejection remark for receipt detail\",\n          \"purchaseOrderDetail\": {\n            \"id\": \"{{PODetailsID}}\"\n          },\n         \"receiptDetailsAddnInfo\": [\n            {\n              \"userQuantity\": \"{{userAcceptedQty}}\",\n              \"manufactureDate\": 12345698,\n              \"lotNo\":\"LOT-01\",\n              \"serialNo\": \"SR-02\",\n              \"expiryDate\": 1544509979000,\n              \"batchNo\": \"BA-NO-2017\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/receiptnotes/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"receiptnotes",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Material Issue",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var today = new Date().getTime();",
											"pm.environment.set(\"today\", today);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"12345677\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"rajesh\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":\n    {\n      \"id\":\"1\",\n      \"userName\":\"Bimal\",\n      \"tenantId\":\"{{tenantId}}\"\n    }\n\n  },\n  \"materialIssues\":[\n    {\n    \"tenantId\":\"{{tenantId}}\",\n    \"fromStore\":null,\n    \"toStore\":null,\n    \"issueDate\":\"{{today}}\",\n    \"description\":\"this is a defect\",\n    \"designation\":\"issue inspector\",\n    \"indent\":{\n      \"id\": \"{{indentId}}\",\n      \"tenantId\":\"{{tenantId}}\",\n      \"issueStore\":{\n      \"id\":\"1\",\n      \"code\":\"{{randStoreCode}}\",\n      \"name\":\"manyavars\",\n      \"description\":\"njdcfjdjc\",\n      \"billingAddress\":\"djsadjsadxj\",\n          \"department\":{\n           \"id\":\"1\",\n           \"name\":\"clothes\"\n      },\n      \"deliveryAddress\":\"jhvjdshjdsjc\",\n      \"storeInCharge\":{\n        \"code\":\"storeincharge1\"\n      },\n      \"tenantId\":\"default\"\n    },\n    \"indentStore\": null,\n      \"indentNumber\":\"{{indentNumber}}\",\n      \"indentDate\":\"1512864000000\",\n      \"indentType\":\"Indent\",\n      \"indentPurpose\":\"Consumption\",\n      \"indentCreatedBy\":\"Bimal\",\n      \"designation\":\"assistant manager\",\n      \"indentDetails\":[\n        {\n          \"id\":\"1\",\n          \"uom\":{\n            \"id\":\"1\"\n          },\n          \"userQuantity\":\"{{indentQuantity}}\",\n          \"material\":{\n            \"id\":\"1\"\n          }\n        }]\n     },\n     \"issuedToEmployee\":null,\n     \"issuedToDesignation\":null,\n     \"supplier\":{\n       \"id\":\"1\",\n       \"tenantId\":\"default\",\n       \"type\":\"OTHERS\",\n       \"code\":\"{{SupplierCode}}\",\n       \"name\":\"ANAND\",\n       \"ifsc\":\"6767676787\",\n       \"contactNo\":\"7878988899\",\n       \"bankCode\":\"CITI\",\n       \"address\":\"jjdshcfjdh\",\n       \"acctNo\":\"9844989489\"\n   \n     },\n     \"materialIssueDetails\":[\n       {\n    \n         \"tenantId\":\"{{tenantId}}\",\n         \"material\":null,\n         \"orderNumber\":\"5\",\n         \"userQuantityIssued\":\"{{receivedQuantity}}\",\n         \"value\":\"100\",\n         \"uom\": null,\n         \"voucherHeader\":\"vou123\",\n         \"indentDetail\":{\n           \"id\":\"{{indentDetailsId}}\",\n           \"tenantId\":\"default\",\n           \"userQuantity\":\"{{indentQuantity}}\",\n           \"uom\":{\n           \"id\":\"1\",\n           \"code\":\"{{UomCode}}\",\n           \"name\":\"dozens\"\n            },\n           \"material\":{\n           \"id\":\"1\",\n           \"tenantId\":\"default\",\n           \"code\":\"{{materialCode}}\",\n           \"name\":\"pensss\",\n           \"description\":\"stationary pen\",\n           \"reorderLevel\":\"2\",\n           \"materialType\":{\n             \"id\":\"1\",\n             \"name\":\"stationary\"\n           },\n           \"baseUom\":{\n             \"id\":\"1\"\n           },\n           \"minQuantity\":\"5\",\n           \"stockingUom\":{\n             \"id\":\"1\"\n           },\n           \"inventoryType\":\"Asset\",\n        \t\"materialClass\":\"MediumUsage\",\n           \"maxQuantity\":\"9\",\n           \"reorderQuantity\":\"56\",\n             \"purchaseUom\":{\n             \"id\":\"1\"\n           },\n             \"materialControlType\":\"LOTControl\"\n          }\n         \n         },\n         \"description\":\"broken pens\"\n       \n       }\n       ]\n    }]\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/materialissues/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"materialissues",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Transfer OutWard",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"12345677\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"rajesh\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":\n    {\n      \"id\":\"1\",\n      \"userName\":\"bimal\",\n      \"tenantId\":\"{{tenantId}}\"\n    }\n\n  },\n  \"materialIssues\":[\n    {\n    \"tenantId\":\"default\",\n    \"fromStore\":null,\n    \"toStore\":null,\n    \"issueDate\":\"123456987\",\n    \"description\":\"this is a defect\",\n    \"designation\":\"issue inspector\",\n    \"indent\":{\n      \"id\":\"1\",\n      \"tenantId\":\"default\",\n      \"issueStore\":{\n      \"id\":\"1\",\n      \"code\":\"{{randStoreCode}}\",\n      \"name\":\"manyavars\",\n        \"description\":\"njdcfjdjc\",\n        \"billingAddress\":\"djsadjsadxj\",\n          \"department\":{\n        \"id\":\"1\",\n        \"name\":\"clothes\"\n      },\n      \"deliveryAddress\":\"jhvjdshjdsjc\",\n      \"storeInCharge\":{\n        \"code\":\"storeincharge1\"\n      },\n      \"tenantId\":\"default\"\n    },\n    \"indentStore\": {\n      \"id\":\"1\",\n      \"code\":\"{{storeCode}}\",\n      \"name\":\"manyavars\",\n        \"description\":\"njdcfjdjc\",\n        \"billingAddress\":\"djsadjsadxj\",\n          \"department\":{\n        \"id\":\"1\",\n        \"name\":\"clothes\"\n      },\n      \"deliveryAddress\":\"jhvjdshjdsjc\",\n      \"storeInCharge\":{\n        \"code\":\"storeincharge1\"\n      },\n      \"tenantId\":\"default\"\n    },\n      \"indentNumber\":\"{{indentNumber}}\",\n      \"indentDate\":\"1512864000000\",\n      \"indentType\":\"Indent\",\n      \"indentPurpose\":\"Consumption\",\n      \"indentCreatedBy\":\"Bimal\",\n      \"designation\":\"assistant manager\",\n      \"indentDetails\":[\n        {\n          \"id\":\"1\",\n          \"uom\":{\n            \"id\":\"1\"\n          },\n          \"indentQuantity\":\"56\",\n          \"material\":{\n            \"id\":\"1\"\n          }\n        }]\n     },\n     \"issuedToEmployee\":null,\n     \"issuedToDesignation\":null,\n     \"supplier\":{\n       \"id\":\"1\",\n       \"tenantId\":\"default\",\n       \"type\":\"OTHERS\",\n       \"code\":\"SUPP123\",\n       \"name\":\"ANAND\",\n       \"ifsc\":\"6767676787\",\n       \"contactNo\":\"7878988899\",\n       \"bankCode\":\"bank123\",\n       \"address\":\"jjdshcfjdh\",\n       \"acctNo\":\"9844989489\"\n   \n     },\n     \"materialIssueDetails\":[\n       {\n    \n         \"tenantId\":\"default\",\n         \"material\":null,\n         \"orderNumber\":\"5\",\n         \"userQuantityIssued\":5,\n         \"uom\": null,\n         \"voucherHeader\":\"vou123\",\n         \"indentDetail\":{\n           \"id\":\"{{indentDetailsId}}\",\n           \"tenantId\":\"default\",\n           \"indentQuantity\":8,\n           \"uom\":{\n           \"id\":\"1\",\n           \"code\":\"{{UomCode}}\",\n           \"name\":\"dozens\"\n            },\n           \"material\":{\n           \"id\":\"1\",\n           \"tenantId\":\"default\",\n           \"code\":\"{{materialCode}}\",\n           \"name\":\"pensss\",\n           \"description\":\"stationary pen\",\n           \"reorderLevel\":\"2\",\n           \"materialType\":{\n             \"id\":\"1\",\n             \"name\":\"stationary\"\n           },\n           \"baseUom\":{\n             \"id\":\"1\"\n           },\n           \"minQuantity\":\"5\",\n           \"stockingUom\":{\n             \"id\":\"1\"\n           },\n           \"inventoryType\":\"Asset\",\n         \"materialClass\":\"MediumUsage\",\n           \"maxQuantity\":\"9\",\n           \"reorderQuantity\":\"56\",\n             \"purchaseUom\":{\n             \"id\":\"1\"\n           },\n             \"materialControlType\":\"LOTControl\"\n         \n         }\n         \n         },\n         \"description\":\"broken pens\"\n       \n       }\n       ]\n    }]\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/materialissues-to/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"materialissues-to",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search Transfer Outward",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"12345677\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"rajesh\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":\n    {\n      \"id\":\"1\",\n      \"userName\":\"mansi\",\n      \"tenantId\":\"default\"\n    }\n\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/materialissues-to/_search?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"materialissues-to",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Transfer Outword",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"12345677\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"rajesh\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":\n    {\n      \"id\":\"1\",\n      \"userName\":\"mansi\",\n      \"tenantId\":\"default\"\n    }\n\n  },\n  \"materialIssues\":[\n    {\n    \"materialIssueStatus\":\"APPROVED\",\n     \"issueNumber\":\"MRIN-2017-47\",\n    \"tenantId\":\"default\",\n    \"fromStore\":{\n      \"id\":\"1\",\n      \"code\":\"store123\",\n      \"name\":\"manyavars\",\n      \"officeLocation\":{\n      \t\"code\":\"loc\"\n      },\n        \"description\":\"njdcfjdjc\",\n        \"billingAddress\":\"djsadjsadxj\",\n          \"department\":{\n        \"id\":\"1\",\n        \"name\":\"clothes\"\n      },\n      \"deliveryAddress\":\"jhvjdshjdsjc\",\n      \"storeInCharge\":{\n        \"code\":\"storeincharge1\"\n      },\n      \"tenantId\":\"default\"\n    },\n    \"toStore\":{\n      \"id\":\"1\",\n      \"code\":\"store123\",\n      \"name\":\"manyavars\",\n      \"officeLocation\":{\n      \t\"code\":\"loc\"\n      },\n        \"description\":\"njdcfjdjc\",\n        \"billingAddress\":\"djsadjsadxj\",\n          \"department\":{\n        \"id\":\"1\",\n        \"name\":\"clothes\"\n      },\n      \"deliveryAddress\":\"jhvjdshjdsjc\",\n      \"storeInCharge\":{\n        \"code\":\"storeincharge1\"\n      },\n      \"tenantId\":\"default\"\n    },\n    \"issueDate\":\"123456987\",\n    \"description\":\"this is  a defect\",\n    \"designation\":\"issue inspector\",\n    \"indent\":{\n      \"id\":\"1\",\n      \"tenantId\":\"default\",\n      \"issueStore\":null,\n      \"indentStore\":null,\n      \"indentNumber\":\"In75834\",\n      \"indentDate\":\"1512864000000\",\n      \"indentType\":\"Indent\",\n      \"indentPurpose\":\"Consumption\",\n      \"indentCreatedBy\":\"aastha\",\n      \"designation\":\"assistant\",\n      \"indentDetails\":[\n        {\n          \"id\":\"1\",\n          \"uom\":{\n            \"id\":\"1\"\n          },\n          \"indentQuantity\":\"56\",\n          \"material\":{\n            \"id\":\"1\"\n          }\n        }]\n     },\n     \"issuedToEmployee\":null,\n     \"issuedToDesignation\":null,\n     \"supplier\":{\n       \"id\":\"1\",\n       \"tenantId\":\"default\",\n       \"type\":\"OTHERS\",\n       \"code\":\"SUPP123\",\n       \"name\":\"ANAND\",\n       \"ifsc\":\"6767676787\",\n       \"contactNo\":\"7878988899\",\n       \"bankCode\":\"bank123\",\n       \"address\":\"jjdshcfjdh\",\n       \"acctNo\":\"9844989489\"\n   \n     },\n     \"materialIssueDetails\":[\n       {\n\n         \"tenantId\":\"default\",\n         \"material\":{\n           \"id\":\"1\",\n           \"tenantId\":\"default\",\n           \"code\":\"MAT1\",\n           \"name\":\"pensss\",\n           \"description\":\"stationary pen\",\n           \"reorderLevel\":\"2\",\n           \"materialType\":{\n             \"id\":\"1\",\n             \"name\":\"stationary\"\n           },\n           \"baseUom\":{\n             \"id\":\"1\"\n           },\n           \"minQuantity\":\"5\",\n           \"stockingUom\":{\n             \"id\":\"1\"\n           },\n           \"inventoryType\":\"Asset\",\n         \"materialClass\":\"MediumUsage\",\n           \"maxQuantity\":\"9\",\n           \"reorderQuantity\":\"56\",\n             \"purchaseUom\":{\n             \"id\":\"1\"\n           },\n             \"materialControlType\":\"LOTControl\"\n         \n         },\n         \"orderNumber\":\"5\",\n         \"quantityIssued\":5,\n         \"balanceQuantity\":12,\n         \"uom\": {\n           \"id\":\"1\",\n           \"code\":\"CUL\",\n           \"name\":\"dozens\"\n            },\n         \"voucherHeader\":\"vou12367\",\n         \"indentDetail\":{\n           \"id\":\"1\",\n           \"tenantId\":\"default\",\n           \"indentQuantity\":8,\n           \"uom\": null,\n           \"material\":null\n         \n         },\n         \"description\":\"broken pencils\"\n\n       }\n       ]\n    }]\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/materialissues-to/_update?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"materialissues-to",
										"_update"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search Update Transfer Outward",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"12345677\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"rajesh\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":\n    {\n      \"id\":\"1\",\n      \"userName\":\"Bimal\",\n      \"tenantId\":\"default\"\n    }\n\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/materialissues-to/_search?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"materialissues-to",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Transfer Outward with OB",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
											"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
											"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
											"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
											"    postman.setEnvironmentVariable(\"username\",\"uday\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
											"",
											"postman.setNextRequest(\"MDMS_DATA\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"type": "text",
											"value": "{{username}}"
										},
										{
											"key": "password",
											"type": "text",
											"value": "{{password}}"
										},
										{
											"key": "grant_type",
											"type": "text",
											"value": "password"
										},
										{
											"key": "scope",
											"type": "text",
											"value": "read"
										},
										{
											"key": "tenantId",
											"type": "text",
											"value": "{{tenantId}}"
										}
									]
								},
								"url": {
									"raw": "{{url}}/user/oauth/token",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"oauth",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "MDMS_DATA",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"var resBody = JSON.parse(responseBody);",
											"",
											"",
											"var max = resBody.MdmsRes.inventory.Material.length - 1;",
											"         var rand = 0;",
											"         var materialCode = null;",
											"         var UomCode = null;",
											"         if(max > -1){",
											"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
											"             materialCode = resBody.MdmsRes.inventory.Material[rand].code;",
											"             pm.environment.set(\"materialCode\",materialCode);",
											"             ",
											"             UomCode = resBody.MdmsRes.inventory.Material[rand].baseUom.code;",
											"             pm.environment.set(\"UomCode\",UomCode);",
											"}",
											"",
											"postman.setNextRequest(\"Create Indents\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"inventory-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               },\n               {\n               \t \"name\":\"Uom\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{url}}/egov-mdms-service/v1/_search",
									"host": [
										"{{url}}"
									],
									"path": [
										"egov-mdms-service",
										"v1",
										"_search"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search Store",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var resBody = JSON.parse(responseBody);",
											"",
											"var max = resBody.stores.length - 1;",
											"         var rand = 0;",
											"         var storeCode = null;",
											"         if(max > -1){",
											"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
											"             storeCode = resBody.stores[rand].code;",
											"             pm.environment.set(\"storeCode\",storeCode);",
											"}",
											"postman.setNextRequest(\"Create Indent\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n        \"id\":2\n      }\n }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/stores/_search?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"stores",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Store",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var name1 = Math.floor(Math.random() * 10000);",
											"postman.setEnvironmentVariable(\"randStoreCode\",\"STORECODE\"+name1);",
											"",
											"var name2 = Math.random().toString(26).replace(/[^a-z]+/g, '').substr(0, 5);",
											"postman.setEnvironmentVariable(\"storeName\",\"Store Name \"+name2);",
											"",
											"",
											"",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"postman.setNextRequest(\"Create Purchase Order Generation\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"stores\": [\n    {\n      \"code\": \"{{randStoreCode}}\",\n      \"name\": \"{{storeName}}\",\n      \"department\": {\n        \"code\": \"ADM\"\n      },\n      \"description\": \"test\",\n      \"officeLocation\": {\n        \"code\": \"LOC1\"\n      },\n      \"isCentralStore\": true,\n      \"billingAddress\": \"mumbai\",\n      \"deliveryAddress\": \"mumbai\",\n      \"storeInCharge\": {\n        \"code\": \"658039\"\n      },\n      \"contactNo1\": \"\",\n      \"email\": \"\",\n      \"active\": true,\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510742992622,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n      \"id\":1,\n      \"tenantId\":\"default\",\n      \"userName\":\"ramesh\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/stores/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"stores",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Indents",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"var requestBody = JSON.parse(request.data);",
											"",
											"var indentNumber=responseBody.indents[0].indentNumber;",
											"pm.environment.set(\"indentNumber\",indentNumber);",
											"",
											"var userQuantity=responseBody.indents[0].indentDetails[0].userQuantity;",
											"pm.environment.set(\"userQuantity\",userQuantity);",
											"",
											"var indentId=responseBody.indents[0].id;",
											"pm.environment.set(\"indentId\",indentId);",
											"",
											"var indentDetailsId = responseBody.indents[0].indentDetails[0].id;",
											"pm.environment.set(\"indentDetailsId\",indentDetailsId);",
											"",
											"postman.setNextRequest(\"Create Supplier\");",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"indents\": [\n    {\n      \"issueStore\": {\n        \"code\": \"{{randStoreCode}}\"\n      },\n\t\n\t    \"indentStore\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"indentDate\": 1512412200000,\n      \"indentNumber\": \"\",\n      \"indentType\": \"Indent\",\n      \"expectedDeliveryDate\": 1512412200000,\n      \"narration\": \"fgfd\",\n      \"materialHandOverTo\": \"fdgdf\",\n      \"designation\": \"\",\n      \"indentDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\"\n          },\n          \"userQuantity\": \"12\",\n          \"asset\": {\n            \"code\": \"2\"\n          }\n        }\n      ],\n      \"indentPurpose\": \"Consumption\",\n      \"inventoryType\": \"Asset\",\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511527847642,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/indents/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"indents",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Suppliers",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var name1 = Math.floor(Math.random() * 10000);",
											"postman.setEnvironmentVariable(\"SupplierCode\",\"SUPPLIERCODE\"+name1);",
											"",
											"",
											"",
											"",
											"",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"postman.setNextRequest(\"Create Pricelists\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"RequestInfo\": {\n   \"apiId\": \"emp\",\n   \"ver\": \"1.0\",\n   \"ts\": \"12345677\",\n   \"action\": \"create\",\n   \"did\": \"1\",\n   \"key\": \"abcdkey\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"rajesh\",\n   \"authToken\": \"{{access_token}}\"\n\n  \n },\n \"suppliers\":\n[  {\n\"tenantId\":\"{{tenantId}}\",\n \t\"type\":\"INDIVIDUAL\",\n \t\"code\":\"{{SupplierCode}}\",\n \t\"active\":\"true\",\n \t\"name\":\"Anand And Sons\",\n \t\"address\":\"btm layout\",\n \t\"status\":\"ACTIVE\",\n \t\"inActiveDate\":\"15436789\",\n \t\"contactNo\":\"0132278956\",\n \t\"faxNo\":\"123788890\",\n \t\"website\":\"http://www.google.com\",\n \t\"email\":\"anand@gmail.com\",\n \t\"description\":\"supplier for cosmetics\",\n \t\"panNo\":\"DFGPV3459D\",\n \t\"tinNo\":\"34676767uiu\",\n \t\"cstNo\":\"34676767uiC\",\n \t\"vatNo\":\"34676767uiV\",\n \t\"gstNo\":\"75AGHFD7890A0Z0\",\n \t\"contactPerson\":\"anand dubay\",\n \t\"contactPersonNo\":\"8388743488\",\n \t\"bankCode\":\"CITI\",\n   \"bankBranch\":\"bankbranch1\",\n \t\"acctNo\":\"3161001500005068\",\n \t\"ifsc\":\"IFSC38899\",\n \t\"micr\":\"MICR983985\"\n \t}\n\n]\n \n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/suppliers/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"suppliers",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Pricelists",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var name1 = Math.floor(Math.random() * 10000);",
											"postman.setEnvironmentVariable(\"rateContractNumber\",\"rateContractNumber \"+name1);",
											" ",
											"var name2 = Math.floor(Math.random() * 10000);",
											"postman.setEnvironmentVariable(\"agreementNumber\",\"agreementNumber \"+name2);",
											"",
											"function randomPreviousDate(){",
											"   var startDate = new Date(2012,0,1).getTime();",
											"   var endDate =  new Date(2015,0,1).getTime();",
											"   var spaces = (endDate - startDate);",
											"   var timestamp = Math.round(Math.random() * spaces);",
											"   timestamp += startDate;",
											"   return new Date(timestamp);",
											"}",
											"",
											"function randomFutureDate(){",
											"   var startDate = new Date().getTime();",
											"   var endDate =  new Date(2019,0,1).getTime();",
											"   var spaces = (endDate - startDate);",
											"   var timestamp = Math.round(Math.random() * spaces);",
											"   timestamp += startDate;",
											"   return new Date(timestamp);",
											"}",
											"",
											"var PreviousTime = new randomPreviousDate().getTime();",
											"var FutureTime = new randomFutureDate().getTime();",
											"",
											"pm.environment.set(\"PreviousTime\",PreviousTime);",
											"pm.environment.set(\"FutureTime\",FutureTime);",
											"",
											"",
											"",
											"",
											"",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"var requestBody = JSON.parse(request.data);",
											"",
											"var ResSupplierCode = responseBody.priceLists[0].supplier.code;",
											"pm.environment.set(\"ResSupplierCode\",ResSupplierCode);",
											"",
											"var unitPrice=requestBody.priceLists[0].priceListDetails[0].ratePerUnit;",
											"pm.environment.set(\"unitPrice\",unitPrice);",
											"",
											"var responsePriceList=responseBody.priceLists[0];",
											"pm.environment.set(\"responsePriceList\",JSON.stringify(responsePriceList));",
											"",
											"postman.setNextRequest(\"Create Store\");",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"priceLists\": [\n    {\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"rateContractNumber\": \"{{rateContractNumber}}\",\n      \"rateContractDate\": 1489224710000,\n      \"agreementNumber\": \"{{agreementNumber}}\",\n      \"agreementDate\": 1491903110000,\n      \"agreementStartDate\": \"{{PreviousTime}}\",\n      \"agreementEndDate\": \"{{FutureTime}}\",\n      \"active\": true,\n      \"fileStoreId\": \"\",\n      \"rateType\": \"Quotation\",\n      \"priceListDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\",\n            \"conversionFactor\": 1\n          },\n          \"ratePerUnit\": \"12\",\n          \"quantity\": \"11\"\n        }\n      ],\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1512988123880,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/pricelists/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"pricelists",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Opening Balance",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"var mrnNumber = responseBody.materialReceipt[0].mrnNumber;",
											"pm.environment.set(\"mrnNumber\",mrnNumber);",
											"",
											"postman.setNextRequest(\"Search Opening Balance\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"materialReceipt\": [\n    {\n      \"receivingStore\": {\n        \"code\": \"{{randStoreCode}}\"\n      },\n      \"financialYear\": \"2017-18\",\n      \"receiptDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\",\n            \"description\": \"\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\"\n          },\n          \"userReceivedQty\": \"10\",\n          \"unitRate\": \"5\",\n          \"remarks\": \"test\",\n          \"receiptDetailsAddnInfo\": [\n            {\n            \t\"lotNo\":123,\n              \"receivedDate\": \"1510117560000\",\n              \"expiryDate\": \"1544520710000\"\n            }\n          ]\n        }\n      ],\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510549656506,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{  \n         \"id\":1,\n         \"userName\":\"testUser\",\n         \"name\":\"test user\"\n      }\n   \n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/openingbalance/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"openingbalance",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Transfer OutWard",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var today = new Date().getTime();",
											"pm.environment.set(\"today\", today);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"var issueNumberOutward = responseBody.materialIssues[0].issueNumber;",
											"pm.environment.set(\"issueNumberOutward\",issueNumberOutward);",
											"",
											"postman.setNextRequest(\"Search Opening Balance\");",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"12345677\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"rajesh\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":\n    {\n      \"id\":\"1\",\n      \"userName\":\"bimal\",\n      \"tenantId\":\"{{tenantId}}\"\n    }\n\n  },\n  \"materialIssues\":[\n    {\n    \"issueType\":\"MATERIALOUTWARD\",\n    \"materialIssueStatus\":\"CREATED\",\n    \"tenantId\":\"{{tenantId}}\",\n    \"fromStore\":{\n      \"id\":\"1\",\n      \"code\":\"{{randStoreCode}}\",\n      \"name\":\"manyavars\",\n        \"description\":\"test\",\n        \"billingAddress\":\"bangalore\",\n          \"department\":{\n        \"id\":\"1\",\n        \"name\":\"clothes\"\n      },\n      \"deliveryAddress\":\"bangalore\",\n      \"storeInCharge\":{\n        \"code\":\"storeincharge1\"\n      },\n      \"tenantId\":\"{{tenantId}}\"\n    },\n    \"toStore\": {\n      \"id\":\"1\",\n      \"code\":\"{{storeCode}}\",\n      \"name\":\"manyavars\",\n        \"description\":\"test\",\n        \"billingAddress\":\"Bangalore\",\n          \"department\":{\n        \"id\":\"1\",\n        \"name\":\"clothes\"\n      },\n      \"deliveryAddress\":\"jhvjdshjdsjc\",\n      \"storeInCharge\":{\n        \"code\":\"storeincharge1\"\n      },\n      \"tenantId\":\"default\"\n    },\n    \"issueDate\":\"{{today}}\",\n    \"description\":\"this is a defect\",\n    \"designation\":\"issue inspector\",\n    \"indent\":{\n      \"id\":\"1\",\n      \"tenantId\":\"default\",\n      \"issueStore\": null,\n    \"indentStore\": null,\n      \"indentNumber\":\"{{indentNumber}}\",\n      \"indentDate\":\"1512864000000\",\n      \"indentType\":\"Indent\",\n      \"indentPurpose\":\"Consumption\",\n      \"indentCreatedBy\":\"Bimal\",\n      \"designation\":\"assistant manager\",\n      \"indentDetails\":[\n        {\n          \"id\":\"1\",\n          \"uom\":{\n            \"id\":\"1\"\n          },\n          \"indentQuantity\":\"56\",\n          \"material\":{\n            \"id\":\"1\"\n          }\n        }]\n     },\n     \"issuedToEmployee\":null,\n     \"issuedToDesignation\":null,\n     \"supplier\":{\n       \"id\":\"1\",\n       \"tenantId\":\"default\",\n       \"type\":\"OTHERS\",\n       \"code\":\"{{SupplierCode}}\",\n       \"name\":\"ANAND\",\n       \"ifsc\":\"6767676787\",\n       \"contactNo\":\"7878988899\",\n       \"bankCode\":\"bank123\",\n       \"address\":\"jjdshcfjdh\",\n       \"acctNo\":\"9844989489\"\n   \n     },\n     \"materialIssueDetails\":[\n       {\n    \n         \"tenantId\":\"default\",\n         \"material\":{\n           \"id\":\"1\",\n           \"tenantId\":\"default\",\n           \"code\":\"{{materialCode}}\",\n           \"name\":\"pensss\",\n           \"description\":\"stationary pen\",\n           \"reorderLevel\":\"2\",\n           \"materialType\":{\n             \"id\":\"1\",\n             \"name\":\"stationary\"\n           },\n           \"baseUom\":{\n             \"id\":\"1\"\n           },\n           \"minQuantity\":\"5\",\n           \"stockingUom\":{\n             \"id\":\"1\"\n           },\n           \"inventoryType\":\"Asset\",\n         \"materialClass\":\"MediumUsage\",\n           \"maxQuantity\":\"9\",\n           \"reorderQuantity\":\"56\",\n             \"purchaseUom\":{\n             \"id\":\"1\"\n           },\n             \"materialControlType\":\"LOTControl\"\n         \n         },\n         \"orderNumber\":\"5\",\n         \"userQuantityIssued\":5,\n         \"uom\": {\n           \"id\":\"1\",\n           \"code\":\"{{UomCode}}\",\n           \"name\":\"dozens\"\n            },\n         \"voucherHeader\":\"vou123\",\n         \"indentDetail\":{\n           \"id\":\"{{indentDetailsId}}\",\n           \"tenantId\":\"default\",\n           \"indentQuantity\":8,\n           \"uom\": null,\n           \"material\":null,\n         \"description\":\"broken pens\"\n         }\n       }\n       ]\n    }]\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/materialissues-to/_create?tenantId={{tenantId}}&mrnNumber={{mrnNumber}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"materialissues-to",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "mrnNumber",
											"value": "{{mrnNumber}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search Transfer Outward",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"12345677\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"rajesh\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":\n    {\n      \"id\":\"1\",\n      \"userName\":\"mansi\",\n      \"tenantId\":\"default\"\n    }\n\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/materialissues-to/_search?tenantId={{tenantId}}&mrnNumber={{mrnNumber}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"materialissues-to",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "mrnNumber",
											"value": "{{mrnNumber}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Transfer Outword",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"12345677\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"rajesh\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":\n    {\n      \"id\":\"1\",\n      \"userName\":\"Bimal\",\n      \"tenantId\":\"{{tenantId}}\"\n    }\n\n  },\n  \"materialIssues\":[\n    {\n    \"materialIssueStatus\":\"APPROVED\",\n    \"issueType\":\"MATERIALOUTWARD\",\n     \"issueNumber\":\"{{issueNumberOutward}}\",\n    \"tenantId\":\"default\",\n    \"fromStore\":{\n      \"id\":\"1\",\n      \"code\":\"{{randStoreCode}}\",\n      \"name\":\"manyavars\",\n      \"officeLocation\":{\n      \t\"code\":\"loc\"\n      },\n        \"description\":\"njdcfjdjc\",\n        \"billingAddress\":\"djsadjsadxj\",\n          \"department\":{\n        \"id\":\"1\",\n        \"name\":\"clothes\"\n      },\n      \"deliveryAddress\":\"jhvjdshjdsjc\",\n      \"storeInCharge\":{\n        \"code\":\"storeincharge1\"\n      },\n      \"tenantId\":\"default\"\n    },\n    \"toStore\":\"{{storeCode}}\",\n    \"issueDate\":\"{{today}}\",\n    \"description\":\"this is  a defect\",\n    \"designation\":\"issue inspector\",\n    \"indent\":{\n      \"id\":\"1\",\n      \"tenantId\":\"{{tenantId}}\",\n      \"issueStore\":null,\n      \"indentStore\":null,\n      \"indentNumber\":\"{{indentNumber}}\",\n      \"indentDate\":\"1512864000000\",\n      \"indentType\":\"Indent\",\n      \"indentPurpose\":\"Consumption\",\n      \"indentCreatedBy\":\"aastha\",\n      \"designation\":\"assistant\",\n      \"indentDetails\":[\n        {\n          \"id\":\"1\",\n          \"uom\":{\n            \"id\":\"1\"\n          },\n          \n          \"userQuantity\":\"{{userQuantity}}\",\n          \"material\":{\n            \"id\":\"1\"\n          }\n        }]\n     },\n     \"issuedToEmployee\":null,\n     \"issuedToDesignation\":null,\n     \"materialIssueDetails\":[\n       {\n         \"id\":\"92\",\n         \"tenantId\":\"default\",\n         \"material\":{\n           \"id\":\"1\",\n           \"tenantId\":\"default\",\n           \"code\":\"{{materialCode}}\",\n           \"name\":\"pensss\",\n           \"description\":\"stationary pen\",\n           \"reorderLevel\":\"2\",\n           \"materialType\":{\n             \"id\":\"1\",\n             \"name\":\"stationary\"\n           },\n           \"baseUom\":{\n             \"id\":\"1\"\n           },\n           \"minQuantity\":\"5\",\n           \"stockingUom\":{\n             \"id\":\"1\"\n           },\n           \"inventoryType\":\"Asset\",\n         \"materialClass\":\"MediumUsage\",\n           \"maxQuantity\":\"9\",\n           \"reorderQuantity\":\"56\",\n             \"purchaseUom\":{\n             \"id\":\"1\"\n           },\n             \"materialControlType\":\"LOTControl\"\n         \n         },\n         \"orderNumber\":\"5\",\n         \"userQuantityIssued\":10,\n  \n         \"uom\": {\n           \"id\":\"1\",\n           \"code\":\"{{UomCode}}\",\n           \"name\":\"dozens\"\n            },\n         \"voucherHeader\":\"vou12367\",\n         \"indentDetail\":{\n           \"id\":\"1\",\n           \"tenantId\":\"{{tenantId}}\",\n           \"userQuantity\":8,\n           \"uom\": null,\n           \"material\":null\n         \n         },\n         \"description\":\"broken pencils\"\n\n       }\n       ]\n    }]\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/materialissues-to/_update?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"materialissues-to",
										"_update"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Material Issue Non Indent",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
											"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
											"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
											"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
											"    postman.setEnvironmentVariable(\"username\",\"uday\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
											"",
											"postman.setNextRequest(\"MDMS_DATA\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"type": "text",
											"value": "{{username}}"
										},
										{
											"key": "password",
											"type": "text",
											"value": "{{password}}"
										},
										{
											"key": "grant_type",
											"type": "text",
											"value": "password"
										},
										{
											"key": "scope",
											"type": "text",
											"value": "read"
										},
										{
											"key": "tenantId",
											"type": "text",
											"value": "{{tenantId}}"
										}
									]
								},
								"url": {
									"raw": "{{url}}/user/oauth/token",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"oauth",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "MDMS_DATA",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"var resBody = JSON.parse(responseBody);",
											"var max = resBody.MdmsRes.inventory.Material.length - 1;",
											"         var rand = 0;",
											"         var materialCode = null;",
											"         var UomCode = null;",
											"         if(max > -1){",
											"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
											"             materialCode = resBody.MdmsRes.inventory.Material[rand].code;",
											"             pm.environment.set(\"materialCode\",materialCode);",
											"             ",
											"             UomCode = resBody.MdmsRes.inventory.Material[rand].baseUom.code;",
											"             pm.environment.set(\"UomCode\",UomCode);",
											"}",
											"",
											"postman.setNextRequest(\"Create Supplier\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               },\n               {\n               \t \"name\":\"Uom\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{url}}/egov-mdms-service/v1/_search",
									"host": [
										"{{url}}"
									],
									"path": [
										"egov-mdms-service",
										"v1",
										"_search"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Supplier",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var name1 = Math.floor(Math.random() * 10000);",
											"",
											"postman.setEnvironmentVariable(\"SupplierCode\",\"SUPPLIERCODE\"+name1);",
											"",
											"",
											"",
											"",
											"",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"postman.setNextRequest(\"Create Pricelists\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"RequestInfo\": {\n   \"apiId\": \"emp\",\n   \"ver\": \"1.0\",\n   \"ts\": \"12345677\",\n   \"action\": \"create\",\n   \"did\": \"1\",\n   \"key\": \"abcdkey\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"rajesh\",\n   \"authToken\": \"{{access_token}}\"\n\n  \n },\n \"suppliers\":\n[  {\n\"tenantId\":\"{{tenantId}}\",\n \t\"type\":\"INDIVIDUAL\",\n \t\"code\":\"{{SupplierCode}}\",\n \t\"active\":\"true\",\n \t\"name\":\"Anand And Sons\",\n \t\"address\":\"btm layout\",\n \t\"status\":\"ACTIVE\",\n \t\"inActiveDate\":\"15436789\",\n \t\"contactNo\":\"0132278956\",\n \t\"faxNo\":\"123788890\",\n \t\"website\":\"http://www.google.com\",\n \t\"email\":\"anand@gmail.com\",\n \t\"description\":\"supplier for cosmetics\",\n \t\"panNo\":\"DFGPV3459D\",\n \t\"tinNo\":\"34676767uiu\",\n \t\"cstNo\":\"34676767uiC\",\n \t\"vatNo\":\"34676767uiV\",\n \t\"gstNo\":\"75AGHFD7890A0Z0\",\n \t\"contactPerson\":\"anand dubay\",\n \t\"contactPersonNo\":\"8388743488\",\n \t\"bankCode\":\"CITI\",\n   \"bankBranch\":\"bankbranch1\",\n \t\"acctNo\":\"3161001500005068\",\n \t\"ifsc\":\"IFSC38899\",\n \t\"micr\":\"MICR983985\"\n \t}\n\n]\n \n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/suppliers/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"suppliers",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Pricelists",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											" var name1 = Math.floor(Math.random() * 10000);",
											"",
											" postman.setEnvironmentVariable(\"rateContractNumber\",\"rateContractNumber \"+name1);",
											"",
											"function randomPreviousDate(){",
											"   var startDate = new Date(2012,0,1).getTime();",
											"   var endDate =  new Date(2015,0,1).getTime();",
											"   var spaces = (endDate - startDate);",
											"   var timestamp = Math.round(Math.random() * spaces);",
											"   timestamp += startDate;",
											"   return new Date(timestamp);",
											"}",
											"",
											"function randomFutureDate(){",
											"   var startDate = new Date().getTime();",
											"   var endDate =  new Date(2019,0,1).getTime();",
											"   var spaces = (endDate - startDate);",
											"   var timestamp = Math.round(Math.random() * spaces);",
											"   timestamp += startDate;",
											"   return new Date(timestamp);",
											"}",
											"",
											"",
											"var PreviousTime = new randomPreviousDate().getTime();",
											"",
											"var FutureTime = new randomFutureDate().getTime();",
											"",
											"pm.environment.set(\"PreviousTime\",PreviousTime);",
											"pm.environment.set(\"FutureTime\",FutureTime);",
											"",
											"",
											"",
											"",
											"",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"// var requestBody = JSON.parse(request.data);",
											"",
											"// var ResSupplierCode = responseBody.priceLists[0].supplier.code;",
											"// pm.environment.set(\"ResSupplierCode\",ResSupplierCode);",
											"",
											"var unitPrice=responseBody.priceLists[0].priceListDetails[0].ratePerUnit;",
											"pm.environment.set(\"unitPrice\",unitPrice);",
											"",
											"var PriceListId= responseBody.priceLists[0].id;",
											"pm.environment.set(\"PriceListId\",PriceListId);",
											"",
											"postman.setNextRequest(\"Create Store\");",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"priceLists\": [\n    {\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"rateContractNumber\": \"{{rateContractNumber}}\",\n      \"rateContractDate\": 1489224710000,\n      \"agreementNumber\": \"DEC11AN1\",\n      \"agreementDate\": 1491903110000,\n      \"agreementStartDate\": \"{{PreviousTime}}\",\n      \"agreementEndDate\": \"{{FutureTime}}\",\n      \"active\": true,\n      \"fileStoreId\": \"\",\n      \"rateType\": \"Quotation\",\n      \"priceListDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\",\n            \"conversionFactor\": 1\n          },\n          \"ratePerUnit\": \"12\",\n          \"quantity\": \"11\"\n        }\n      ],\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1512988123880,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/pricelists/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"pricelists",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								},
								"description": "create pricelist"
							},
							"response": []
						},
						{
							"name": "Create Store",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var name1 = Math.floor(Math.random() * 10000);",
											"",
											"postman.setEnvironmentVariable(\"storeCode\",\"STORECODE\"+name1);",
											"",
											"",
											"var name2 = Math.random().toString(26).replace(/[^a-z]+/g, '').substr(0, 5);",
											"",
											"postman.setEnvironmentVariable(\"storeName\",\"Store Name \"+name2);",
											"",
											"",
											"",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"postman.setNextRequest(\"Create Purchase Order Generation\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"stores\": [\n    {\n      \"code\": \"{{storeCode}}\",\n      \"name\": \"{{storeName}}\",\n      \"department\": {\n        \"code\": \"ADM\"\n      },\n      \"description\": \"test\",\n      \"officeLocation\": {\n        \"code\": \"LOC1\"\n      },\n      \"isCentralStore\": true,\n      \"billingAddress\": \"mumbai\",\n      \"deliveryAddress\": \"mumbai\",\n      \"storeInCharge\": {\n        \"code\": \"658039\"\n      },\n      \"contactNo1\": \"\",\n      \"email\": \"\",\n      \"active\": true,\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510742992622,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n      \"id\":1,\n      \"tenantId\":\"default\",\n      \"userName\":\"ramesh\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/stores/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"stores",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Non indent PO",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var today = new Date().getTime();",
											"pm.environment.set(\"today\", today);",
											"",
											"// var orderQuantity = pm.environment.get(\"nonIndentQuantity\");",
											"// var rQ = (orderQuantity) - 1;",
											"// pm.environment.set(\"receivedQuantity\", rQ);",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody=JSON.parse(responseBody);",
											"// var requestBody=JSON.parse(request.data);",
											"",
											"var poDetailsId=responseBody.purchaseOrders[0].purchaseOrderDetails[0].id;",
											"pm.environment.set(\"poDetailsId\",poDetailsId);",
											"",
											"var userQuantity=responseBody.purchaseOrders[0].purchaseOrderDetails[0].userQuantity;",
											"pm.environment.set(\"userQuantity\",userQuantity);",
											"",
											"",
											"",
											"postman.setNextRequest(\"Create Material Receipt Note\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1513930422037,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \"purchaseOrders\": [\n    {\n      \"store\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"purchaseType\": \"Non Indent\",\n      \"tenantId\": \"{{tenantId}}\",\n      \"purchaseOrderDate\": \"{{today}}\",\n      \"rateType\": \"Quotation\",\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"purchaseOrderDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"material\": {\n            \"tenantId\": \"{{tenantId}}\",\n            \"code\": \"{{materialCode}}\",\n            \"name\": \"SEAL\",\n            \"description\": \"Seal\",\n            \"materialType\": {\n              \"code\": \"MAT1\"\n            },\n            \"baseUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"purchaseUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"expenseAccount\": {\n              \"glCode\": \"44001\"\n            },\n            \"minQuantity\": 2,\n            \"maxQuantity\": 20,\n            \"stockingUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"reorderLevel\": 10,\n            \"reorderQuantity\": 12,\n            \"lotControl\": false,\n            \"shelfLifeControl\": false,\n            \"serialNumber\": false\n          },\n          \"uom\": {\n            \"id\": \"1\",\n            \"tenantId\": \"default\",\n            \"code\": \"{{UomCode}}\",\n            \"description\": \"Numbers\",\n            \"baseUom\": true,\n            \"uomCategory\": \"QUANTITY\",\n            \"fromDate\": 1508740856,\n            \"toDate\": 1893436200,\n            \"conversionFactor\": 1\n          },\n          \"priceList\": {\n            \"id\": \"{{PriceListId}}\",\n            \"tenantId\": \"{{tenantId}}\",\n            \"supplier\": {\n              \"id\": \"100\",\n              \"tenantId\": \"default\",\n              \"type\": \"INDIVIDUAL\",\n              \"code\": \"{{SupplierCode}}\",\n              \"name\": \"Anand And Sons\",\n              \"address\": \"btm layout\",\n              \"status\": \"ACTIVE\",\n              \"inActiveDate\": 15436789,\n              \"active\": true,\n              \"contactNo\": \"0132278956\",\n              \"faxNo\": \"123788890\",\n              \"website\": \"http://www.google.com\",\n              \"email\": \"anand@gmail.com\",\n              \"description\": \"supplier for cosmetics\",\n              \"panNo\": \"DFGPV3459D\",\n              \"tinNo\": \"34676767uiu\",\n              \"cstNo\": \"34676767uiC\",\n              \"vatNo\": \"34676767uiV\",\n              \"gstNo\": \"75AGHFD7890A0Z0\",\n              \"contactPerson\": \"anand dubay\",\n              \"contactPersonNo\": \"8388743488\",\n              \"bankCode\": \"SBI\",\n              \"bankBranch\": \"bankbranch1\",\n              \"acctNo\": \"3161001500005068\",\n              \"ifsc\": \"IFSC38899\",\n              \"micr\": \"MICR983985\",\n              \"auditDetails\": {\n                \"createdBy\": \"22534\",\n                \"lastModifiedBy\": \"22534\",\n                \"createdTime\": 12345677,\n                \"lastModifiedTime\": 12345677\n              }\n            },\n            \"rateType\": \"Quotation\",\n            \"rateContractNumber\": \"{{rateContractNumber}}\",\n            \"rateContractDate\": 1489224710000,\n            \"agreementNumber\": \"DEC11AN1\",\n            \"agreementDate\": 1491903110000,\n            \"agreementStartDate\": 1328367398850,\n            \"agreementEndDate\": 1527771650467,\n            \"active\": true,\n            \"fileStoreId\": \"\",\n            \"priceListDetails\": [\n              {\n                \"id\": \"201\",\n                \"material\": {\n                  \"code\": \"MAT1\"\n                },\n                \"fromDate\": 1328367398850,\n                \"toDate\": 1527771650467,\n                \"ratePerUnit\": 12,\n                \"quantity\": 11,\n                \"uom\": {\n                  \"id\": \"1\",\n                  \"tenantId\": \"default\",\n                  \"code\": \"{{UomCode}}\",\n                  \"description\": \"Numbers\",\n                  \"baseUom\": true,\n                  \"uomCategory\": \"QUANTITY\",\n                  \"fromDate\": 1508740856,\n                  \"toDate\": 1893436200,\n                  \"conversionFactor\": 1\n                },\n                \"active\": true,\n                \"auditDetails\": {\n                  \"createdBy\": \"22534\",\n                  \"lastModifiedBy\": \"22534\",\n                  \"createdTime\": 1512988123880,\n                  \"lastModifiedTime\": 1512988123880\n                }\n              }\n            ],\n            \"auditDetails\": {\n              \"createdBy\": \"22534\",\n              \"lastModifiedBy\": \"22534\",\n              \"createdTime\": 1512988123880,\n              \"lastModifiedTime\": 1512988123880\n            }\n          },\n          \"unitPrice\": 12,\n          \"userQuantity\": 61,\n          \"orderQuantity\": 0,\n          \"tenderQuantity\" : 0, \n          \"receivedQuantity\": 60000000,\n          \"usedQuantity\": 0\n        }\n      ]\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/purchaseorders/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"purchaseorders",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Material Receipt Note",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var userReceivedQty = pm.environment.get(\"userQuantity\");",
											"var rQ = (userReceivedQty) - 1;",
											"pm.environment.set(\"userReceivedQty\", rQ);",
											"",
											"",
											"var userAcceptedQty = pm.environment.get(\"userReceivedQty\");",
											"var rQ = (userAcceptedQty) - 1;",
											"pm.environment.set(\"userAcceptedQty\", rQ);",
											"",
											"var userQuantity = pm.environment.get(\"userAcceptedQty\");",
											"var rQ = (userQuantity)/2;",
											"pm.environment.set(\"userQuantity1\", rQ);",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"",
											"var materialReceiptMRN = responseBody.MaterialReceipt[0].mrnNumber;",
											"pm.environment.set(\"materialReceiptMRN\",materialReceiptMRN);",
											"",
											"postman.setNextRequest(\"Create Material Issue\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510290513893,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\": {\n      \"id\": 73\n    }\n  },\n  \"materialReceipt\": [\n    {\n      \"receivingStore\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"receiptDate\": \"{{today}}\",\n      \"receiptType\": \"PURCHASE RECEIPT\",\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"supplierBillNo\": \"AB-PO-2017\",\n      \"supplierBillDate\": 1512365762000,\n      \"challanNo\": \"CD-LK-2017\",\n      \"challanDate\": 1512365762000,\n      \"description\": \"description for receipt\",\n      \"paymentTerms\": \"paymentTerms for receipt\",\n      \"receivedBy\": \"Bimal\",\n      \"designation\": \"ASST-ENG\",\n      \"inspectedBy\": \"ramesh\",\n      \"inspectionDate\": 45698756,\n      \"inspectionRemarks\": \"inspection remarks for receipt\",\n      \"receiptDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\"\n          },\n          \"userReceivedQty\": \"{{userReceivedQty}}\",\n          \"userAcceptedQty\": \"{{userAcceptedQty}}\",\n          \"unitRate\": 5,\n          \"isScrapItem\":\"true\",\n          \"rejectionRemark\": \"rejection remark for receipt detail\",\n          \"purchaseOrderDetail\": {\n            \"id\": \"{{poDetailsId}}\"\n          },\n         \"receiptDetailsAddnInfo\": [\n            {\n              \"userQuantity\": \"{{userQuantity1}}\",\n              \"manufactureDate\": 12345698,\n              \"lotNo\":\"LOT-01\",\n              \"serialNo\": \"SR-02\",\n              \"expiryDate\": 1544509979000,\n              \"batchNo\": \"BA-NO-2017\"\n            },\n            \n            {\n              \"userQuantity\":\"{{userQuantity1}}\",\n              \"manufactureDate\": 12345698,\n              \"lotNo\":\"LOT-02\",\n              \"serialNo\": \"SR-02\",\n              \"expiryDate\": 1544509979000,\n              \"batchNo\": \"BA-NO-2017\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/receiptnotes/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"receiptnotes",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								},
								"description": "Create Material Receipt Note"
							},
							"response": []
						},
						{
							"name": "Non Indent Material Issue ",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"12345677\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"rajesh\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":\n    {\n      \"id\":\"1\",\n      \"userName\":\"bimal\",\n      \"tenantId\":\"{{tenantId}}\"\n    }\n\n  },\n  \"materialIssues\":[\n    {\n    \"tenantId\":\"{{tenantId}}\",\n    \"issuePurpose\":\"WRITEOFFORSCRAP\",\n    \"fromStore\":{\n      \"id\":\"1\",\n      \"code\":\"{{storeCode}}\",\n      \"name\":\"manyavars\",\n      \"officeLocation\":{\n      \t\"code\":\"bchb\"\n      },\n        \"description\":\"njdcfjdjc\",\n        \"billingAddress\":\"djsadjsadxj\",\n          \"department\":{\n        \"id\":\"1\",\n        \"name\":\"clothes\"\n      },\n      \"deliveryAddress\":\"jhvjdshjdsjc\",\n      \"storeInCharge\":{\n        \"code\":\"storeincharge1\"\n      },\n      \"tenantId\":\"{{tenantId}}\"\n    },\n    \"toStore\":  null,\n    \"issueDate\":\"{{today}}\",\n    \"description\":\"this is a not defect\",\n    \"designation\":\"issue inspector\",\n    \"indent\":null,\n     \"issuedToEmployee\":\"shipra\",\n     \"issuedToDesignation\":\"assistant\",\n     \"supplier\":{\n       \"id\":\"1\",\n       \"tenantId\":\"default\",\n       \"type\":\"OTHERS\",\n       \"code\":\"{{SupplierCode}}\",\n       \"name\":\"ANAND\",\n       \"ifsc\":\"6767676787\",\n       \"contactNo\":\"7878988899\",\n       \"bankCode\":\"CITI\",\n       \"address\":\"jjdshcfjdh\",\n       \"acctNo\":\"9844989489\"\n   \n     },\n     \"materialIssueDetails\":[\n       {\n     \n         \"tenantId\":\"default\",\n         \"material\":{\n           \"id\":\"1\",\n           \"tenantId\":\"default\",\n           \"code\":\"{{materialCode}}\",\n           \"name\":\"penssss\",\n           \"scrapable\":false,\n           \"description\":\"stationary pen\",\n           \"reorderLevel\":\"2\",\n           \"materialType\":{\n             \"id\":\"1\",\n             \"name\":\"stationary\"\n           },\n           \"baseUom\":{\n             \"id\":\"1\"\n           },\n           \"minQuantity\":\"5\",\n           \"stockingUom\":{\n             \"id\":\"1\"\n           },\n           \"inventoryType\":\"Asset\",\n           \"materialClass\":\"MediumUsage\",\n           \"maxQuantity\":\"9\",\n           \"reorderQuantity\":\"56\",\n             \"purchaseUom\":{\n             \"id\":\"1\"\n           },\n             \"materialControlType\":\"LOTControl\"\n         \n         },\n         \"orderNumber\":\"5\",\n         \"userQuantityIssued\":\"3\",\n         \"uom\": {\n           \"id\":\"1\",\n           \"code\":\"{{UomCode}}\",\n           \"name\":\"dozens\"\n            },\n         \"voucherHeader\":\"vou123\",\n         \"indentDetail\":null,\n         \"description\":\"broken pens\"\n      \n       }\n       ]\n    }]\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/materialissues-ni/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"materialissues-ni",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Supplier Bill",
					"item": [
						{
							"name": "Functional",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"MDMS_DATA\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "MDMS_DATA",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var resBody = JSON.parse(responseBody);",
													"var max = resBody.MdmsRes.inventory.Material.length - 1;",
													"         var rand = 0;",
													"         var materialCode = null;",
													"         var UomCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"             materialCode = resBody.MdmsRes.inventory.Material[rand].code;",
													"             pm.environment.set(\"materialCode\",materialCode);",
													"             ",
													"             UomCode = resBody.MdmsRes.inventory.Material[rand].baseUom.code;",
													"             pm.environment.set(\"UomCode\",UomCode);",
													"}",
													"",
													"postman.setNextRequest(\"Create Indents\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               },\n               {\n               \t \"name\":\"Uom\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
										},
										"url": {
											"raw": "{{url}}/egov-mdms-service/v1/_search",
											"host": [
												"{{url}}"
											],
											"path": [
												"egov-mdms-service",
												"v1",
												"_search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Indents",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"var requestBody = JSON.parse(request.data);",
													"",
													"var indentNumber=responseBody.indents[0].indentNumber;",
													"pm.environment.set(\"indentNumber\",indentNumber);",
													"",
													"var userQuantity=requestBody.indents[0].indentDetails[0].userQuantity;",
													"pm.environment.set(\"userQuantity\",userQuantity);",
													"",
													"postman.setNextRequest(\"Create Supplier\");",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"indents\": [\n    {\n      \"issueStore\": {\n        \"code\": \"MED001\"\n      },\n      \"indentDate\": 1512412200000,\n      \"indentNumber\": \"\",\n      \"indentType\": \"Indent\",\n      \"expectedDeliveryDate\": 1512412200000,\n      \"narration\": \"fgfd\",\n      \"materialHandOverTo\": \"fdgdf\",\n      \"designation\": \"\",\n      \"indentDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\"\n          },\n          \"userQuantity\": \"8\",\n          \"asset\": {\n            \"code\": \"2\"\n          }\n        }\n      ],\n      \"indentPurpose\": \"Consumption\",\n      \"inventoryType\": \"Asset\",\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511527847642,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/indents/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"indents",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Supplier",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"",
													"postman.setEnvironmentVariable(\"SupplierCode\",\"SUPPLIERCODE\"+name1);",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"postman.setNextRequest(\"Create Pricelists\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \"RequestInfo\": {\n   \"apiId\": \"emp\",\n   \"ver\": \"1.0\",\n   \"ts\": \"12345677\",\n   \"action\": \"create\",\n   \"did\": \"1\",\n   \"key\": \"abcdkey\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"rajesh\",\n   \"authToken\": \"{{access_token}}\"\n\n  \n },\n \"suppliers\":\n[  {\n\"tenantId\":\"{{tenantId}}\",\n \t\"type\":\"INDIVIDUAL\",\n \t\"code\":\"{{SupplierCode}}\",\n \t\"active\":\"true\",\n \t\"name\":\"Anand And Sons\",\n \t\"address\":\"btm layout\",\n \t\"status\":\"ACTIVE\",\n \t\"inActiveDate\":\"15436789\",\n \t\"contactNo\":\"0132278956\",\n \t\"faxNo\":\"123788890\",\n \t\"website\":\"http://www.google.com\",\n \t\"email\":\"anand@gmail.com\",\n \t\"description\":\"supplier for cosmetics\",\n \t\"panNo\":\"DFGPV3459D\",\n \t\"tinNo\":\"34676767uiu\",\n \t\"cstNo\":\"34676767uiC\",\n \t\"vatNo\":\"34676767uiV\",\n \t\"gstNo\":\"75AGHFD7890A0Z0\",\n \t\"contactPerson\":\"anand dubay\",\n \t\"contactPersonNo\":\"8388743488\",\n \t\"bankCode\":\"CITI\",\n   \"bankBranch\":\"bankbranch1\",\n \t\"acctNo\":\"3161001500005068\",\n \t\"ifsc\":\"IFSC38899\",\n \t\"micr\":\"MICR983985\"\n \t}\n\n]\n \n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/suppliers/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"suppliers",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Pricelists",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"postman.setEnvironmentVariable(\"rateContractNumber\",\"rateContractNumber \"+name1);",
													"",
													"var name2 = Math.floor(Math.random() * 10000);",
													"postman.setEnvironmentVariable(\"agreementNumber\",\"agreementNumber \"+name2);",
													"",
													"function randomPreviousDate(){",
													"   var startDate = new Date(2012,0,1).getTime();",
													"   var endDate =  new Date(2015,0,1).getTime();",
													"   var spaces = (endDate - startDate);",
													"   var timestamp = Math.round(Math.random() * spaces);",
													"   timestamp += startDate;",
													"   return new Date(timestamp);",
													"}",
													"",
													"function randomFutureDate(){",
													"   var startDate = new Date().getTime();",
													"   var endDate =  new Date(2019,0,1).getTime();",
													"   var spaces = (endDate - startDate);",
													"   var timestamp = Math.round(Math.random() * spaces);",
													"   timestamp += startDate;",
													"   return new Date(timestamp);",
													"}",
													"",
													"var PreviousTime = new randomPreviousDate().getTime();",
													"var FutureTime = new randomFutureDate().getTime();",
													"",
													"pm.environment.set(\"PreviousTime\",PreviousTime);",
													"pm.environment.set(\"FutureTime\",FutureTime);",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"var requestBody = JSON.parse(request.data);",
													"",
													"var unitPrice=requestBody.priceLists[0].priceListDetails[0].ratePerUnit;",
													"pm.environment.set(\"unitPrice\",unitPrice);",
													"",
													"var responsePriceList=responseBody.priceLists[0];",
													"pm.environment.set(\"responsePriceList\",JSON.stringify(responsePriceList));",
													"",
													"postman.setNextRequest(\"Create Store\");",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"priceLists\": [\n    {\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"rateContractNumber\": \"{{rateContractNumber}}\",\n      \"rateContractDate\": 1489224710000,\n      \"agreementNumber\": \"{{agreementNumber}}\",\n      \"agreementDate\": 1491903110000,\n      \"agreementStartDate\": \"{{PreviousTime}}\",\n      \"agreementEndDate\": \"{{FutureTime}}\",\n      \"active\": true,\n      \"fileStoreId\": \"\",\n      \"rateType\": \"Quotation\",\n      \"priceListDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\",\n            \"conversionFactor\": 1\n          },\n          \"ratePerUnit\": \"12\",\n          \"quantity\": \"11\"\n        }\n      ],\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1512988123880,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/pricelists/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"pricelists",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": "create pricelist"
									},
									"response": []
								},
								{
									"name": "Create Store",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"postman.setEnvironmentVariable(\"storeCode\",\"STORECODE\"+name1);",
													"",
													"var name2 = Math.random().toString(26).replace(/[^a-z]+/g, '').substr(0, 5);",
													"postman.setEnvironmentVariable(\"storeName\",\"Store Name \"+name2);",
													"",
													"",
													"",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"postman.setNextRequest(\"Create Purchase Order Generation\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"stores\": [\n    {\n      \"code\": \"{{storeCode}}\",\n      \"name\": \"{{storeName}}\",\n      \"department\": {\n        \"code\": \"ADM\"\n      },\n      \"description\": \"test\",\n      \"officeLocation\": {\n        \"code\": \"LOC1\"\n      },\n      \"isCentralStore\": true,\n      \"billingAddress\": \"mumbai\",\n      \"deliveryAddress\": \"mumbai\",\n      \"storeInCharge\": {\n        \"code\": \"658039\"\n      },\n      \"contactNo1\": \"\",\n      \"email\": \"\",\n      \"active\": true,\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510742992622,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n      \"id\":1,\n      \"tenantId\":\"default\",\n      \"userName\":\"ramesh\"\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/stores/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"stores",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Purchase Order Generation",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"// console.log(JSON.stringify(responseBody));",
													"",
													"var ResPurchaseIndentDetails= responseBody.purchaseOrders[0].purchaseOrderDetails[0].purchaseIndentDetails[0];",
													"pm.environment.set(\"ResPurchaseIndentDetails\",JSON.stringify(ResPurchaseIndentDetails));",
													"",
													"postman.setNextRequest(\"Create Purchase Order\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"purchaseOrders\": [\n    {\n      \"indentNumbers\": [\n        \"{{indentNumber}}\"\n      ],\n      \"purchaseType\":\"Indent\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1513579003518,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/purchaseorders/_preparepofromindents?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"purchaseorders",
												"_preparepofromindents"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Purchase Order",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var today = new Date().getTime();",
													"pm.environment.set(\"today\", today);"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var PurchaseOrderNumber=responseBody.purchaseOrders[0].purchaseOrderNumber;",
													"pm.environment.set(\"PurchaseOrderNumber\",PurchaseOrderNumber);",
													"",
													"var PODetailsID=responseBody.purchaseOrders[0].purchaseOrderDetails[0].id;",
													"pm.environment.set(\"PODetailsID\",PODetailsID);",
													"",
													"postman.setNextRequest(\"Create Material Receipt Note\");",
													"",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1513930422037,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \"purchaseOrders\": [\n    {\n      \"store\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"purchaseType\": \"Indent\",\n      \"tenantId\": \"{{tenantId}}\",\n      \"purchaseOrderDate\": \"{{today}}\",\n      \"rateType\": \"Quotation\",\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"purchaseOrderDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"material\": {\n            \"tenantId\": \"{{tenantId}}\",\n            \"code\": \"{{materialCode}}\",\n            \"name\": \"SEAL\",\n            \"description\": \"Seal\",\n            \"materialType\": {\n              \"code\": \"MAT1\"\n            },\n            \"baseUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"purchaseUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"expenseAccount\": {\n              \"glCode\": \"44001\"\n            },\n            \"minQuantity\": 2,\n            \"maxQuantity\": 20,\n            \"stockingUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"reorderLevel\": 10,\n            \"reorderQuantity\": 12,\n            \"lotControl\": false,\n            \"shelfLifeControl\": false,\n            \"serialNumber\": false\n          },\n          \"uom\": {\n            \"id\": \"1\",\n            \"tenantId\": \"default\",\n            \"code\": \"{{UomCode}}\",\n            \"description\": \"Numbers\",\n            \"baseUom\": true,\n            \"uomCategory\": \"QUANTITY\",\n            \"fromDate\": 1508740856,\n            \"toDate\": 1893436200,\n            \"conversionFactor\": 1\n          },\n          \"priceList\" : {{responsePriceList}},\n          \"unitPrice\": 12,\n          \"indentNumber\": \"{{indentNumber}}\",\n          \"userQuantity\": \"{{userQuantity}}\",\n          \"orderQuantity\": \"{{userQuantity}}\",\n          \"tenderQuantity\": 0,\n          \"receivedQuantity\": 0,\n          \"usedQuantity\": 0,\n          \"purchaseIndentDetails\": [\n            {\n              \"tenantId\": \"default\",\n              \"indentDetail\": {\n                \"id\": \"158\",\n                \"tenantId\": \"default\",\n                \"material\": {\n                  \"tenantId\": \"default\",\n                  \"code\": \"{{materialCode}}\",\n                  \"name\": \"SEAL\",\n                  \"description\": \"Seal\",\n                  \"materialType\": {\n                    \"code\": \"MT1\"\n                  },\n                  \"baseUom\": {\n                    \"id\": \"1\",\n                    \"tenantId\": \"default\",\n                    \"code\": \"NOS\",\n                    \"description\": \"Numbers\",\n                    \"baseUom\": true,\n                    \"uomCategory\": \"QUANTITY\",\n                    \"fromDate\": 1508740856,\n                    \"toDate\": 1893436200,\n                    \"conversionFactor\": 1\n                  },\n                  \"purchaseUom\": {\n                    \"id\": \"1\",\n                    \"tenantId\": \"default\",\n                    \"code\": \"NOS\",\n                    \"description\": \"Numbers\",\n                    \"baseUom\": true,\n                    \"uomCategory\": \"QUANTITY\",\n                    \"fromDate\": 1508740856,\n                    \"toDate\": 1893436200,\n                    \"conversionFactor\": 1\n                  },\n                  \"expenseAccount\": {\n                    \"glCode\": \"44001\"\n                  },\n                  \"minQuantity\": 2,\n                  \"maxQuantity\": 20,\n                  \"stockingUom\": {\n                    \"id\": \"1\",\n                    \"tenantId\": \"default\",\n                    \"code\": \"NOS\",\n                    \"description\": \"Numbers\",\n                    \"baseUom\": true,\n                    \"uomCategory\": \"QUANTITY\",\n                    \"fromDate\": 1508740856,\n                    \"toDate\": 1893436200,\n                    \"conversionFactor\": 1\n                  },\n                  \"reorderLevel\": 10,\n                  \"reorderQuantity\": 12,\n                  \"lotControl\": false,\n                  \"shelfLifeControl\": false,\n                  \"serialNumber\": false\n                },\n                \"uom\": {\n                  \"code\": \"NOS\",\n                  \"baseUom\": false\n                },\n                \"projectCode\": {\n                  \n                },\n                \"asset\": {\n                  \"code\": \"2\"\n                },\n                \"indentQuantity\": 3,\n                \"totalProcessedQuantity\": 0,\n                \"indentIssuedQuantity\": 0,\n                \"poOrderedQuantity\": 0,\n                \"interstoreRequestQuantity\": 0\n              },\n              \"quantity\": 3,\n              \"auditDetails\": {\n                \"createdBy\": \"22534\",\n                \"lastModifiedBy\": \"22534\",\n                \"createdTime\": 1514354899171,\n                \"lastModifiedTime\": 1514354899171\n              }\n            }\n          ]\n        }\n      ],\n      \"indentNumbers\": [\n        \"{{indentNumber}}\"\n      ]\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/purchaseorders/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"purchaseorders",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Material Receipt Note",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c7fa24eb-70d0-4ca6-9c77-11562ac11b09",
												"type": "text/javascript",
												"exec": [
													"var userReceivedQty = pm.environment.get(\"userQuantity\");",
													"var rQ = (userReceivedQty) - 1;",
													"pm.environment.set(\"userReceivedQty\", rQ);",
													"",
													"",
													"var userAcceptedQty = pm.environment.get(\"userQuantity\");",
													"var rQ = (userAcceptedQty) - 2;",
													"pm.environment.set(\"userAcceptedQty\", rQ);"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "22382fc7-5ac9-4620-8510-9de5468940e4",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var materialReceiptMRN = responseBody.MaterialReceipt[0].mrnNumber;",
													"pm.environment.set(\"materialReceiptMRN\",materialReceiptMRN);",
													"",
													"postman.setNextRequest(\"Search Material Receipt Note\");",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510290513893,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\": {\n      \"id\": 73\n    }\n  },\n  \"materialReceipt\": [\n    {\n      \"receivingStore\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"receiptDate\": \"{{today}}\",\n      \"receiptType\": \"PURCHASE RECEIPT\",\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"supplierBillNo\": \"AB-PO-2017\",\n      \"supplierBillDate\": 1512365762000,\n      \"challanNo\": \"CD-LK-2017\",\n      \"challanDate\": 1512365762000,\n      \"description\": \"description for receipt\",\n      \"paymentTerms\": \"paymentTerms for receipt\",\n      \"receivedBy\": \"Bimal\",\n      \"designation\": \"ASST-ENG\",\n      \"inspectedBy\": \"ramesh\",\n      \"inspectionDate\": 45698756,\n      \"inspectionRemarks\": \"inspection remarks for receipt\",\n      \"receiptDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\"\n          },\n          \"userReceivedQty\": \"{{userReceivedQty}}\",\n          \"userAcceptedQty\": \"{{userAcceptedQty}}\",\n          \"unitRate\": 5,\n          \"isScrapItem\":\"true\",\n          \"rejectionRemark\": \"rejection remark for receipt detail\",\n          \"purchaseOrderDetail\": {\n            \"id\": \"{{PODetailsID}}\"\n          },\n         \"receiptDetailsAddnInfo\": [\n            {\n              \"userQuantity\": \"{{userAcceptedQty}}\",\n              \"manufactureDate\": 12345698,\n              \"lotNo\":\"LOT-01\",\n              \"serialNo\": \"SR-02\",\n              \"expiryDate\": 1544509979000,\n              \"batchNo\": \"BA-NO-2017\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/receiptnotes/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"receiptnotes",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Material Receipt Note",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"12345677\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"rajesh\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n    \t\"id\":1,\n    \t\"tenantId\":\"default\",\n    \t\"username\":\"abc\"\n    }\n  }\n}\n"
										},
										"url": {
											"raw": "{{url}}/inventory-services/receiptnotes/_search?tenantId={{tenantId}}&mrnNumber={{materialReceiptMRN}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"receiptnotes",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "mrnNumber",
													"value": "{{materialReceiptMRN}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Supplier Bill",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d660e7e2-0458-4cf2-b851-e2091f6bf1a1",
												"type": "text/javascript",
												"exec": [
													"// var responseBody=JSON.parse(responseBody);",
													"",
													"",
													"// pm.environment.set(\"supplierBillId\",responseBody.supplierBills[0].id);",
													"",
													"",
													"// pm.environment.set(\"supplierBillReceiptId\", responseBody.supplierBills[0].supplierBillReceipts[0].id);",
													"",
													"",
													"// pm.environment.set(\"supplierBillAdvanceAdjustmentId\", responseBody.supplierBills[0].supplierBillAdvanceAdjustments[0].id);",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510742992622,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\": {\n      \"id\": 1,\n      \"tenantId\": \"{{tenantId}}\",\n      \"userName\": \"ramesh\"\n    }\n  },\n  \"supplierBills\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"store\": {\n      \t\"code\": \"{{storeCode}}\"\n      },\n      \"billType\":\"ExpenseBill\",\n      \"billDate\":\"{{today}}\",\n      \"billDetails\":[\n      \t{\n      \t\"chartOfAccount\":{\n      \t\t\"glcode\": \"4803000\",\n      \t\t\"tenantId\":\"{{tenantId}}\"\n      \t},\n      \t\"debitAmount\":0,\n      \t\"creditAmount\":\"8\",\n      \t\"tenantId\":\"{{tenantId}}\"\n    \t }\n      \t],\n      \"invoiceNumber\": \"INV\",\n      \"invoiceDate\": 1514874110,\n      \"approvedDate\": 1514874110,\n      \"approvedBy\": {\n        \"id\": 1\n      },\n      \"cancellationReason\": \"cancellationReason\",\n      \"cancellationRemarks\": \"cancellationRemarks\",\n      \"supplierBillReceipts\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"materialReceipt\": {\n            \"id\": \"11\",\n            \"mrnNumber\":\"{{materialReceiptMRN}}\"\n          }\n        }\n      ],\n      \"supplierBillAdvanceAdjustments\": [\n        {\n          \"advanceAdjustedAmount\":1000,\n           \"supplierAdvanceRequisition\": {\n            \"tenantId\": \"{{tenantId}}\",\n            \"supplier\": {\n              \"code\": \"{{SupplierCode}}\",\n              \"tenantId\":\"{{tenantId}}\"\n            },\n            \"purchaseOrder\": {\n              \"purchaseOrderNumber\":\"{{PurchaseOrderNumber}}\",\n              \"tenantId\":\"{{tenantId}}\"\n            },\n            \"advanceAdjustedAmount\": 1000,\n            \"advanceFullyAdjustedInBill\": false,\n            \"sarStatus\": \"APPROVED\",\n            \"stateId\": 1\n          }\n        }\n      ],\n      \n      \"billId\": 1,\n      \"supplierBillStatus\": \"APPROVED\",\n      \"stateId\": 1\n      }\n  ]\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/supplierbills/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"supplierbills",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Update Supplier Bill",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510742992622,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"971e5a47-5260-498c-be7c-ccb6c165dda0\",\n    \"userInfo\": {\n      \"id\": 1,\n      \"tenantId\": \"default\",\n      \"userName\": \"ramesh\"\n    }\n  },\n  \"supplierBills\": [\n    {\n     \"id\":\"{{supplierBillId}}\",\n      \"tenantId\": \"default\",\n      \"store\": {\n      \t\"code\": \"STR01\"\n      },\n      \"invoiceNumber\": \"INV-02-2018\",\n      \"invoiceDate\": 1514874120,\n      \"approvedDate\": 1514874120,\n      \"approvedBy\": {\n        \"id\": 2\n      },\n      \"cancellationReason\": \"cancellationReasonupdate\",\n      \"cancellationRemarks\": \"cancellationRemarksupdate\",\n      \"supplierBillReceipts\": [\n        {\n        \t\"id\":\"{{supplierBillReceiptId}}\",\n          \"tenantId\": \"default\",\n          \"supplierBill\": \"{{supplierBillId}}\",\n          \"materialReceipt\": {\n            \"id\": \"11\",\n            \"mrnNumber\":\"MRN/defa/2017-18/00007\"\n          }\n        }\n      ],\n      \"supplierBillAdvanceAdjustments\": [\n        {\n        \t\"id\":\"{{supplierBillAdvanceAdjustmentId}}\",\n          \"tenantId\": \"default\",\n          \"supplierBill\": \"{{supplierBillId}}\",\n          \"advanceAdjustedAmount\":1001\n        }\n      ],\n      \"billId\": 2,\n      \"supplierBillStatus\": \"CANCELLED\",\n      \"stateId\": 2\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{host}}/inventory-services/supplierbills/_update?tenantId=default",
											"host": [
												"{{host}}"
											],
											"path": [
												"inventory-services",
												"supplierbills",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "default",
													"equals": true
												}
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Search Supplier Bill",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510400603623,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{authToken}}\",\n    \"userInfo\":{  \n         \"id\":1\n      }\n  }\n}"
										},
										"url": {
											"raw": "{{host}}/inventory-services/supplierbills/_search?tenantId=default&ids={{supplierBillId}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"inventory-services",
												"supplierbills",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "default",
													"equals": true
												},
												{
													"key": "ids",
													"value": "{{supplierBillId}}",
													"equals": true
												}
											]
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Format",
							"item": [],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "AdvRequisition",
					"item": [
						{
							"name": "Functional",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"MDMS_DATA\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "MDMS_DATA",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var resBody = JSON.parse(responseBody);",
													"var max = resBody.MdmsRes.inventory.Material.length - 1;",
													"         var rand = 0;",
													"         var materialCode = null;",
													"         var UomCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"             materialCode = resBody.MdmsRes.inventory.Material[rand].code;",
													"             pm.environment.set(\"materialCode\",materialCode);",
													"             ",
													"             UomCode = resBody.MdmsRes.inventory.Material[rand].baseUom.code;",
													"             pm.environment.set(\"UomCode\",UomCode);",
													"}",
													"",
													"postman.setNextRequest(\"Create Indents\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               },\n               {\n               \t \"name\":\"Uom\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
										},
										"url": {
											"raw": "{{url}}/egov-mdms-service/v1/_search",
											"host": [
												"{{url}}"
											],
											"path": [
												"egov-mdms-service",
												"v1",
												"_search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Indents",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"var requestBody = JSON.parse(request.data);",
													"",
													"var indentNumber=responseBody.indents[0].indentNumber;",
													"pm.environment.set(\"indentNumber\",indentNumber);",
													"",
													"var userQuantity=requestBody.indents[0].indentDetails[0].userQuantity;",
													"pm.environment.set(\"userQuantity\",userQuantity);",
													"",
													"postman.setNextRequest(\"Create Supplier\");",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"indents\": [\n    {\n      \"issueStore\": {\n        \"code\": \"MED001\"\n      },\n      \"indentDate\": 1512412200000,\n      \"indentNumber\": \"\",\n      \"indentType\": \"Indent\",\n      \"expectedDeliveryDate\": 1512412200000,\n      \"narration\": \"fgfd\",\n      \"materialHandOverTo\": \"fdgdf\",\n      \"designation\": \"\",\n      \"indentDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\"\n          },\n          \"userQuantity\": \"8\",\n          \"asset\": {\n            \"code\": \"2\"\n          }\n        }\n      ],\n      \"indentPurpose\": \"Consumption\",\n      \"inventoryType\": \"Asset\",\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511527847642,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/indents/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"indents",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Supplier",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "90d1ba93-ba5b-49ba-b6a1-a6d40a4f98f2",
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"postman.setEnvironmentVariable(\"SupplierCode\",\"SUPPLIERCODE\"+name1);",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "aa924dd2-328e-485e-9e47-a4429a96cb50",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"postman.setNextRequest(\"Create Pricelists\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \"RequestInfo\": {\n   \"apiId\": \"emp\",\n   \"ver\": \"1.0\",\n   \"ts\": \"12345677\",\n   \"action\": \"create\",\n   \"did\": \"1\",\n   \"key\": \"abcdkey\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"rajesh\",\n   \"authToken\": \"{{access_token}}\"\n\n  \n },\n \"suppliers\":\n[  {\n\"tenantId\":\"{{tenantId}}\",\n \t\"type\":\"INDIVIDUAL\",\n \t\"code\":\"{{SupplierCode}}\",\n \t\"active\":\"true\",\n \t\"name\":\"Anand And Sons\",\n \t\"address\":\"btm layout\",\n \t\"status\":\"ACTIVE\",\n \t\"inActiveDate\":\"15436789\",\n \t\"contactNo\":\"0132278956\",\n \t\"faxNo\":\"123788890\",\n \t\"website\":\"http://www.google.com\",\n \t\"email\":\"anand@gmail.com\",\n \t\"description\":\"supplier for cosmetics\",\n \t\"panNo\":\"DFGPV3459D\",\n \t\"tinNo\":\"34676767uiu\",\n \t\"cstNo\":\"34676767uiC\",\n \t\"vatNo\":\"34676767uiV\",\n \t\"gstNo\":\"75AGHFD7890A0Z0\",\n \t\"contactPerson\":\"anand dubay\",\n \t\"contactPersonNo\":\"8388743488\",\n \t\"bankCode\":\"CITI\",\n   \"bankBranch\":\"bankbranch1\",\n \t\"acctNo\":\"3161001500005068\",\n \t\"ifsc\":\"IFSC38899\",\n \t\"micr\":\"MICR983985\"\n \t}\n\n]\n \n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/suppliers/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"suppliers",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Pricelists",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"postman.setEnvironmentVariable(\"rateContractNumber\",\"rateContractNumber \"+name1);",
													"",
													"var name2 = Math.floor(Math.random() * 10000);",
													"postman.setEnvironmentVariable(\"agreementNumber\",\"agreementNumber \"+name2);",
													"",
													"function randomPreviousDate(){",
													"   var startDate = new Date(2012,0,1).getTime();",
													"   var endDate =  new Date(2015,0,1).getTime();",
													"   var spaces = (endDate - startDate);",
													"   var timestamp = Math.round(Math.random() * spaces);",
													"   timestamp += startDate;",
													"   return new Date(timestamp);",
													"}",
													"",
													"function randomFutureDate(){",
													"   var startDate = new Date().getTime();",
													"   var endDate =  new Date(2019,0,1).getTime();",
													"   var spaces = (endDate - startDate);",
													"   var timestamp = Math.round(Math.random() * spaces);",
													"   timestamp += startDate;",
													"   return new Date(timestamp);",
													"}",
													"",
													"var PreviousTime = new randomPreviousDate().getTime();",
													"var FutureTime = new randomFutureDate().getTime();",
													"",
													"pm.environment.set(\"PreviousTime\",PreviousTime);",
													"pm.environment.set(\"FutureTime\",FutureTime);",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"var requestBody = JSON.parse(request.data);",
													"",
													"var unitPrice=requestBody.priceLists[0].priceListDetails[0].ratePerUnit;",
													"pm.environment.set(\"unitPrice\",unitPrice);",
													"",
													"var responsePriceList=responseBody.priceLists[0];",
													"pm.environment.set(\"responsePriceList\",JSON.stringify(responsePriceList));",
													"",
													"postman.setNextRequest(\"Create Store\");",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"priceLists\": [\n    {\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"rateContractNumber\": \"{{rateContractNumber}}\",\n      \"rateContractDate\": 1489224710000,\n      \"agreementNumber\": \"{{agreementNumber}}\",\n      \"agreementDate\": 1491903110000,\n      \"agreementStartDate\": \"{{PreviousTime}}\",\n      \"agreementEndDate\": \"{{FutureTime}}\",\n      \"active\": true,\n      \"fileStoreId\": \"\",\n      \"rateType\": \"Quotation\",\n      \"priceListDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\",\n            \"conversionFactor\": 1\n          },\n          \"ratePerUnit\": \"120\",\n          \"quantity\": \"11\"\n        }\n      ],\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1512988123880,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/pricelists/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"pricelists",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": "create pricelist"
									},
									"response": []
								},
								{
									"name": "Create Store",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"postman.setEnvironmentVariable(\"storeCode\",\"STORECODE\"+name1);",
													"",
													"var name2 = Math.random().toString(26).replace(/[^a-z]+/g, '').substr(0, 5);",
													"postman.setEnvironmentVariable(\"storeName\",\"Store Name \"+name2);",
													"",
													"",
													"",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"postman.setNextRequest(\"Create Purchase Order Generation\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"stores\": [\n    {\n      \"code\": \"{{storeCode}}\",\n      \"name\": \"{{storeName}}\",\n      \"department\": {\n        \"code\": \"ADM\"\n      },\n      \"description\": \"test\",\n      \"officeLocation\": {\n        \"code\": \"LOC1\"\n      },\n      \"isCentralStore\": true,\n      \"billingAddress\": \"mumbai\",\n      \"deliveryAddress\": \"mumbai\",\n      \"storeInCharge\": {\n        \"code\": \"658039\"\n      },\n      \"contactNo1\": \"\",\n      \"email\": \"\",\n      \"active\": true,\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510742992622,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n      \"id\":1,\n      \"tenantId\":\"default\",\n      \"userName\":\"ramesh\"\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/stores/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"stores",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Purchase Order Generation",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9d353856-8732-408d-bd20-6f23c7c1904f",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"// console.log(JSON.stringify(responseBody));",
													"",
													"var ResPurchaseIndentDetails= responseBody.purchaseOrders[0].purchaseOrderDetails[0].purchaseIndentDetails[0].indentDetail;",
													"pm.environment.set(\"ResPurchaseIndentDetails\",JSON.stringify(ResPurchaseIndentDetails));",
													"",
													"postman.setNextRequest(\"Create Purchase Order\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"purchaseOrders\": [\n    {\n      \"indentNumbers\": [\n        \"{{indentNumber}}\"\n      ],\n      \"purchaseType\":\"Indent\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1513579003518,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/purchaseorders/_preparepofromindents?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"purchaseorders",
												"_preparepofromindents"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Purchase Order",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var today = new Date().getTime();",
													"pm.environment.set(\"today\", today);"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var PurchaseOrderNumber=responseBody.purchaseOrders[0].purchaseOrderNumber;",
													"pm.environment.set(\"PurchaseOrderNumber\",PurchaseOrderNumber);",
													"",
													"var PODetailsID=responseBody.purchaseOrders[0].purchaseOrderDetails[0].id;",
													"pm.environment.set(\"PODetailsID\",PODetailsID);",
													"",
													"postman.setNextRequest(\"Search Purchase Order\");",
													"",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1513930422037,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \"purchaseOrders\": [\n    {\n      \"store\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"purchaseType\": \"Indent\",\n      \"advanceAmount\":120,\n      \"tenantId\": \"{{tenantId}}\",\n      \"purchaseOrderDate\": \"{{today}}\",\n      \"rateType\": \"Quotation\",\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"purchaseOrderDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"material\": {\n            \"tenantId\": \"{{tenantId}}\",\n            \"code\": \"{{materialCode}}\",\n            \"name\": \"SEAL\",\n            \"description\": \"Seal\",\n            \"materialType\": {\n              \"code\": \"MAT1\"\n            },\n            \"baseUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"purchaseUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"expenseAccount\": {\n              \"glCode\": \"44001\"\n            },\n            \"minQuantity\": 2,\n            \"maxQuantity\": 20,\n            \"stockingUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"reorderLevel\": 10,\n            \"reorderQuantity\": 12,\n            \"lotControl\": false,\n            \"shelfLifeControl\": false,\n            \"serialNumber\": false\n          },\n          \"uom\": {\n            \"id\": \"1\",\n            \"tenantId\": \"default\",\n            \"code\": \"{{UomCode}}\",\n            \"description\": \"Numbers\",\n            \"baseUom\": true,\n            \"uomCategory\": \"QUANTITY\",\n            \"fromDate\": 1508740856,\n            \"toDate\": 1893436200,\n            \"conversionFactor\": 1\n          },\n          \"priceList\" : {{responsePriceList}},\n          \"unitPrice\": 130,\n          \"indentNumber\": \"{{indentNumber}}\",\n          \"userQuantity\": \"{{userQuantity}}\",\n          \"orderQuantity\": \"{{userQuantity}}\",\n          \"tenderQuantity\": 0,\n          \"receivedQuantity\": 0,\n          \"usedQuantity\": 0,\n          \"purchaseIndentDetails\": [\n            {\n              \"tenantId\": \"default\",\n              \"indentDetail\": {{ResPurchaseIndentDetails}},\n              \"quantity\": 3,\n              \"auditDetails\": {\n                \"createdBy\": \"22534\",\n                \"lastModifiedBy\": \"22534\",\n                \"createdTime\": 1514354899171,\n                \"lastModifiedTime\": 1514354899171\n              }\n            }\n          ]\n        }\n      ],\n      \"indentNumbers\": [\n        \"{{indentNumber}}\"\n      ]\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/purchaseorders/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"purchaseorders",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AdvRe",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "3c4dfd2a-3769-4cbc-b178-d55692866098",
												"type": "text/javascript",
												"exec": [
													"// var today = new Date().getTime();",
													"// pm.environment.set(\"today\", today);"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "45da3f19-fb8a-45ff-9386-6aebc507c751",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// var responseBody=JSON.parse(responseBody);",
													"",
													"var supplierAdvanceRequisitionsId=responseBody.supplierAdvanceRequisitions[0].id;",
													"pm.environment.set(\"supplierAdvanceRequisitionsId\",supplierAdvanceRequisitionsId);",
													"",
													"// var PODetailsID=responseBody.purchaseOrders[0].purchaseOrderDetails[0].id;",
													"// pm.environment.set(\"PODetailsID\",PODetailsID);",
													"",
													"// postman.setNextRequest(\"Search Purchase Order\");",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1513930422037,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \"supplierAdvanceRequisitions\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"purchaseOrder\": {\n        \"purchaseOrderNumber\": \"{{PurchaseOrderNumber}}\"\n      },\n      \"advanceAdjustedAmount\": 200,\n      \"advanceFullyAdjustedInBill\": true,\n      \"sarStatus\": \"PAID\",\n      \"stateId\": \"1\",\n      \"workFlowDetails\" : {}\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/supplieradvancerequisitions/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"supplieradvancerequisitions",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Search AdvRe",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n      \t\"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/supplieradvancerequisitions/_search?tenantId={{tenantId}}&supplier={{SupplierCode}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"supplieradvancerequisitions",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "supplier",
													"value": "{{SupplierCode}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update AdvRe",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "fdc80e63-0ad1-4eba-ae51-eeefb2a7082c",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "957012e6-a1f8-4663-b0ff-4b138b900395",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var ResAdvanceAdjustedAmount=responseBody.supplierAdvanceRequisitions[0].advanceAdjustedAmount;",
													"pm.environment.set(\"ResAdvanceAdjustedAmount\",ResAdvanceAdjustedAmount);",
													"",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1513930422037,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \"supplierAdvanceRequisitions\": [\n    {\n      \"id\":\"{{supplierAdvanceRequisitionsId}}\",\n      \"tenantId\": \"{{tenantId}}\",\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"purchaseOrder\": {\n        \"purchaseOrderNumber\": \"{{PurchaseOrderNumber}}\"\n      },\n      \"advanceAdjustedAmount\": 400,\n      \"advanceFullyAdjustedInBill\": true,\n      \"sarStatus\": \"PAID\",\n      \"stateId\": \"1\",\n      \"workFlowDetails\" : {}\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/supplieradvancerequisitions/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"supplieradvancerequisitions",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Search Update AdvRe",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "592ca06e-0a23-49ed-9583-c2927ee73e0c",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var MatchingResAdvanceAdjustedAmount=responseBody.supplierAdvanceRequisitions[0].advanceAdjustedAmount;",
													"pm.environment.set(\"MatchingResAdvanceAdjustedAmount\",MatchingResAdvanceAdjustedAmount);",
													"",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n      \t\"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/supplieradvancerequisitions/_search?tenantId={{tenantId}}&supplier={{SupplierCode}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"supplieradvancerequisitions",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "supplier",
													"value": "{{SupplierCode}}",
													"equals": true
												}
											]
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Format",
							"item": [],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Transfer Inward with OB",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
											"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
											"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
											"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
											"    postman.setEnvironmentVariable(\"username\",\"uday\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
											"",
											"postman.setNextRequest(\"MDMS_DATA\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"type": "text",
											"value": "{{username}}"
										},
										{
											"key": "password",
											"type": "text",
											"value": "{{password}}"
										},
										{
											"key": "grant_type",
											"type": "text",
											"value": "password"
										},
										{
											"key": "scope",
											"type": "text",
											"value": "read"
										},
										{
											"key": "tenantId",
											"type": "text",
											"value": "{{tenantId}}"
										}
									]
								},
								"url": {
									"raw": "{{url}}/user/oauth/token",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"oauth",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "MDMS_DATA",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"var resBody = JSON.parse(responseBody);",
											"",
											"",
											"var max = resBody.MdmsRes.inventory.Material.length - 1;",
											"         var rand = 0;",
											"         var materialCode = null;",
											"         var UomCode = null;",
											"         if(max > -1){",
											"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
											"             materialCode = resBody.MdmsRes.inventory.Material[rand].code;",
											"             pm.environment.set(\"materialCode\",materialCode);",
											"             ",
											"             UomCode = resBody.MdmsRes.inventory.Material[rand].baseUom.code;",
											"             pm.environment.set(\"UomCode\",UomCode);",
											"}",
											"",
											"postman.setNextRequest(\"Create Indents\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"inventory-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               },\n               {\n               \t \"name\":\"Uom\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{url}}/egov-mdms-service/v1/_search",
									"host": [
										"{{url}}"
									],
									"path": [
										"egov-mdms-service",
										"v1",
										"_search"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search Store",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var resBody = JSON.parse(responseBody);",
											"",
											"var max = resBody.stores.length - 1;",
											"         var rand = 0;",
											"         var storeCode = null;",
											"         if(max > -1){",
											"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
											"             storeCode = resBody.stores[rand].code;",
											"             pm.environment.set(\"storeCode\",storeCode);",
											"}",
											"postman.setNextRequest(\"Create Indent\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n        \"id\":2\n      }\n }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/stores/_search?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"stores",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Store",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var name1 = Math.floor(Math.random() * 10000);",
											"postman.setEnvironmentVariable(\"randStoreCode\",\"STORECODE\"+name1);",
											"",
											"var name2 = Math.random().toString(26).replace(/[^a-z]+/g, '').substr(0, 5);",
											"postman.setEnvironmentVariable(\"storeName\",\"Store Name \"+name2);",
											"",
											"",
											"",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"postman.setNextRequest(\"Create Purchase Order Generation\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"stores\": [\n    {\n      \"code\": \"{{randStoreCode}}\",\n      \"name\": \"{{storeName}}\",\n      \"department\": {\n        \"code\": \"ADM\"\n      },\n      \"description\": \"test\",\n      \"officeLocation\": {\n        \"code\": \"LOC1\"\n      },\n      \"isCentralStore\": true,\n      \"billingAddress\": \"mumbai\",\n      \"deliveryAddress\": \"mumbai\",\n      \"storeInCharge\": {\n        \"code\": \"658039\"\n      },\n      \"contactNo1\": \"\",\n      \"email\": \"\",\n      \"active\": true,\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510742992622,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n      \"id\":1,\n      \"tenantId\":\"default\",\n      \"userName\":\"ramesh\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/stores/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"stores",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Indents",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"var requestBody = JSON.parse(request.data);",
											"",
											"var indentNumber=responseBody.indents[0].indentNumber;",
											"pm.environment.set(\"indentNumber\",indentNumber);",
											"",
											"var userQuantity=responseBody.indents[0].indentDetails[0].userQuantity;",
											"pm.environment.set(\"userQuantity\",userQuantity);",
											"",
											"var indentId=responseBody.indents[0].id;",
											"pm.environment.set(\"indentId\",indentId);",
											"",
											"var indentDetailsId = responseBody.indents[0].indentDetails[0].id;",
											"pm.environment.set(\"indentDetailsId\",indentDetailsId);",
											"",
											"postman.setNextRequest(\"Create Supplier\");",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"indents\": [\n    {\n      \"issueStore\": {\n        \"code\": \"{{randStoreCode}}\"\n      },\n\t\n\t    \"indentStore\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"indentDate\": 1512412200000,\n      \"indentNumber\": \"\",\n      \"indentType\": \"Indent\",\n      \"expectedDeliveryDate\": 1512412200000,\n      \"narration\": \"fgfd\",\n      \"materialHandOverTo\": \"fdgdf\",\n      \"designation\": \"\",\n      \"indentDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\"\n          },\n          \"userQuantity\": \"12\",\n          \"asset\": {\n            \"code\": \"2\"\n          }\n        }\n      ],\n      \"indentPurpose\": \"Consumption\",\n      \"inventoryType\": \"Asset\",\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511527847642,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/indents/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"indents",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Suppliers",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var name1 = Math.floor(Math.random() * 10000);",
											"postman.setEnvironmentVariable(\"SupplierCode\",\"SUPPLIERCODE\"+name1);",
											"",
											"",
											"",
											"",
											"",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"postman.setNextRequest(\"Create Pricelists\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"RequestInfo\": {\n   \"apiId\": \"emp\",\n   \"ver\": \"1.0\",\n   \"ts\": \"12345677\",\n   \"action\": \"create\",\n   \"did\": \"1\",\n   \"key\": \"abcdkey\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"rajesh\",\n   \"authToken\": \"{{access_token}}\"\n\n  \n },\n \"suppliers\":\n[  {\n\"tenantId\":\"{{tenantId}}\",\n \t\"type\":\"INDIVIDUAL\",\n \t\"code\":\"{{SupplierCode}}\",\n \t\"active\":\"true\",\n \t\"name\":\"Anand And Sons\",\n \t\"address\":\"btm layout\",\n \t\"status\":\"ACTIVE\",\n \t\"inActiveDate\":\"15436789\",\n \t\"contactNo\":\"0132278956\",\n \t\"faxNo\":\"123788890\",\n \t\"website\":\"http://www.google.com\",\n \t\"email\":\"anand@gmail.com\",\n \t\"description\":\"supplier for cosmetics\",\n \t\"panNo\":\"DFGPV3459D\",\n \t\"tinNo\":\"34676767uiu\",\n \t\"cstNo\":\"34676767uiC\",\n \t\"vatNo\":\"34676767uiV\",\n \t\"gstNo\":\"75AGHFD7890A0Z0\",\n \t\"contactPerson\":\"anand dubay\",\n \t\"contactPersonNo\":\"8388743488\",\n \t\"bankCode\":\"CITI\",\n   \"bankBranch\":\"bankbranch1\",\n \t\"acctNo\":\"3161001500005068\",\n \t\"ifsc\":\"IFSC38899\",\n \t\"micr\":\"MICR983985\"\n \t}\n\n]\n \n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/suppliers/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"suppliers",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Pricelists",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var name1 = Math.floor(Math.random() * 10000);",
											"postman.setEnvironmentVariable(\"rateContractNumber\",\"rateContractNumber \"+name1);",
											" ",
											"var name2 = Math.floor(Math.random() * 10000);",
											"postman.setEnvironmentVariable(\"agreementNumber\",\"agreementNumber \"+name2);",
											"",
											"function randomPreviousDate(){",
											"   var startDate = new Date(2012,0,1).getTime();",
											"   var endDate =  new Date(2015,0,1).getTime();",
											"   var spaces = (endDate - startDate);",
											"   var timestamp = Math.round(Math.random() * spaces);",
											"   timestamp += startDate;",
											"   return new Date(timestamp);",
											"}",
											"",
											"function randomFutureDate(){",
											"   var startDate = new Date().getTime();",
											"   var endDate =  new Date(2019,0,1).getTime();",
											"   var spaces = (endDate - startDate);",
											"   var timestamp = Math.round(Math.random() * spaces);",
											"   timestamp += startDate;",
											"   return new Date(timestamp);",
											"}",
											"",
											"var PreviousTime = new randomPreviousDate().getTime();",
											"var FutureTime = new randomFutureDate().getTime();",
											"",
											"pm.environment.set(\"PreviousTime\",PreviousTime);",
											"pm.environment.set(\"FutureTime\",FutureTime);",
											"",
											"",
											"",
											"",
											"",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"var requestBody = JSON.parse(request.data);",
											"",
											"var ResSupplierCode = responseBody.priceLists[0].supplier.code;",
											"pm.environment.set(\"ResSupplierCode\",ResSupplierCode);",
											"",
											"var unitPrice=requestBody.priceLists[0].priceListDetails[0].ratePerUnit;",
											"pm.environment.set(\"unitPrice\",unitPrice);",
											"",
											"var responsePriceList=responseBody.priceLists[0];",
											"pm.environment.set(\"responsePriceList\",JSON.stringify(responsePriceList));",
											"",
											"postman.setNextRequest(\"Create Store\");",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"priceLists\": [\n    {\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"rateContractNumber\": \"{{rateContractNumber}}\",\n      \"rateContractDate\": 1489224710000,\n      \"agreementNumber\": \"{{agreementNumber}}\",\n      \"agreementDate\": 1491903110000,\n      \"agreementStartDate\": \"{{PreviousTime}}\",\n      \"agreementEndDate\": \"{{FutureTime}}\",\n      \"active\": true,\n      \"fileStoreId\": \"\",\n      \"rateType\": \"Quotation\",\n      \"priceListDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\",\n            \"conversionFactor\": 1\n          },\n          \"ratePerUnit\": \"12\",\n          \"quantity\": \"11\"\n        }\n      ],\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1512988123880,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/pricelists/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"pricelists",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Opening Balance",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"var mrnNumber = responseBody.materialReceipt[0].mrnNumber;",
											"pm.environment.set(\"mrnNumber\",mrnNumber);",
											"",
											"postman.setNextRequest(\"Search Opening Balance\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"materialReceipt\": [\n    {\n      \"receivingStore\": {\n        \"code\": \"{{randStoreCode}}\"\n      },\n      \"financialYear\": \"2017-18\",\n      \"receiptDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\",\n            \"description\": \"\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\"\n          },\n          \"userReceivedQty\": \"10\",\n          \"unitRate\": \"5\",\n          \"remarks\": \"test\",\n          \"receiptDetailsAddnInfo\": [\n            {\n            \t\"lotNo\":123,\n              \"receivedDate\": \"1510117560000\",\n              \"expiryDate\": \"1544520710000\"\n            }\n          ]\n        }\n      ],\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510549656506,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{  \n         \"id\":1,\n         \"userName\":\"testUser\",\n         \"name\":\"test user\"\n      }\n   \n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/openingbalance/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"openingbalance",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Transfer OutWard",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5defb793-bdad-464e-a26e-593b960357be",
										"type": "text/javascript",
										"exec": [
											"var today = new Date().getTime();",
											"pm.environment.set(\"today\", today);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "641a9939-53bf-4e0a-b23a-37148f6b9d02",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"",
											"var resMaterialIssueId = responseBody.materialIssues[0].id;",
											"pm.environment.set(\"resMaterialIssueId\",resMaterialIssueId);",
											"",
											"var issueNumberOutward = responseBody.materialIssues[0].issueNumber;",
											"pm.environment.set(\"issueNumberOutward\",issueNumberOutward);",
											"",
											"postman.setNextRequest(\"Search Opening Balance\");",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"12345677\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"rajesh\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":\n    {\n      \"id\":\"1\",\n      \"userName\":\"bimal\",\n      \"tenantId\":\"{{tenantId}}\"\n    }\n\n  },\n  \"materialIssues\":[\n    {\n    \"issueType\":\"MATERIALOUTWARD\",\n    \"materialIssueStatus\":\"APPROVED\",\n    \"tenantId\":\"{{tenantId}}\",\n    \"fromStore\":{\n      \"id\":\"1\",\n      \"code\":\"{{randStoreCode}}\",\n      \"name\":\"manyavars\",\n        \"description\":\"test\",\n        \"billingAddress\":\"bangalore\",\n          \"department\":{\n        \"id\":\"1\",\n        \"name\":\"clothes\"\n      },\n      \"deliveryAddress\":\"bangalore\",\n      \"storeInCharge\":{\n        \"code\":\"storeincharge1\"\n      },\n      \"tenantId\":\"{{tenantId}}\"\n    },\n    \"toStore\": {\n      \"id\":\"1\",\n      \"code\":\"{{storeCode}}\",\n      \"name\":\"manyavars\",\n        \"description\":\"test\",\n        \"billingAddress\":\"Bangalore\",\n          \"department\":{\n        \"id\":\"1\",\n        \"name\":\"clothes\"\n      },\n      \"deliveryAddress\":\"jhvjdshjdsjc\",\n      \"storeInCharge\":{\n        \"code\":\"storeincharge1\"\n      },\n      \"tenantId\":\"{{tenantId}}\"\n    },\n    \"issueDate\":\"{{today}}\",\n    \"description\":\"this is a defect\",\n    \"designation\":\"issue inspector\",\n    \"indent\":{\n      \"id\":\"1\",\n      \"tenantId\":\"{{tenantId}}\",\n      \"issueStore\": null,\n    \"indentStore\": null,\n      \"indentNumber\":\"{{indentNumber}}\",\n      \"indentDate\":\"1512864000000\",\n      \"indentType\":\"Indent\",\n      \"indentPurpose\":\"Consumption\",\n      \"indentCreatedBy\":\"Bimal\",\n      \"designation\":\"assistant manager\",\n      \"indentDetails\":[\n        {\n          \"id\":\"1\",\n          \"uom\":{\n            \"id\":\"1\"\n          },\n          \"indentQuantity\":\"56\",\n          \"material\":{\n            \"id\":\"1\"\n          }\n        }]\n     },\n     \"issuedToEmployee\":null,\n     \"issuedToDesignation\":null,\n     \"supplier\":{\n       \"id\":\"1\",\n       \"tenantId\":\"default\",\n       \"type\":\"OTHERS\",\n       \"code\":\"{{SupplierCode}}\",\n       \"name\":\"ANAND\",\n       \"ifsc\":\"6767676787\",\n       \"contactNo\":\"7878988899\",\n       \"bankCode\":\"bank123\",\n       \"address\":\"jjdshcfjdh\",\n       \"acctNo\":\"9844989489\"\n   \n     },\n     \"materialIssueDetails\":[\n       {\n    \n         \"tenantId\":\"default\",\n         \"material\":{\n           \"id\":\"1\",\n           \"tenantId\":\"default\",\n           \"code\":\"{{materialCode}}\",\n           \"name\":\"pensss\",\n           \"description\":\"stationary pen\",\n           \"reorderLevel\":\"2\",\n           \"materialType\":{\n             \"id\":\"1\",\n             \"name\":\"stationary\"\n           },\n           \"baseUom\":{\n             \"id\":\"1\"\n           },\n           \"minQuantity\":\"5\",\n           \"stockingUom\":{\n             \"id\":\"1\"\n           },\n           \"inventoryType\":\"Asset\",\n         \"materialClass\":\"MediumUsage\",\n           \"maxQuantity\":\"9\",\n           \"reorderQuantity\":\"56\",\n             \"purchaseUom\":{\n             \"id\":\"1\"\n           },\n             \"materialControlType\":\"LOTControl\"\n         \n         },\n         \"orderNumber\":\"5\",\n         \"userQuantityIssued\":5,\n         \"uom\": {\n           \"id\":\"1\",\n           \"code\":\"{{UomCode}}\",\n           \"name\":\"dozens\"\n            },\n         \"voucherHeader\":\"vou123\",\n         \"indentDetail\":{\n           \"id\":\"{{indentDetailsId}}\",\n           \"tenantId\":\"default\",\n           \"indentQuantity\":8,\n           \"uom\": null,\n           \"material\":null,\n         \"description\":\"broken pens\"\n         }\n       }\n       ]\n    }]\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/materialissues-to/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"materialissues-to",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Transfer Outward",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2de0038a-005f-4c0d-911b-eedc39bdccc9",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"12345677\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"rajesh\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":\n    {\n      \"id\":\"1\",\n      \"userName\":\"Bimal\",\n      \"tenantId\":\"{{tenantId}}\"\n    }\n\n  },\n  \"materialIssues\":[\n    {\n    \"materialIssueStatus\":\"APPROVED\",\n    \"issueType\":\"MATERIALOUTWARD\",\n     \"issueNumber\":\"{{issueNumberOutward}}\", \n    \"tenantId\":\"{{tenantId}}\",\n    \"fromStore\":{\n      \"id\":\"1\",\n      \"code\":\"{{randStoreCode}}\",\n      \"name\":\"manyavars\",\n      \"officeLocation\":{\n      \t\"code\":\"loc\"\n      },\n        \"description\":\"njdcfjdjc\",\n        \"billingAddress\":\"djsadjsadxj\",\n          \"department\":{\n        \"id\":\"1\",\n        \"name\":\"clothes\"\n      },\n      \"deliveryAddress\":\"jhvjdshjdsjc\",\n      \"storeInCharge\":{\n        \"code\":\"storeincharge1\"\n      },\n      \"tenantId\":\"{{tenantId}}\"\n    },\n    \"toStore\":\n    {\n      \"id\":\"1\",\n      \"code\":\"{{storeCode}}\",\n      \"name\":\"manyavars\",\n      \"officeLocation\":{\n      \t\"code\":\"loc\"\n      },\n        \"description\":\"njdcfjdjc\",\n        \"billingAddress\":\"djsadjsadxj\",\n          \"department\":{\n        \"id\":\"1\",\n        \"name\":\"clothes\"\n      },\n      \"deliveryAddress\":\"jhvjdshjdsjc\",\n      \"storeInCharge\":{\n        \"code\":\"storeincharge1\"\n      },\n      \"tenantId\":\"{{tenantId}}\"\n    },\n    \"issueDate\":\"{{today}}\",\n    \"description\":\"this is  a defect\",\n    \"designation\":\"issue inspector\",\n    \"indent\":{\n      \"id\":\"1\",\n      \"tenantId\":\"{{tenantId}}\",\n      \"issueStore\":null,\n      \"indentStore\":null,\n      \"indentNumber\":\"{{indentNumber}}\",\n      \"indentDate\":\"1512864000000\",\n      \"indentType\":\"Indent\",\n      \"indentPurpose\":\"Consumption\",\n      \"indentCreatedBy\":\"aastha\",\n      \"designation\":\"assistant\",\n      \"indentDetails\":[\n        {\n          \"id\":\"1\",\n          \"uom\":{\n            \"id\":\"1\"\n          },\n          \n          \"userQuantity\":\"{{userQuantity}}\",\n          \"material\":{\n            \"id\":\"1\"\n          }\n        }]\n     },\n     \"issuedToEmployee\":null,\n     \"issuedToDesignation\":null,\n     \"materialIssueDetails\":[\n       {\n         \"id\":\"{{resMaterialIssueId}}\",\n         \"tenantId\":\"{{tenantId}}\",\n         \"material\":{\n           \"id\":\"1\",\n           \"tenantId\":\"{{tenantId}}\",\n           \"code\":\"{{materialCode}}\",\n           \"name\":\"pensss\",\n           \"description\":\"stationary pen\",\n           \"reorderLevel\":\"2\",\n           \"materialType\":{\n             \"id\":\"1\",\n             \"name\":\"stationary\"\n           },\n           \"baseUom\":{\n             \"id\":\"1\"\n           },\n           \"minQuantity\":\"5\",\n           \"stockingUom\":{\n             \"id\":\"1\"\n           },\n           \"inventoryType\":\"Asset\",\n         \"materialClass\":\"MediumUsage\",\n           \"maxQuantity\":\"9\",\n           \"reorderQuantity\":\"56\",\n             \"purchaseUom\":{\n             \"id\":\"1\"\n           },\n             \"materialControlType\":\"LOTControl\"\n         \n         },\n         \"orderNumber\":\"5\",\n         \"userQuantityIssued\":4,\n  \n         \"uom\": {\n           \"id\":\"1\",\n           \"code\":\"{{UomCode}}\",\n           \"name\":\"dozens\"\n            },\n         \"voucherHeader\":\"vou12367\",\n         \"indentDetail\":{\n           \"id\":\"{{indentDetailsId}}\",\n           \"tenantId\":\"{{tenantId}}\",\n           \"userQuantity\":8,\n           \"uom\": null,\n           \"material\":null\n         \n         },\n         \"description\":\"broken pencils\"\n\n       }\n       ]\n    }]\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/materialissues-to/_update?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"materialissues-to",
										"_update"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create Transfer Inward receipt",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b821e84e-954c-4d7f-874c-7e349f8ce00f",
										"type": "text/javascript",
										"exec": [
											"var userReceivedQty = pm.environment.get(\"userQuantity\");",
											"var rQ = (userReceivedQty) - 1;",
											"pm.environment.set(\"userReceivedQty\", rQ);",
											"",
											"",
											"var userAcceptedQty = pm.environment.get(\"userQuantity\");",
											"var rQ = (userAcceptedQty) - 2;",
											"pm.environment.set(\"userAcceptedQty\", rQ);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f14f7b6c-3bf4-4100-969c-346a463a3743",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510290513893,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\": {\n      \"id\": 73\n    }\n  },\n\n  \"transferInwards\": [\n    {\n      \"receivingStore\": {\n        \"code\": \"{{randStoreCode}}\"\n      },\n      \"issueNumber\":\"{{issueNumberOutward}}\",\n      \"issueingStore\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"receiptDate\": 1512973979000,\n      \"receiptType\": \"INWARD RECEIPT\",\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"supplierBillNo\": \"AB-PO-2017\",\n      \"supplierBillDate\": 1512365762000,\n      \"challanNo\": \"CD-LK-2017\",\n      \"challanDate\": 1512365762000,\n      \"description\": \"description for receipt\",\n      \"paymentTerms\": \"paymentTerms for receipt\",\n      \"receivedBy\": \"Bimal\",\n      \"designation\": \"ASST-ENG\",\n      \"inspectedBy\": \"Blenka\",\n      \"inspectionDate\": 45698756,\n      \"inspectionRemarks\": \"inspection remarks for receipt\",\n      \"receiptDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\"\n          },\n          \"userReceivedQty\": 4,\n          \"userAcceptedQty\": 3,\n          \"unitRate\": 5,\n          \"isScrapItem\":\"true\",\n          \"rejectionRemark\": \"rejection remark for receipt detail\",\n          \"purchaseOrderDetail\": {\n            \"id\": 1\n          },\n         \"receiptDetailsAddnInfo\": [\n            {\n              \"userQuantity\": 3,\n              \"manufactureDate\": 12345698,\n              \"lotNo\":\"LOT-01\",\n              \"serialNo\": \"SR-02\",\n              \"expiryDate\": 1544509979000,\n              \"batchNo\": \"BA-NO-2017\",\n              \"receivedDate\":1544509979000\n            }\n          ]\n        }\n      ]\n    }\n  ]\n  \n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/transferinwards/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"transferinwards",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Search Transfer inwards",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"12345677\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"rajesh\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n    \t\"id\":1,\n    \t\"tenantId\":\"{{tenantId}}\",\n    \t\"username\":\"abc\"\n    }\n  }\n}\n"
								},
								"url": {
									"raw": "{{url}}/inventory-services/transferinwards/_search?tenantId={{tenantId}}&issueNumber={{issueNumberOutward}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"transferinwards",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "issueNumber",
											"value": "{{issueNumberOutward}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update Transfer inward",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "913bbcd7-faf8-44b9-82e4-c3a9a471db1b",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510290513893,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\": {\n      \"id\": 1\n    }\n  },\n  \"transferInwards\": [\n    {\n      \"issueNumber\":\"MRIN-2017-14\",\n      \"id\": 100,\n      \"receivingStore\": {\n        \"code\": \"STR\"\n      },\n      \"issueingStore\": {\n        \"code\": \"dd\"\n      },\n      \"mrnNumber\":\"MRN/defa/2017-18/00003\",\n      \"receiptDate\": 1512432086399,\n      \"mrnStatus\": \"ff\",\n      \"receiptType\": \"MISCELLANEOUS RECEIPT\",\n      \"supplier\": {\n        \"code\": \"SUPPLIER\"\n      },\n      \"supplierBillNo\": \"ABCP-PO-2017\",\n      \"supplierBillDate\": 3654799,\n      \"challanNo\": \"CDE-LK-2017\",\n      \"challanDate\": 1512365762000,\n      \"description\": \"description for receipt update\",\n      \"paymentTerms\": \"paymentTerms for receipt update\",\n      \"receivedBy\": \"sanjeev prasad\",\n      \"designation\": \"ASST-ENG1\",\n      \"inspectedBy\": \"ramesh babu\",\n      \"inspectionDate\": 1245698756,\n      \"inspectionRemarks\": \"inspection remarks for receipt update\",\n      \"isScrapItem\":\"true\",\n      \"receiptDetails\": [\n        {\n          \"id\": 372,\n          \"material\": {\n            \"code\": \"MAT1\"\n          },\n          \"uom\": {\n            \"code\": \"NOS\"\n          },\n         \"userReceivedQty\": 9,\n          \"receivedQty\": 29.5,\n          \"acceptedQty\": 11,\n          \"unitRate\": 20,\n          \"rejectionRemark\": \"rejection remark for receipt detail update\",\n          \"purchaseOrderDetail\": {\n            \"id\": 2\n          },\n          \"tenantid\":\"default\",\n          \"receiptDetailsAddnInfo\": [\n            {\n              \"id\": 80,\n              \"quantity\": 5,\n              \"manufactureDate\": 345698,\n              \"lotNo\": \"LOTU-01\",\n              \"serialNo\": \"SRU-02\",\n              \"expiryDate\": 1512825037000,\n              \"receivedDate\":1544509979000,\n              \"batchNo\": \"BAC-NO-2017\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/transferinwards/_update?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"transferinwards",
										"_update"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Transfer Inward with PO",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
											"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
											"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
											"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
											"    postman.setEnvironmentVariable(\"username\",\"uday\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
											"",
											"postman.setNextRequest(\"MDMS_DATA\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"type": "text",
											"value": "{{username}}"
										},
										{
											"key": "password",
											"type": "text",
											"value": "{{password}}"
										},
										{
											"key": "grant_type",
											"type": "text",
											"value": "password"
										},
										{
											"key": "scope",
											"type": "text",
											"value": "read"
										},
										{
											"key": "tenantId",
											"type": "text",
											"value": "{{tenantId}}"
										}
									]
								},
								"url": {
									"raw": "{{url}}/user/oauth/token",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"oauth",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "MDMS_DATA",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"var resBody = JSON.parse(responseBody);",
											"",
											"",
											"var max = resBody.MdmsRes.inventory.Material.length - 1;",
											"         var rand = 0;",
											"         var materialCode = null;",
											"         var UomCode = null;",
											"         if(max > -1){",
											"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
											"             materialCode = resBody.MdmsRes.inventory.Material[rand].code;",
											"             pm.environment.set(\"materialCode\",materialCode);",
											"             ",
											"             UomCode = resBody.MdmsRes.inventory.Material[rand].baseUom.code;",
											"             pm.environment.set(\"UomCode\",UomCode);",
											"}",
											"",
											"postman.setNextRequest(\"Create Indents\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"inventory-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               },\n               {\n               \t \"name\":\"Uom\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{url}}/egov-mdms-service/v1/_search",
									"host": [
										"{{url}}"
									],
									"path": [
										"egov-mdms-service",
										"v1",
										"_search"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search Store",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var resBody = JSON.parse(responseBody);",
											"var max = resBody.stores.length - 1;",
											"         var rand = 0;",
											"         var storeCode = null;",
											"         if(max > -1){",
											"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
											"             storeCode = resBody.stores[rand].code;",
											"             pm.environment.set(\"storeCode\",storeCode);",
											"            //  rand1 = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
											"",
											"}",
											"",
											"postman.setNextRequest(\"Create Indents\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n        \"id\":2\n      }\n }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/stores/_search?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"stores",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Store",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var name1 = Math.floor(Math.random() * 10000);",
											"",
											"postman.setEnvironmentVariable(\"randStoreCode\",\"STORECODE\"+name1);",
											"",
											"",
											"var name2 = Math.random().toString(26).replace(/[^a-z]+/g, '').substr(0, 5);",
											"",
											"postman.setEnvironmentVariable(\"storeName\",\"Store Name \"+name2);",
											"",
											"",
											"",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"postman.setNextRequest(\"Create Purchase Order Generation\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"stores\": [\n    {\n      \"code\": \"{{randStoreCode}}\",\n      \"name\": \"{{storeName}}\",\n      \"department\": {\n        \"code\": \"ADM\"\n      },\n      \"description\": \"test\",\n      \"officeLocation\": {\n        \"code\": \"LOC1\"\n      },\n      \"isCentralStore\": true,\n      \"billingAddress\": \"mumbai\",\n      \"deliveryAddress\": \"mumbai\",\n      \"storeInCharge\": {\n        \"code\": \"658039\"\n      },\n      \"contactNo1\": \"\",\n      \"email\": \"\",\n      \"active\": true,\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510742992622,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n      \"id\":1,\n      \"tenantId\":\"default\",\n      \"userName\":\"ramesh\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/stores/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"stores",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Indents",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"",
											"var indentNumber=responseBody.indents[0].indentNumber;",
											"pm.environment.set(\"indentNumber\",indentNumber);",
											"",
											"var indentQuantity=responseBody.indents[0].indentDetails[0].userQuantity;",
											"pm.environment.set(\"indentQuantity\",indentQuantity);",
											"",
											"var indentId=responseBody.indents[0].id;",
											"pm.environment.set(\"indentId\",indentId);",
											"",
											"var indentDetailsId = responseBody.indents[0].indentDetails[0].id;",
											"pm.environment.set(\"indentDetailsId\",indentDetailsId);",
											"",
											"postman.setNextRequest(\"Create Suppliers\");",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"indents\": [\n    {\n      \"issueStore\": {\n        \"code\": \"{{randStoreCode}}\"\n      },\n\t\n\t    \"indentStore\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"indentDate\": 1512412200000,\n      \"indentNumber\": \"\",\n      \"indentType\": \"Transfer Indent\",\n      \"expectedDeliveryDate\": 1512412200000,\n      \"narration\": \"fgfd\",\n      \"materialHandOverTo\": \"fdgdf\",\n      \"designation\": \"\",\n      \"indentDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\"\n          },\n          \"userQuantity\": \"12\",\n          \"asset\": {\n            \"code\": \"2\"\n          }\n        }\n      ],\n      \"indentPurpose\": \"Consumption\",\n      \"inventoryType\": \"Asset\",\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511527847642,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/indents/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"indents",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Suppliers",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var name1 = Math.floor(Math.random() * 10000);",
											"",
											"postman.setEnvironmentVariable(\"SupplierCode\",\"SUPPLIERCODE\"+name1);",
											"",
											"",
											"",
											"",
											"",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"postman.setNextRequest(\"Create Pricelists\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"RequestInfo\": {\n   \"apiId\": \"emp\",\n   \"ver\": \"1.0\",\n   \"ts\": \"12345677\",\n   \"action\": \"create\",\n   \"did\": \"1\",\n   \"key\": \"abcdkey\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"rajesh\",\n   \"authToken\": \"{{access_token}}\"\n\n  \n },\n \"suppliers\":\n[  {\n\"tenantId\":\"{{tenantId}}\",\n \t\"type\":\"INDIVIDUAL\",\n \t\"code\":\"{{SupplierCode}}\",\n \t\"active\":\"true\",\n \t\"name\":\"Anand And Sons\",\n \t\"address\":\"btm layout\",\n \t\"status\":\"ACTIVE\",\n \t\"inActiveDate\":\"15436789\",\n \t\"contactNo\":\"0132278956\",\n \t\"faxNo\":\"123788890\",\n \t\"website\":\"http://www.google.com\",\n \t\"email\":\"anand@gmail.com\",\n \t\"description\":\"supplier for cosmetics\",\n \t\"panNo\":\"DFGPV3459D\",\n \t\"tinNo\":\"34676767uiu\",\n \t\"cstNo\":\"34676767uiC\",\n \t\"vatNo\":\"34676767uiV\",\n \t\"gstNo\":\"75AGHFD7890A0Z0\",\n \t\"contactPerson\":\"anand dubay\",\n \t\"contactPersonNo\":\"8388743488\",\n \t\"bankCode\":\"CITI\",\n   \"bankBranch\":\"bankbranch1\",\n \t\"acctNo\":\"3161001500005068\",\n \t\"ifsc\":\"IFSC38899\",\n \t\"micr\":\"MICR983985\"\n \t}\n\n]\n \n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/suppliers/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"suppliers",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Pricelists",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											" var name1 = Math.floor(Math.random() * 10000);",
											"",
											" postman.setEnvironmentVariable(\"rateContractNumber\",\"rateContractNumber \"+name1);",
											" ",
											" var name2 = Math.floor(Math.random() * 10000);",
											"postman.setEnvironmentVariable(\"agreementNumber\",\"agreementNumber \"+name2);",
											"",
											"function randomPreviousDate(){",
											"   var startDate = new Date(2012,0,1).getTime();",
											"   var endDate =  new Date(2015,0,1).getTime();",
											"   var spaces = (endDate - startDate);",
											"   var timestamp = Math.round(Math.random() * spaces);",
											"   timestamp += startDate;",
											"   return new Date(timestamp);",
											"}",
											"",
											"function randomFutureDate(){",
											"   var startDate = new Date().getTime();",
											"   var endDate =  new Date(2019,0,1).getTime();",
											"   var spaces = (endDate - startDate);",
											"   var timestamp = Math.round(Math.random() * spaces);",
											"   timestamp += startDate;",
											"   return new Date(timestamp);",
											"}",
											"",
											"",
											"var PreviousTime = new randomPreviousDate().getTime();",
											"",
											"var FutureTime = new randomFutureDate().getTime();",
											"",
											"pm.environment.set(\"PreviousTime\",PreviousTime);",
											"pm.environment.set(\"FutureTime\",FutureTime);",
											"",
											"",
											"",
											"",
											"",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"var requestBody = JSON.parse(request.data);",
											"",
											"var ResSupplierCode = responseBody.priceLists[0].supplier.code;",
											"pm.environment.set(\"ResSupplierCode\",ResSupplierCode);",
											"",
											"",
											"var unitPrice=requestBody.priceLists[0].priceListDetails[0].ratePerUnit;",
											"pm.environment.set(\"unitPrice\",unitPrice);",
											"",
											"var responsePriceList=responseBody.priceLists[0];",
											"pm.environment.set(\"responsePriceList\",JSON.stringify(responsePriceList));",
											"",
											"postman.setNextRequest(\"Create Store\");",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"priceLists\": [\n    {\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"rateContractNumber\": \"{{rateContractNumber}}\",\n      \"rateContractDate\": 1489224710000,\n      \"agreementNumber\": \"{{agreementNumber}}\",\n      \"agreementDate\": 1491903110000,\n      \"agreementStartDate\": \"{{PreviousTime}}\",\n      \"agreementEndDate\": \"{{FutureTime}}\",\n      \"active\": true,\n      \"fileStoreId\": \"\",\n      \"rateType\": \"Quotation\",\n      \"priceListDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\",\n            \"conversionFactor\": 1\n          },\n          \"ratePerUnit\": \"12\",\n          \"quantity\": \"11\"\n        }\n      ],\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1512988123880,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/pricelists/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"pricelists",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Purchase Order Generation",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"// // console.log(JSON.stringify(responseBody));",
											"// var ResPriceListPO= responseBody.purchaseOrders[0].purchaseOrderDetails[0].priceList.id;",
											"// pm.environment.set(\"ResPriceListPO\",ResPriceListPO);",
											"",
											"var ResPurchaseIndentDetails= responseBody.purchaseOrders[0].purchaseOrderDetails[0].purchaseIndentDetails[0];",
											"pm.environment.set(\"ResPurchaseIndentDetails\",JSON.stringify(ResPurchaseIndentDetails));",
											"",
											"",
											"postman.setNextRequest(\"Create Purchase Order\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"purchaseOrders\": [\n    {\n      \"indentNumbers\": [\n        \"{{indentNumber}}\"\n      ],   \n      \"purchaseType\":\"Indent\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1513579003518,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/purchaseorders/_preparepofromindents?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"purchaseorders",
										"_preparepofromindents"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Purchase Order",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var today = new Date().getTime();",
											"pm.environment.set(\"today\", today);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody=JSON.parse(responseBody);",
											"var RespurchaseOrderNumber=responseBody.purchaseOrders[0].purchaseOrderNumber;",
											"pm.environment.set(\"purchaseOrderNumber\",RespurchaseOrderNumber);",
											"",
											"var PODetailsID=responseBody.purchaseOrders[0].purchaseOrderDetails[0].id;",
											"pm.environment.set(\"PODetailsID\",PODetailsID);",
											"",
											"// postman.setNextRequest(\"Search Purchase Order\");",
											"",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1513930422037,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \"purchaseOrders\": [\n    {\n      \"store\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"purchaseType\": \"Indent\",\n      \"tenantId\": \"{{tenantId}}\",\n      \"purchaseOrderDate\": \"{{today}}\",\n      \"rateType\": \"Quotation\",\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"purchaseOrderDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"material\": {\n            \"tenantId\": \"{{tenantId}}\",\n            \"code\": \"{{materialCode}}\",\n            \"name\": \"SEAL\",\n            \"description\": \"Seal\",\n            \"materialType\": {\n              \"code\": \"MAT1\"\n            },\n            \"baseUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"purchaseUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"expenseAccount\": {\n              \"glCode\": \"44001\"\n            },\n            \"minQuantity\": 2,\n            \"maxQuantity\": 20,\n            \"stockingUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"reorderLevel\": 10,\n            \"reorderQuantity\": 12,\n            \"lotControl\": false,\n            \"shelfLifeControl\": false,\n            \"serialNumber\": false\n          },\n          \"uom\": {\n            \"id\": \"1\",\n            \"tenantId\": \"default\",\n            \"code\": \"NOS\",\n            \"description\": \"Numbers\",\n            \"baseUom\": true,\n            \"uomCategory\": \"QUANTITY\",\n            \"fromDate\": 1508740856,\n            \"toDate\": 1893436200,\n            \"conversionFactor\": 1\n          },\n          \"priceList\" : {{responsePriceList}},\n          \"unitPrice\": 12,\n          \"indentNumber\": \"{{indentNumber}}\",\n          \"userQuantity\": \"{{indentQuantity}}\",\n          \"orderQuantity\": \"{{indentQuantity}}\",\n          \"tenderQuantity\": 0,\n          \"receivedQuantity\": 0,\n          \"usedQuantity\": 0,\n          \"purchaseIndentDetails\": [\n            {\n              \"tenantId\": \"default\",\n              \"indentDetail\": {\n                \"id\": \"158\",\n                \"tenantId\": \"default\",\n                \"material\": {\n                  \"tenantId\": \"default\",\n                  \"code\": \"{{materialCode}}\",\n                  \"name\": \"SEAL\",\n                  \"description\": \"Seal\",\n                  \"materialType\": {\n                    \"code\": \"MT1\"\n                  },\n                  \"baseUom\": {\n                    \"id\": \"1\",\n                    \"tenantId\": \"default\",\n                    \"code\": \"NOS\",\n                    \"description\": \"Numbers\",\n                    \"baseUom\": true,\n                    \"uomCategory\": \"QUANTITY\",\n                    \"fromDate\": 1508740856,\n                    \"toDate\": 1893436200,\n                    \"conversionFactor\": 1\n                  },\n                  \"purchaseUom\": {\n                    \"id\": \"1\",\n                    \"tenantId\": \"default\",\n                    \"code\": \"NOS\",\n                    \"description\": \"Numbers\",\n                    \"baseUom\": true,\n                    \"uomCategory\": \"QUANTITY\",\n                    \"fromDate\": 1508740856,\n                    \"toDate\": 1893436200,\n                    \"conversionFactor\": 1\n                  },\n                  \"expenseAccount\": {\n                    \"glCode\": \"44001\"\n                  },\n                  \"minQuantity\": 2,\n                  \"maxQuantity\": 20,\n                  \"stockingUom\": {\n                    \"id\": \"1\",\n                    \"tenantId\": \"default\",\n                    \"code\": \"NOS\",\n                    \"description\": \"Numbers\",\n                    \"baseUom\": true,\n                    \"uomCategory\": \"QUANTITY\",\n                    \"fromDate\": 1508740856,\n                    \"toDate\": 1893436200,\n                    \"conversionFactor\": 1\n                  },\n                  \"reorderLevel\": 10,\n                  \"reorderQuantity\": 12,\n                  \"lotControl\": false,\n                  \"shelfLifeControl\": false,\n                  \"serialNumber\": false\n                },\n                \"uom\": {\n                  \"code\": \"NOS\",\n                  \"baseUom\": false\n                },\n                \"projectCode\": {\n                  \n                },\n                \"asset\": {\n                  \"code\": \"2\"\n                },\n                \"indentQuantity\": 3,\n                \"totalProcessedQuantity\": 0,\n                \"indentIssuedQuantity\": 0,\n                \"poOrderedQuantity\": 0,\n                \"interstoreRequestQuantity\": 0\n              },\n              \"quantity\": 3,\n              \"auditDetails\": {\n                \"createdBy\": \"22534\",\n                \"lastModifiedBy\": \"22534\",\n                \"createdTime\": 1514354899171,\n                \"lastModifiedTime\": 1514354899171\n              }\n            }\n          ]\n        }\n      ],\n      \"indentNumbers\": [\n        \"{{indentNumber}}\"\n      ]\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/purchaseorders/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"purchaseorders",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Material Receipt Note",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var userReceivedQty = pm.environment.get(\"indentQuantity\");",
											"var rQ = (userReceivedQty) - 1;",
											"pm.environment.set(\"userReceivedQty\", rQ);",
											"",
											"",
											"var userAcceptedQty = pm.environment.get(\"indentQuantity\");",
											"var rQ = (userAcceptedQty) - 2;",
											"pm.environment.set(\"userAcceptedQty\", rQ);",
											"",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"",
											"var materialReceiptMRN = responseBody.MaterialReceipt[0].mrnNumber;",
											"pm.environment.set(\"materialReceiptMRN\",materialReceiptMRN);",
											"",
											"postman.setNextRequest(\"Create Material Issue\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510290513893,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\": {\n      \"id\": 73\n    }\n  },\n  \"materialReceipt\": [\n    {\n      \"receivingStore\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"receiptDate\": \"{{today}}\",\n      \"receiptType\": \"PURCHASE RECEIPT\",\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"supplierBillNo\": \"AB-PO-2017\",\n      \"supplierBillDate\": 1512365762000,\n      \"challanNo\": \"CD-LK-2017\",\n      \"challanDate\": 1512365762000,\n      \"description\": \"description for receipt\",\n      \"paymentTerms\": \"paymentTerms for receipt\",\n      \"receivedBy\": \"Bimal\",\n      \"designation\": \"ASST-ENG\",\n      \"inspectedBy\": \"ramesh\",\n      \"inspectionDate\": 45698756,\n      \"inspectionRemarks\": \"inspection remarks for receipt\",\n      \"receiptDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\"\n          },\n          \"userReceivedQty\": \"{{userReceivedQty}}\",\n          \"userAcceptedQty\": \"{{userAcceptedQty}}\",\n          \"unitRate\": 5,\n          \"isScrapItem\":\"true\",\n          \"rejectionRemark\": \"rejection remark for receipt detail\",\n          \"purchaseOrderDetail\": {\n            \"id\": \"{{PODetailsID}}\"\n          },\n         \"receiptDetailsAddnInfo\": [\n            {\n              \"userQuantity\": \"{{userAcceptedQty}}\",\n              \"manufactureDate\": 12345698,\n              \"lotNo\":\"LOT-01\",\n              \"serialNo\": \"SR-02\",\n              \"expiryDate\": 1544509979000,\n              \"batchNo\": \"BA-NO-2017\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/receiptnotes/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"receiptnotes",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Material Issue",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var today = new Date().getTime();",
											"pm.environment.set(\"today\", today);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"12345677\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"rajesh\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":\n    {\n      \"id\":\"1\",\n      \"userName\":\"Bimal\",\n      \"tenantId\":\"{{tenantId}}\"\n    }\n\n  },\n  \"materialIssues\":[\n    {\n    \"tenantId\":\"{{tenantId}}\",\n    \"fromStore\":null,\n    \"toStore\":null,\n    \"issueDate\":\"{{today}}\",\n    \"description\":\"this is a defect\",\n    \"designation\":\"issue inspector\",\n    \"indent\":{\n      \"id\": \"{{indentId}}\",\n      \"tenantId\":\"{{tenantId}}\",\n      \"issueStore\":{\n      \"id\":\"1\",\n      \"code\":\"{{randStoreCode}}\",\n      \"name\":\"manyavars\",\n      \"description\":\"njdcfjdjc\",\n      \"billingAddress\":\"djsadjsadxj\",\n          \"department\":{\n           \"id\":\"1\",\n           \"name\":\"clothes\"\n      },\n      \"deliveryAddress\":\"jhvjdshjdsjc\",\n      \"storeInCharge\":{\n        \"code\":\"storeincharge1\"\n      },\n      \"tenantId\":\"default\"\n    },\n    \"indentStore\": null,\n      \"indentNumber\":\"{{indentNumber}}\",\n      \"indentDate\":\"1512864000000\",\n      \"indentType\":\"Indent\",\n      \"indentPurpose\":\"Consumption\",\n      \"indentCreatedBy\":\"Bimal\",\n      \"designation\":\"assistant manager\",\n      \"indentDetails\":[\n        {\n          \"id\":\"1\",\n          \"uom\":{\n            \"id\":\"1\"\n          },\n          \"userQuantity\":\"{{indentQuantity}}\",\n          \"material\":{\n            \"id\":\"1\"\n          }\n        }]\n     },\n     \"issuedToEmployee\":null,\n     \"issuedToDesignation\":null,\n     \"supplier\":{\n       \"id\":\"1\",\n       \"tenantId\":\"default\",\n       \"type\":\"OTHERS\",\n       \"code\":\"{{SupplierCode}}\",\n       \"name\":\"ANAND\",\n       \"ifsc\":\"6767676787\",\n       \"contactNo\":\"7878988899\",\n       \"bankCode\":\"CITI\",\n       \"address\":\"jjdshcfjdh\",\n       \"acctNo\":\"9844989489\"\n   \n     },\n     \"materialIssueDetails\":[\n       {\n    \n         \"tenantId\":\"{{tenantId}}\",\n         \"material\":null,\n         \"orderNumber\":\"5\",\n         \"userQuantityIssued\":\"{{receivedQuantity}}\",\n         \"value\":\"100\",\n         \"uom\": null,\n         \"voucherHeader\":\"vou123\",\n         \"indentDetail\":{\n           \"id\":\"{{indentDetailsId}}\",\n           \"tenantId\":\"default\",\n           \"userQuantity\":\"{{indentQuantity}}\",\n           \"uom\":{\n           \"id\":\"1\",\n           \"code\":\"{{UomCode}}\",\n           \"name\":\"dozens\"\n            },\n           \"material\":{\n           \"id\":\"1\",\n           \"tenantId\":\"default\",\n           \"code\":\"{{materialCode}}\",\n           \"name\":\"pensss\",\n           \"description\":\"stationary pen\",\n           \"reorderLevel\":\"2\",\n           \"materialType\":{\n             \"id\":\"1\",\n             \"name\":\"stationary\"\n           },\n           \"baseUom\":{\n             \"id\":\"1\"\n           },\n           \"minQuantity\":\"5\",\n           \"stockingUom\":{\n             \"id\":\"1\"\n           },\n           \"inventoryType\":\"Asset\",\n        \t\"materialClass\":\"MediumUsage\",\n           \"maxQuantity\":\"9\",\n           \"reorderQuantity\":\"56\",\n             \"purchaseUom\":{\n             \"id\":\"1\"\n           },\n             \"materialControlType\":\"LOTControl\"\n          }\n         \n         },\n         \"description\":\"broken pens\"\n       \n       }\n       ]\n    }]\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/materialissues/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"materialissues",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Transfer OutWard",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"12345677\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"rajesh\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":\n    {\n      \"id\":\"1\",\n      \"userName\":\"bimal\",\n      \"tenantId\":\"{{tenantId}}\"\n    }\n\n  },\n  \"materialIssues\":[\n    {\n    \"tenantId\":\"default\",\n    \"fromStore\":null,\n    \"toStore\":null,\n    \"issueDate\":\"123456987\",\n    \"description\":\"this is a defect\",\n    \"designation\":\"issue inspector\",\n    \"indent\":{\n      \"id\":\"1\",\n      \"tenantId\":\"default\",\n      \"issueStore\":{\n      \"id\":\"1\",\n      \"code\":\"{{randStoreCode}}\",\n      \"name\":\"manyavars\",\n        \"description\":\"njdcfjdjc\",\n        \"billingAddress\":\"djsadjsadxj\",\n          \"department\":{\n        \"id\":\"1\",\n        \"name\":\"clothes\"\n      },\n      \"deliveryAddress\":\"jhvjdshjdsjc\",\n      \"storeInCharge\":{\n        \"code\":\"storeincharge1\"\n      },\n      \"tenantId\":\"default\"\n    },\n    \"indentStore\": {\n      \"id\":\"1\",\n      \"code\":\"{{storeCode}}\",\n      \"name\":\"manyavars\",\n        \"description\":\"njdcfjdjc\",\n        \"billingAddress\":\"djsadjsadxj\",\n          \"department\":{\n        \"id\":\"1\",\n        \"name\":\"clothes\"\n      },\n      \"deliveryAddress\":\"jhvjdshjdsjc\",\n      \"storeInCharge\":{\n        \"code\":\"storeincharge1\"\n      },\n      \"tenantId\":\"default\"\n    },\n      \"indentNumber\":\"{{indentNumber}}\",\n      \"indentDate\":\"1512864000000\",\n      \"indentType\":\"Indent\",\n      \"indentPurpose\":\"Consumption\",\n      \"indentCreatedBy\":\"Bimal\",\n      \"designation\":\"assistant manager\",\n      \"indentDetails\":[\n        {\n          \"id\":\"1\",\n          \"uom\":{\n            \"id\":\"1\"\n          },\n          \"indentQuantity\":\"56\",\n          \"material\":{\n            \"id\":\"1\"\n          }\n        }]\n     },\n     \"issuedToEmployee\":null,\n     \"issuedToDesignation\":null,\n     \"supplier\":{\n       \"id\":\"1\",\n       \"tenantId\":\"default\",\n       \"type\":\"OTHERS\",\n       \"code\":\"SUPP123\",\n       \"name\":\"ANAND\",\n       \"ifsc\":\"6767676787\",\n       \"contactNo\":\"7878988899\",\n       \"bankCode\":\"bank123\",\n       \"address\":\"jjdshcfjdh\",\n       \"acctNo\":\"9844989489\"\n   \n     },\n     \"materialIssueDetails\":[\n       {\n    \n         \"tenantId\":\"default\",\n         \"material\":null,\n         \"orderNumber\":\"5\",\n         \"userQuantityIssued\":5,\n         \"uom\": null,\n         \"voucherHeader\":\"vou123\",\n         \"indentDetail\":{\n           \"id\":\"{{indentDetailsId}}\",\n           \"tenantId\":\"default\",\n           \"indentQuantity\":8,\n           \"uom\":{\n           \"id\":\"1\",\n           \"code\":\"{{UomCode}}\",\n           \"name\":\"dozens\"\n            },\n           \"material\":{\n           \"id\":\"1\",\n           \"tenantId\":\"default\",\n           \"code\":\"{{materialCode}}\",\n           \"name\":\"pensss\",\n           \"description\":\"stationary pen\",\n           \"reorderLevel\":\"2\",\n           \"materialType\":{\n             \"id\":\"1\",\n             \"name\":\"stationary\"\n           },\n           \"baseUom\":{\n             \"id\":\"1\"\n           },\n           \"minQuantity\":\"5\",\n           \"stockingUom\":{\n             \"id\":\"1\"\n           },\n           \"inventoryType\":\"Asset\",\n         \"materialClass\":\"MediumUsage\",\n           \"maxQuantity\":\"9\",\n           \"reorderQuantity\":\"56\",\n             \"purchaseUom\":{\n             \"id\":\"1\"\n           },\n             \"materialControlType\":\"LOTControl\"\n         \n         }\n         \n         },\n         \"description\":\"broken pens\"\n       \n       }\n       ]\n    }]\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/materialissues-to/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"materialissues-to",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search Transfer Outward",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"12345677\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"rajesh\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":\n    {\n      \"id\":\"1\",\n      \"userName\":\"mansi\",\n      \"tenantId\":\"default\"\n    }\n\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/materialissues-to/_search?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"materialissues-to",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Transfer Outword",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"12345677\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"rajesh\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":\n    {\n      \"id\":\"1\",\n      \"userName\":\"mansi\",\n      \"tenantId\":\"default\"\n    }\n\n  },\n  \"materialIssues\":[\n    {\n    \"materialIssueStatus\":\"APPROVED\",\n     \"issueNumber\":\"MRIN-2017-47\",\n    \"tenantId\":\"default\",\n    \"fromStore\":{\n      \"id\":\"1\",\n      \"code\":\"store123\",\n      \"name\":\"manyavars\",\n      \"officeLocation\":{\n      \t\"code\":\"loc\"\n      },\n        \"description\":\"njdcfjdjc\",\n        \"billingAddress\":\"djsadjsadxj\",\n          \"department\":{\n        \"id\":\"1\",\n        \"name\":\"clothes\"\n      },\n      \"deliveryAddress\":\"jhvjdshjdsjc\",\n      \"storeInCharge\":{\n        \"code\":\"storeincharge1\"\n      },\n      \"tenantId\":\"default\"\n    },\n    \"toStore\":{\n      \"id\":\"1\",\n      \"code\":\"store123\",\n      \"name\":\"manyavars\",\n      \"officeLocation\":{\n      \t\"code\":\"loc\"\n      },\n        \"description\":\"njdcfjdjc\",\n        \"billingAddress\":\"djsadjsadxj\",\n          \"department\":{\n        \"id\":\"1\",\n        \"name\":\"clothes\"\n      },\n      \"deliveryAddress\":\"jhvjdshjdsjc\",\n      \"storeInCharge\":{\n        \"code\":\"storeincharge1\"\n      },\n      \"tenantId\":\"default\"\n    },\n    \"issueDate\":\"123456987\",\n    \"description\":\"this is  a defect\",\n    \"designation\":\"issue inspector\",\n    \"indent\":{\n      \"id\":\"1\",\n      \"tenantId\":\"default\",\n      \"issueStore\":null,\n      \"indentStore\":null,\n      \"indentNumber\":\"In75834\",\n      \"indentDate\":\"1512864000000\",\n      \"indentType\":\"Indent\",\n      \"indentPurpose\":\"Consumption\",\n      \"indentCreatedBy\":\"aastha\",\n      \"designation\":\"assistant\",\n      \"indentDetails\":[\n        {\n          \"id\":\"1\",\n          \"uom\":{\n            \"id\":\"1\"\n          },\n          \"indentQuantity\":\"56\",\n          \"material\":{\n            \"id\":\"1\"\n          }\n        }]\n     },\n     \"issuedToEmployee\":null,\n     \"issuedToDesignation\":null,\n     \"supplier\":{\n       \"id\":\"1\",\n       \"tenantId\":\"default\",\n       \"type\":\"OTHERS\",\n       \"code\":\"SUPP123\",\n       \"name\":\"ANAND\",\n       \"ifsc\":\"6767676787\",\n       \"contactNo\":\"7878988899\",\n       \"bankCode\":\"bank123\",\n       \"address\":\"jjdshcfjdh\",\n       \"acctNo\":\"9844989489\"\n   \n     },\n     \"materialIssueDetails\":[\n       {\n\n         \"tenantId\":\"default\",\n         \"material\":{\n           \"id\":\"1\",\n           \"tenantId\":\"default\",\n           \"code\":\"MAT1\",\n           \"name\":\"pensss\",\n           \"description\":\"stationary pen\",\n           \"reorderLevel\":\"2\",\n           \"materialType\":{\n             \"id\":\"1\",\n             \"name\":\"stationary\"\n           },\n           \"baseUom\":{\n             \"id\":\"1\"\n           },\n           \"minQuantity\":\"5\",\n           \"stockingUom\":{\n             \"id\":\"1\"\n           },\n           \"inventoryType\":\"Asset\",\n         \"materialClass\":\"MediumUsage\",\n           \"maxQuantity\":\"9\",\n           \"reorderQuantity\":\"56\",\n             \"purchaseUom\":{\n             \"id\":\"1\"\n           },\n             \"materialControlType\":\"LOTControl\"\n         \n         },\n         \"orderNumber\":\"5\",\n         \"quantityIssued\":5,\n         \"balanceQuantity\":12,\n         \"uom\": {\n           \"id\":\"1\",\n           \"code\":\"CUL\",\n           \"name\":\"dozens\"\n            },\n         \"voucherHeader\":\"vou12367\",\n         \"indentDetail\":{\n           \"id\":\"1\",\n           \"tenantId\":\"default\",\n           \"indentQuantity\":8,\n           \"uom\": null,\n           \"material\":null\n         \n         },\n         \"description\":\"broken pencils\"\n\n       }\n       ]\n    }]\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/materialissues-to/_update?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"materialissues-to",
										"_update"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search Update Transfer Outward",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"12345677\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"rajesh\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":\n    {\n      \"id\":\"1\",\n      \"userName\":\"Bimal\",\n      \"tenantId\":\"default\"\n    }\n\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/materialissues-to/_search?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"materialissues-to",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Transfer Inward receipt",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510290513893,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"7b080ab5-6fdb-4071-9c96-d591d2c8f880\",\n    \"userInfo\": {\n      \"id\": 73\n    }\n  },\n\n  \"transferInwards\": [\n    {\n      \"receivingStore\": {\n        \"code\": \"ST002\"\n      },\n      \"issueNumber\":\"MRIN-2017-14\",\n      \"issueingStore\": {\n        \"code\": \"ST003\"\n      },\n      \"receiptDate\": 1512973979000,\n      \"receiptType\": \"INWARD RECEIPT\",\n      \"supplier\": {\n        \"code\": \"SAP0013\"\n      },\n      \"supplierBillNo\": \"AB-PO-2017\",\n      \"supplierBillDate\": 1512365762000,\n      \"challanNo\": \"CD-LK-2017\",\n      \"challanDate\": 1512365762000,\n      \"description\": \"description for receipt\",\n      \"paymentTerms\": \"paymentTerms for receipt\",\n      \"receivedBy\": \"shashi\",\n      \"designation\": \"ASST-ENG\",\n      \"inspectedBy\": \"shashi\",\n      \"inspectionDate\": 45698756,\n      \"inspectionRemarks\": \"inspection remarks for receipt\",\n      \"receiptDetails\": [\n        {\n          \"material\": {\n            \"code\": \"MAT1\"\n          },\n          \"uom\": {\n            \"code\": \"NOS\"\n          },\n          \"userReceivedQty\": 9,\n          \"userAcceptedQty\": 5,\n          \"unitRate\": 5,\n          \"isScrapItem\":\"true\",\n          \"rejectionRemark\": \"rejection remark for receipt detail\",\n          \"purchaseOrderDetail\": {\n            \"id\": 1\n          },\n         \"receiptDetailsAddnInfo\": [\n            {\n              \"quantity\": 5,\n              \"manufactureDate\": 12345698,\n              \"lotNo\":\"LOT-01\",\n              \"serialNo\": \"SR-02\",\n              \"expiryDate\": 1544509979000,\n              \"batchNo\": \"BA-NO-2017\",\n              \"receivedDate\":1544509979000\n            }\n          ]\n        }\n      ]\n    }\n  ]\n  \n}"
								},
								"url": {
									"raw": "http://localhost:8080/inventory-services/transferinwards/_create?tenantId=default",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"inventory-services",
										"transferinwards",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "default",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Search Transfer inwards",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"12345677\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"rajesh\",\n    \"authToken\": \"{{authToken}}\",\n    \"userInfo\":{\n    \t\"id\":1,\n    \t\"tenantId\":\"default\",\n    \t\"username\":\"abc\"\n    }\n  }\n}\n"
								},
								"url": {
									"raw": "localhost:8080/inventory-services/transferinwards/_search?tenantId=default&status=RECEIPTED",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"inventory-services",
										"transferinwards",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "default",
											"equals": true
										},
										{
											"key": "status",
											"value": "RECEIPTED",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update Transfer inward",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510290513893,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"7b080ab5-6fdb-4071-9c96-d591d2c8f880\",\n    \"userInfo\": {\n      \"id\": 1\n    }\n  },\n  \"transferInwards\": [\n    {\n    \t \"issueNumber\":\"MRIN-2017-14\",\n      \"id\": 100,\n      \"receivingStore\": {\n        \"code\": \"STR\"\n      },\n      \"issueingStore\": {\n        \"code\": \"dd\"\n      },\n      \"mrnNumber\":\"MRN/defa/2017-18/00003\",\n      \"receiptDate\": 1512432086399,\n      \"mrnStatus\": \"ff\",\n      \"receiptType\": \"MISCELLANEOUS RECEIPT\",\n      \"supplier\": {\n        \"code\": \"SUPPLIER\"\n      },\n      \"supplierBillNo\": \"ABCP-PO-2017\",\n      \"supplierBillDate\": 3654799,\n      \"challanNo\": \"CDE-LK-2017\",\n      \"challanDate\": 1512365762000,\n      \"description\": \"description for receipt update\",\n      \"paymentTerms\": \"paymentTerms for receipt update\",\n      \"receivedBy\": \"sanjeev prasad\",\n      \"designation\": \"ASST-ENG1\",\n      \"inspectedBy\": \"ramesh babu\",\n      \"inspectionDate\": 1245698756,\n      \"inspectionRemarks\": \"inspection remarks for receipt update\",\n      \"isScrapItem\":\"true\",\n      \"receiptDetails\": [\n        {\n          \"id\": 372,\n          \"material\": {\n            \"code\": \"MAT1\"\n          },\n          \"uom\": {\n            \"code\": \"NOS\"\n          },\n         \"userReceivedQty\": 9,\n          \"receivedQty\": 29.5,\n          \"acceptedQty\": 11,\n          \"unitRate\": 20,\n          \"rejectionRemark\": \"rejection remark for receipt detail update\",\n          \"purchaseOrderDetail\": {\n            \"id\": 2\n          },\n          \"tenantid\":\"default\",\n          \"receiptDetailsAddnInfo\": [\n            {\n              \"id\": 80,\n              \"quantity\": 5,\n              \"manufactureDate\": 345698,\n              \"lotNo\": \"LOTU-01\",\n              \"serialNo\": \"SRU-02\",\n              \"expiryDate\": 1512825037000,\n              \"receivedDate\":1544509979000,\n              \"batchNo\": \"BAC-NO-2017\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
								},
								"url": {
									"raw": "localhost:8080/inventory-services/transferinwards/_update?tenantId=default",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"inventory-services",
										"transferinwards",
										"_update"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "default",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Scrap",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
											"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
											"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
											"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
											"    postman.setEnvironmentVariable(\"username\",\"uday\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
											"",
											"postman.setNextRequest(\"MDMS_DATA\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"type": "text",
											"value": "{{username}}"
										},
										{
											"key": "password",
											"type": "text",
											"value": "{{password}}"
										},
										{
											"key": "grant_type",
											"type": "text",
											"value": "password"
										},
										{
											"key": "scope",
											"type": "text",
											"value": "read"
										},
										{
											"key": "tenantId",
											"type": "text",
											"value": "{{tenantId}}"
										}
									]
								},
								"url": {
									"raw": "{{url}}/user/oauth/token",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"oauth",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "MDMS_DATA",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"var resBody = JSON.parse(responseBody);",
											"var max = resBody.MdmsRes.inventory.Material.length - 1;",
											"         var rand = 0;",
											"         var materialCode = null;",
											"         var UomCode = null;",
											"         if(max > -1){",
											"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
											"             materialCode = resBody.MdmsRes.inventory.Material[rand].code;",
											"             pm.environment.set(\"materialCode\",materialCode);",
											"             ",
											"             UomCode = resBody.MdmsRes.inventory.Material[rand].baseUom.code;",
											"             pm.environment.set(\"UomCode\",UomCode);",
											"}",
											"",
											"postman.setNextRequest(\"Create Supplier\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               },\n               {\n               \t \"name\":\"Uom\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{url}}/egov-mdms-service/v1/_search",
									"host": [
										"{{url}}"
									],
									"path": [
										"egov-mdms-service",
										"v1",
										"_search"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Supplier",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var name1 = Math.floor(Math.random() * 10000);",
											"",
											"postman.setEnvironmentVariable(\"SupplierCode\",\"SUPPLIERCODE\"+name1);",
											"",
											"",
											"",
											"",
											"",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"postman.setNextRequest(\"Create Pricelists\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"RequestInfo\": {\n   \"apiId\": \"emp\",\n   \"ver\": \"1.0\",\n   \"ts\": \"12345677\",\n   \"action\": \"create\",\n   \"did\": \"1\",\n   \"key\": \"abcdkey\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"rajesh\",\n   \"authToken\": \"{{access_token}}\"\n\n  \n },\n \"suppliers\":\n[  {\n\"tenantId\":\"{{tenantId}}\",\n \t\"type\":\"INDIVIDUAL\",\n \t\"code\":\"{{SupplierCode}}\",\n \t\"active\":\"true\",\n \t\"name\":\"Anand And Sons\",\n \t\"address\":\"btm layout\",\n \t\"status\":\"ACTIVE\",\n \t\"inActiveDate\":\"15436789\",\n \t\"contactNo\":\"0132278956\",\n \t\"faxNo\":\"123788890\",\n \t\"website\":\"http://www.google.com\",\n \t\"email\":\"anand@gmail.com\",\n \t\"description\":\"supplier for cosmetics\",\n \t\"panNo\":\"DFGPV3459D\",\n \t\"tinNo\":\"34676767uiu\",\n \t\"cstNo\":\"34676767uiC\",\n \t\"vatNo\":\"34676767uiV\",\n \t\"gstNo\":\"75AGHFD7890A0Z0\",\n \t\"contactPerson\":\"anand dubay\",\n \t\"contactPersonNo\":\"8388743488\",\n \t\"bankCode\":\"CITI\",\n   \"bankBranch\":\"bankbranch1\",\n \t\"acctNo\":\"3161001500005068\",\n \t\"ifsc\":\"IFSC38899\",\n \t\"micr\":\"MICR983985\"\n \t}\n\n]\n \n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/suppliers/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"suppliers",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Pricelists",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "81c2c6cd-5eb9-48fc-9b0c-3b5a9eb6ed8e",
										"type": "text/javascript",
										"exec": [
											"var name1 = Math.floor(Math.random() * 10000);",
											"postman.setEnvironmentVariable(\"rateContractNumber\",\"rateContractNumber \"+name1);",
											"",
											"var name2 = Math.floor(Math.random() * 10000);",
											"postman.setEnvironmentVariable(\"agreementNumber\",\"agreementNumber \"+name2);",
											"",
											"function randomPreviousDate(){",
											"   var startDate = new Date(2012,0,1).getTime();",
											"   var endDate =  new Date(2015,0,1).getTime();",
											"   var spaces = (endDate - startDate);",
											"   var timestamp = Math.round(Math.random() * spaces);",
											"   timestamp += startDate;",
											"   return new Date(timestamp);",
											"}",
											"",
											"function randomFutureDate(){",
											"   var startDate = new Date().getTime();",
											"   var endDate =  new Date(2019,0,1).getTime();",
											"   var spaces = (endDate - startDate);",
											"   var timestamp = Math.round(Math.random() * spaces);",
											"   timestamp += startDate;",
											"   return new Date(timestamp);",
											"}",
											"",
											"",
											"var PreviousTime = new randomPreviousDate().getTime();",
											"",
											"var FutureTime = new randomFutureDate().getTime();",
											"",
											"pm.environment.set(\"PreviousTime\",PreviousTime);",
											"pm.environment.set(\"FutureTime\",FutureTime);",
											"",
											"",
											"",
											"",
											"",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "35cb5203-2211-4617-8ad9-a40a419a3cee",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"// var requestBody = JSON.parse(request.data);",
											"",
											"// var ResSupplierCode = responseBody.priceLists[0].supplier.code;",
											"// pm.environment.set(\"ResSupplierCode\",ResSupplierCode);",
											"",
											"var unitPrice=responseBody.priceLists[0].priceListDetails[0].ratePerUnit;",
											"pm.environment.set(\"unitPrice\",unitPrice);",
											"",
											"var PriceListId= responseBody.priceLists[0].id;",
											"pm.environment.set(\"PriceListId\",PriceListId);",
											"",
											"postman.setNextRequest(\"Create Store\");",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"priceLists\": [\n    {\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"rateContractNumber\": \"{{rateContractNumber}}\",\n      \"rateContractDate\": 1489224710000,\n      \"agreementNumber\": \"{{agreementNumber}}\",\n      \"agreementDate\": 1491903110000,\n      \"agreementStartDate\": \"{{PreviousTime}}\",\n      \"agreementEndDate\": \"{{FutureTime}}\",\n      \"active\": true,\n      \"fileStoreId\": \"\",\n      \"rateType\": \"Quotation\",\n      \"priceListDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\",\n            \"conversionFactor\": 1\n          },\n          \"ratePerUnit\": \"12\",\n          \"quantity\": \"11\"\n        }\n      ],\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1512988123880,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/pricelists/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"pricelists",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								},
								"description": "create pricelist"
							},
							"response": []
						},
						{
							"name": "Search Store",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "325d4451-5545-4e53-b259-4e20ff646502",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var resBody = JSON.parse(responseBody);",
											"",
											"",
											"var max = resBody.stores.length - 1;",
											"         var rand = 0;",
											"         var storeCode = null;",
											"         if(max > -1){",
											"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
											"            //  materialCode = resBody.MdmsRes.inventory.Material[rand].code;",
											"            //  pm.environment.set(\"materialCode\",materialCode);",
											"             storeCode = resBody.stores[rand].code;",
											"             pm.environment.set(\"storeCode\",storeCode);",
											"}",
											"",
											"// var ResStoreCode=responseBody.stores[0].code;",
											"// pm.environment.set(\"ResStoreCode\",ResStoreCode);",
											"",
											"postman.setNextRequest(\"Create Indent\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n        \"id\":2\n      }\n }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/stores/_search?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"stores",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Non indent PO",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "1201ca93-dae2-4ff0-9ccf-d59a9e115434",
										"type": "text/javascript",
										"exec": [
											"var today = new Date().getTime();",
											"pm.environment.set(\"today\", today);",
											"",
											"// var orderQuantity = pm.environment.get(\"nonIndentQuantity\");",
											"// var rQ = (orderQuantity) - 1;",
											"// pm.environment.set(\"receivedQuantity\", rQ);",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "da493594-a3dd-4b05-8ea2-dc98a640148d",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody=JSON.parse(responseBody);",
											"// var requestBody=JSON.parse(request.data);",
											"",
											"var poDetailsId=responseBody.purchaseOrders[0].purchaseOrderDetails[0].id;",
											"pm.environment.set(\"poDetailsId\",poDetailsId);",
											"",
											"var poId=responseBody.purchaseOrders[0].id;",
											"pm.environment.set(\"poId\",poId);",
											"",
											"var userQuantity=responseBody.purchaseOrders[0].purchaseOrderDetails[0].userQuantity;",
											"pm.environment.set(\"userQuantity\",userQuantity);",
											"",
											"postman.setNextRequest(\"Create Material Receipt Note\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1513930422037,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \"purchaseOrders\": [\n    {\n      \"store\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"purchaseType\": \"Non Indent\",\n      \"tenantId\": \"{{tenantId}}\",\n      \"purchaseOrderDate\": \"{{today}}\",\n      \"rateType\": \"Quotation\",\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"purchaseOrderDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"material\": {\n            \"tenantId\": \"{{tenantId}}\",\n            \"code\": \"{{materialCode}}\",\n            \"name\": \"SEAL\",\n            \"description\": \"Seal\",\n            \"materialType\": {\n              \"code\": \"MAT1\"\n            },\n            \"baseUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"purchaseUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"expenseAccount\": {\n              \"glCode\": \"44001\"\n            },\n            \"minQuantity\": 2,\n            \"maxQuantity\": 20,\n            \"stockingUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"reorderLevel\": 10,\n            \"reorderQuantity\": 12,\n            \"lotControl\": false,\n            \"shelfLifeControl\": false,\n            \"serialNumber\": false\n          },\n          \"uom\": {\n            \"id\": \"1\",\n            \"tenantId\": \"default\",\n            \"code\": \"{{UomCode}}\",\n            \"description\": \"Numbers\",\n            \"baseUom\": true,\n            \"uomCategory\": \"QUANTITY\",\n            \"fromDate\": 1508740856,\n            \"toDate\": 1893436200,\n            \"conversionFactor\": 1\n          },\n          \"priceList\": {\n            \"id\": \"{{PriceListId}}\",\n            \"tenantId\": \"{{tenantId}}\",\n            \"supplier\": {\n              \"id\": \"100\",\n              \"tenantId\": \"default\",\n              \"type\": \"INDIVIDUAL\",\n              \"code\": \"{{SupplierCode}}\",\n              \"name\": \"Anand And Sons\",\n              \"address\": \"btm layout\",\n              \"status\": \"ACTIVE\",\n              \"inActiveDate\": 15436789,\n              \"active\": true,\n              \"contactNo\": \"0132278956\",\n              \"faxNo\": \"123788890\",\n              \"website\": \"http://www.google.com\",\n              \"email\": \"anand@gmail.com\",\n              \"description\": \"supplier for cosmetics\",\n              \"panNo\": \"DFGPV3459D\",\n              \"tinNo\": \"34676767uiu\",\n              \"cstNo\": \"34676767uiC\",\n              \"vatNo\": \"34676767uiV\",\n              \"gstNo\": \"75AGHFD7890A0Z0\",\n              \"contactPerson\": \"anand dubay\",\n              \"contactPersonNo\": \"8388743488\",\n              \"bankCode\": \"SBI\",\n              \"bankBranch\": \"bankbranch1\",\n              \"acctNo\": \"3161001500005068\",\n              \"ifsc\": \"IFSC38899\",\n              \"micr\": \"MICR983985\",\n              \"auditDetails\": {\n                \"createdBy\": \"22534\",\n                \"lastModifiedBy\": \"22534\",\n                \"createdTime\": 12345677,\n                \"lastModifiedTime\": 12345677\n              }\n            },\n            \"rateType\": \"Quotation\",\n            \"rateContractNumber\": \"{{rateContractNumber}}\",\n            \"rateContractDate\": 1489224710000,\n            \"agreementNumber\": \"DEC11AN1\",\n            \"agreementDate\": 1491903110000,\n            \"agreementStartDate\": 1328367398850,\n            \"agreementEndDate\": 1527771650467,\n            \"active\": true,\n            \"fileStoreId\": \"\",\n            \"priceListDetails\": [\n              {\n                \"id\": \"201\",\n                \"material\": {\n                  \"code\": \"MAT1\"\n                },\n                \"fromDate\": 1328367398850,\n                \"toDate\": 1527771650467,\n                \"ratePerUnit\": 12,\n                \"quantity\": 11,\n                \"uom\": {\n                  \"id\": \"1\",\n                  \"tenantId\": \"default\",\n                  \"code\": \"{{UomCode}}\",\n                  \"description\": \"Numbers\",\n                  \"baseUom\": true,\n                  \"uomCategory\": \"QUANTITY\",\n                  \"fromDate\": 1508740856,\n                  \"toDate\": 1893436200,\n                  \"conversionFactor\": 1\n                },\n                \"active\": true,\n                \"auditDetails\": {\n                  \"createdBy\": \"22534\",\n                  \"lastModifiedBy\": \"22534\",\n                  \"createdTime\": 1512988123880,\n                  \"lastModifiedTime\": 1512988123880\n                }\n              }\n            ],\n            \"auditDetails\": {\n              \"createdBy\": \"22534\",\n              \"lastModifiedBy\": \"22534\",\n              \"createdTime\": 1512988123880,\n              \"lastModifiedTime\": 1512988123880\n            }\n          },\n          \"unitPrice\": 12,\n          \"userQuantity\": 61,\n          \"orderQuantity\": 0,\n          \"tenderQuantity\" : 0, \n          \"receivedQuantity\": 0,\n          \"usedQuantity\": 0\n        }\n      ]\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/purchaseorders/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"purchaseorders",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Material Receipt Note",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8f30dca3-fdc1-409a-a0ae-97ef82490ea8",
										"type": "text/javascript",
										"exec": [
											"var userReceivedQty = pm.environment.get(\"userQuantity\");",
											"var rQ = (userReceivedQty) - 1;",
											"pm.environment.set(\"userReceivedQty\", rQ);",
											"",
											"",
											"var userAcceptedQty = pm.environment.get(\"userQuantity\");",
											"var rQ = (userAcceptedQty) - 2;",
											"pm.environment.set(\"userAcceptedQty\", rQ);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d7329cb9-2491-4a6a-a3e0-9a9cfc5ff9c1",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"",
											"var materialReceiptMRN = responseBody.MaterialReceipt[0].mrnNumber;",
											"pm.environment.set(\"materialReceiptMRN\",materialReceiptMRN);",
											"",
											"postman.setNextRequest(\"Create Material Issue\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510290513893,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\": {\n      \"id\": 73\n    }\n  },\n  \"materialReceipt\": [\n    {\n      \"receivingStore\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"receiptDate\": \"{{today}}\",\n      \"receiptType\": \"PURCHASE RECEIPT\",\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"supplierBillNo\": \"AB-PO-2017\",\n      \"supplierBillDate\": 1512365762000,\n      \"challanNo\": \"CD-LK-2017\",\n      \"challanDate\": 1512365762000,\n      \"description\": \"description for receipt\",\n      \"paymentTerms\": \"paymentTerms for receipt\",\n      \"receivedBy\": \"Bimal\",\n      \"designation\": \"ASST-ENG\",\n      \"inspectedBy\": \"ramesh\",\n      \"inspectionDate\": 45698756,\n      \"inspectionRemarks\": \"inspection remarks for receipt\",\n      \"receiptDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\"\n          },\n          \"userReceivedQty\": \"{{userReceivedQty}}\",\n          \"userAcceptedQty\": \"{{userAcceptedQty}}\",\n          \"unitRate\": 5,\n          \"isScrapItem\":\"true\",\n          \"rejectionRemark\": \"rejection remark for receipt detail\",\n          \"purchaseOrderDetail\": {\n            \"id\": \"{{poDetailsId}}\"\n          },\n         \"receiptDetailsAddnInfo\": [\n            {\n              \"userQuantity\": \"{{userAcceptedQty}}\",\n              \"manufactureDate\": 12345698,\n              \"lotNo\":\"LOT-01\",\n              \"serialNo\": \"SR-02\",\n              \"expiryDate\": 1544509979000,\n              \"batchNo\": \"BA-NO-2017\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/receiptnotes/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"receiptnotes",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								},
								"description": "Create Material Receipt Note"
							},
							"response": []
						},
						{
							"name": "Non Indent Material Issue ",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3e2cddfa-d2d1-4cca-aeff-da14f5226b3d",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"",
											"var issueNumber = responseBody.materialIssues[0].issueNumber;",
											"pm.environment.set(\"issueNumber\",issueNumber);",
											"",
											"var ResIssueNumber = responseBody.materialIssues[0].issueNumber;",
											"pm.environment.set(\"ResIssueNumber\",ResIssueNumber);",
											"",
											"var ResmaterialIssueDetails = responseBody.materialIssues[0].materialIssueDetails[0].id;",
											"pm.environment.set(\"ResmaterialIssueDetails\",ResmaterialIssueDetails);",
											"",
											"postman.setNextRequest(\"Update Material Issue\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"12345677\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"rajesh\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":\n    {\n      \"id\":\"1\",\n      \"userName\":\"bimal\",\n      \"tenantId\":\"{{tenantId}}\"\n    }\n\n  },\n  \"materialIssues\":[\n    {\n    \"tenantId\":\"{{tenantId}}\",\n    \"materialIssueStatus\":\"CREATED\",\n    \"issueType\":\"NONINDENTISSUE\",\n    \"issuePurpose\":\"WRITEOFFORSCRAP\",\n    \"fromStore\":{\n      \"id\":\"1\",\n      \"code\":\"{{storeCode}}\",\n      \"name\":\"manyavars\",\n      \"officeLocation\":{\n      \t\"code\":\"bchb\"\n      },\n        \"description\":\"njdcfjdjc\",\n        \"billingAddress\":\"djsadjsadxj\",\n          \"department\":{\n        \"id\":\"1\",\n        \"name\":\"clothes\"\n      },\n      \"deliveryAddress\":\"jhvjdshjdsjc\",\n      \"storeInCharge\":{\n        \"code\":\"storeincharge1\"\n      },\n      \"tenantId\":\"{{tenantId}}\"\n    },\n    \"toStore\":  null,\n    \"issueDate\":\"{{today}}\",\n    \"description\":\"this is a not defect\",\n    \"designation\":\"issue inspector\",\n    \"indent\":null,\n     \"issuedToEmployee\":\"shipra\",\n     \"issuedToDesignation\":\"assistant\",\n     \"supplier\":{\n       \"id\":\"1\",\n       \"tenantId\":\"default\",\n       \"type\":\"OTHERS\",\n       \"code\":\"{{SupplierCode}}\",\n       \"name\":\"ANAND\",\n       \"ifsc\":\"6767676787\",\n       \"contactNo\":\"7878988899\",\n       \"bankCode\":\"CITI\",\n       \"address\":\"jjdshcfjdh\",\n       \"acctNo\":\"9844989489\"\n   \n     },\n     \"materialIssueDetails\":[\n       {\n     \n         \"tenantId\":\"default\",\n         \"material\":{\n           \"id\":\"1\",\n           \"tenantId\":\"default\",\n           \"code\":\"{{materialCode}}\",\n           \"name\":\"penssss\",\n           \"scrapable\":false,\n           \"description\":\"stationary pen\",\n           \"reorderLevel\":\"2\",\n           \"materialType\":{\n             \"id\":\"1\",\n             \"name\":\"stationary\"\n           },\n           \"baseUom\":{\n             \"id\":\"1\"\n           },\n           \"minQuantity\":\"5\",\n           \"stockingUom\":{\n             \"id\":\"1\"\n           },\n           \"inventoryType\":\"Asset\",\n           \"materialClass\":\"MediumUsage\",\n           \"maxQuantity\":\"9\",\n           \"reorderQuantity\":\"56\",\n             \"purchaseUom\":{\n             \"id\":\"1\"\n           },\n             \"materialControlType\":\"LOTControl\"\n         \n         },\n         \"orderNumber\":\"5\",\n         \"userQuantityIssued\":\"3\",\n         \"uom\": {\n           \"id\":\"1\",\n           \"code\":\"{{UomCode}}\",\n           \"name\":\"dozens\"\n            },\n         \"voucherHeader\":\"vou123\",\n         \"indentDetail\":null,\n         \"description\":\"broken pens\"\n      \n       }\n       ]\n    }]\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/materialissues-ni/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"materialissues-ni",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search Material Issue",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8e6ed1d6-dcd4-4397-b315-47d3a9a4262c",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"",
											"var issueDate = responseBody.materialIssues[0].issueDate;",
											"pm.environment.set(\"issueDate\",issueDate);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n        \"id\":2\n      }\n }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/materialissues-ni/_search?tenantId={{tenantId}}&issueNoteNumber={{issueNumber}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"materialissues-ni",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "issueNoteNumber",
											"value": "{{issueNumber}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update Material Issue",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "74ac422f-6274-4a73-bbe4-32627d67c224",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "79c12d64-7c20-43e7-9321-ac305f98d17b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"12345677\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"rajesh\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":\n    {\n      \"id\":\"1\",\n      \"userName\":\"mansi\",\n      \"tenantId\":\"{{tenantId}}\"\n    }\n\n  },\n  \"materialIssues\":[\n    {\n    \"materialIssueStatus\":\"APPROVED\",\n     \"issueType\":\"NONINDENTISSUE\",\n    \"tenantId\":\"{{tenantId}}\",\n     \"issueNumber\": \"{{ResIssueNumber}}\",\n      \"issuePurpose\":\"WRITEOFFORSCRAP\",\n    \"fromStore\":{\n      \"id\":\"1\",\n      \"code\":\"{{storeCode}}\",\n      \"officeLocation\":\n      {\n      \t\"code\":\"office\"\n      },\n      \"name\":\"manyavars\",\n        \"description\":\"njdcfjdjc\",\n        \"billingAddress\":\"djsadjsadxj\",\n          \"department\":{\n        \"id\":\"1\",\n        \"name\":\"clothes\"\n      },\n      \"deliveryAddress\":\"jhvjdshjdsjc\",\n      \"storeInCharge\":{\n        \"code\":\"storeincharge1\"\n      },\n      \"tenantId\":\"{{tenantId}}\"\n    },\n    \"toStore\":  null,\n    \n  \n    \"description\":\"this is a not defect\",\n    \"designation\":\"issue inspector\",\n    \"indent\":null,\n     \"issuedToEmployee\":\"aastha\",\n     \"issuedToDesignation\":\"assistant\",\n     \"issueDate\":\"{{issueDate}}\",\n     \"supplier\":{\n       \"id\":\"1\",\n       \"tenantId\":\"{{tenantId}}\",\n       \"type\":\"OTHERS\",\n       \"code\":\"{{SupplierCode}}\",\n       \"name\":\"ANAND\",\n       \"ifsc\":\"6767676787\",\n       \"contactNo\":\"7878988899\",\n       \"bankCode\":\"CITI\",\n       \"address\":\"jjdshcfjdh\",\n       \"acctNo\":\"9844989489\"\n   \n     },\n     \"materialIssueDetails\":[\n       {\n         \"id\":\"{{ResmaterialIssueDetails}}\",\n         \"mrnNumber\":\"{{materialReceiptMRN}}\",\n         \"tenantId\":\"{{tenantId}}\",\n         \"material\":{\n           \"id\":\"1\",\n           \"tenantId\":\"{{tenantId}}\",\n           \"code\":\"MAT1\",\n           \"name\":\"penssss\",\n           \"scrapable\":false,\n           \"description\":\"stationary pen\",\n           \"reorderLevel\":\"2\",\n           \"materialType\":{\n             \"id\":\"1\",\n             \"name\":\"stationary\"\n           },\n           \"baseUom\":{\n             \"id\":\"1\"\n           },\n           \"minQuantity\":\"5\",\n           \"stockingUom\":{\n             \"id\":\"1\"\n           },\n           \"inventoryType\":\"Asset\",\n         \"materialClass\":\"MediumUsage\",\n           \"maxQuantity\":\"9\",\n           \"reorderQuantity\":\"56\",\n             \"purchaseUom\":{\n             \"id\":\"1\"\n           },\n             \"materialControlType\":\"LOTControl\"\n         \n         },\n         \"orderNumber\":\"5\",\n         \"userQuantityIssued\":\"3\",\n         \"uom\": {\n           \"id\":\"1\",\n           \"code\":\"{{UomCode}}\",\n           \"name\":\"dozens\"\n            },\n         \"voucherHeader\":\"vou123\",\n         \"indentDetail\":null,\n         \"description\":\"broken pens\"\n      \n       }\n       ]\n    }]\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/materialissues-ni/_update?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"materialissues-ni",
										"_update"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Scrap Create",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13a0a0f8-48fb-4746-8484-c9a6cdc87837",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"",
											"var scrapNumber = responseBody.scraps[0].scrapNumber;",
											"pm.environment.set(\"scrapNumber\",scrapNumber);",
											"",
											"var scrapDetailId = responseBody.scraps[0].scrapDetails[0].id;",
											"pm.environment.set(\"scrapDetailId\",scrapDetailId);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"scraps\": [\n    {\n    \t\t\"store\":{\n    \t\t\"code\":\"{{storeCode}}\",\n    \t\t\"name\":\"Store123\"\n    \t},\n\t      \"scrapDate\":\"1510117560000\",\n\t      \"scrapNumber\":\"abc\",\n          \"userReceivedQty\": \"4\",\n          \"description\":\"aaa\",\n          \"unitRate\": \"4\",\n          \"remarks\": \"ABCD\",\n          \"scrapDetails\": [\n            {\n            \t\"lotNumber\":123,\n              \"scrapReason\": \"DAMAGED\",\n              \"quantity\": \"5\",\n              \"scrapValue\":1,\n              \"userQuantity\":3,\n              \"existingValue\":5,\n              \"disposalQuantity\":\"5\"\n            }\n          ]\n        }\n      ],\n      \"tenantId\": \"{{tenantId}}\",\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510549656506,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{  \n         \"id\":1,\n         \"userName\":\"testUser\",\n         \"name\":\"test user\"\n      }\n   \n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/scraps/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"scraps",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Scrap Search",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510400603623,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{  \n         \"id\":1,\n         \"userName\":\"testUser\",\n         \"name\":\"test user\"\n      }\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/scraps/_search?tenantId={{tenantId}}&scrapNumber={{scrapNumber}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"scraps",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "scrapNumber",
											"value": "{{scrapNumber}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Scrap Update",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"scraps\": [\n    {\n\t    \"id\":\"120\",\n    \t\"store\":{\n    \t\t\"code\":\"{{storeCode}}\",\n    \t\t\"name\":\"Store123\"\n\n    \t},\n    \t\"description\":\"update\",\n      \"scrapDate\":\"1510117560000\",\n      \"scrapNumber\":\"{{scrapNumber}}\",\n          \"userReceivedQty\": \"8\",\n          \"unitRate\": \"4\",\n          \"remarks\": \"ABCD\",\n          \"scrapDetails\": [\n            {\n            \t\"id\":\"{{scrapDetailId}}\",\n            \t \"scrapReason\": \"DAMAGED\",\n              \"quantity\": \"5\",\n              \"scrapValue\":1,\n              \"userQuantity\":56,\n              \"existingValue\":5,\n              \"disposalQuantity\":\"5\"\n            }\n          ]\n        }\n      ],\n      \"tenantId\": \"{{tenantId}}\",\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510549656506,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{  \n         \"id\":1,\n         \"userName\":\"testUser\",\n         \"name\":\"test user\"\n      }\n   \n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/scraps/_update?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"scraps",
										"_update"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}