{
	"info": {
		"name": "eGov-Works_Spillover_Flow",
		"_postman_id": "dace6c0a-4f29-5e8e-16c3-53dc29f89ddc",
		"description": "[WIP] Spillover Work starts from Abstract Estimate upto Work order",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "1b9b754a-0bb9-4bc1-b15e-81e0c51e660a",
						"type": "text/javascript",
						"exec": [
							"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
							"    postman.setEnvironmentVariable(\"username\",\"clerk\");",
							"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
							"}",
							"",
							"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
							"    postman.setEnvironmentVariable(\"username\",\"W001\");",
							"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
							"}"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5eecd5de-3d52-4b1e-8629-aca020b3a571",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
							"",
							"postman.setNextRequest(\"WorksMdmsData\");"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Authorization",
						"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text"
						},
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "read",
							"type": "text"
						},
						{
							"key": "tenantId",
							"value": "{{tenantId}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user/oauth/token",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"oauth",
						"token"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "WorksMdmsData",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "25ac6a1f-4414-4bf5-9016-40dc821e7cc7",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"var uom = jsonData.MdmsRes[\"common-masters\"].Uom;",
							"var dep = jsonData.MdmsRes[\"common-masters\"].Department;",
							"var typeOfWork = jsonData.MdmsRes.works.TypeOfWork;",
							"var scheduleCategory = jsonData.MdmsRes.works.ScheduleCategory;",
							"var referenceType = jsonData.MdmsRes.works.ReferenceType;",
							"var budgetGroup = jsonData.MdmsRes.works.BudgetGroup;",
							"var modeOfAllotment = jsonData.MdmsRes.works.ModeOfAllotment;",
							"var natureOfWork = jsonData.MdmsRes.works.NatureOfWork;",
							"",
							"var uomCode = uom[Math.floor(Math.random() * uom.length)];",
							"var depCode = dep[Math.floor(Math.random() * dep.length)];",
							"var typeOfWorkCode = typeOfWork[Math.floor(Math.random() * typeOfWork.length)];",
							"var scheduleCategoryCode = scheduleCategory[Math.floor(Math.random() * scheduleCategory.length)];",
							"var referenceTypeCode = referenceType[Math.floor(Math.random() * referenceType.length)];",
							"var budgetGroupCode = budgetGroup[Math.floor(Math.random() * budgetGroup.length)];",
							"var modeOfAllotmentCode = modeOfAllotment[Math.floor(Math.random() * modeOfAllotment.length)];",
							"var natureOfWorkCode = natureOfWork[Math.floor(Math.random() * natureOfWork.length)];",
							"",
							"pm.environment.set(\"uom\", uomCode.code);",
							"pm.environment.set(\"dep\", depCode.code);",
							"pm.environment.set(\"typeCode\", typeOfWorkCode.code);",
							"pm.environment.set(\"scheduleCategory\", scheduleCategoryCode.code);",
							"pm.environment.set(\"referenceType\", referenceTypeCode.code);",
							"pm.environment.set(\"budgetGroup\", budgetGroupCode.name);",
							"pm.environment.set(\"modeOfAllotment\", modeOfAllotmentCode.code);",
							"pm.environment.set(\"natureOfWork\", natureOfWorkCode.name);",
							"",
							"postman.setNextRequest(\"Create sAE\");"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"works-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\",\n      \"tenantId\": \"{{tenantId}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"works\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"ScheduleCategory\"\n               },\n                {  \n                 \"name\":\"TypeOfWork\"\n               },\n               {\n               \"name\": \"Overhead\"\n               },\n               {\n                 \"name\": \"Remarks\"\n               },\n               {\n                 \"name\": \"ReferenceType\"\n               },\n               {\n                 \"name\": \"BudgetGroup\"\n               },\n               {\n                 \"name\": \"NatureOfWork\"\n               },\n               {\n                 \"name\": \"ModeOfAllotment\"\n               },\n               {\n                 \"name\": \"ContractorClass\"\n               },\n               {\n                 \"name\": \"WorksStatus\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               },\n               {\n                  \"name\":\"Uom\"\n               }\n            ]\n         }\n      ]\n   }\n}"
				},
				"url": {
					"raw": "{{url}}/egov-mdms-service/v1/_search",
					"host": [
						"{{url}}"
					],
					"path": [
						"egov-mdms-service",
						"v1",
						"_search"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Create sAE",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2aee983f-24d8-4c41-9b7e-915d8deb02b8",
						"type": "text/javascript",
						"exec": [
							"var num1 = Math.floor((Math.random() * 10000) + 1);",
							"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
							"var today = new Date();",
							"var epoch = Math.round(today.getTime()/1000);",
							"var year = today.getFullYear();",
							"var estimateAmount = [1000, 10000, 100000];",
							"",
							"pm.environment.set(\"abstractEstimateNumber\", \"AE/ENG/\"+num1);",
							"pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
							"pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
							"pm.environment.set(\"financialSanctionNumber\", \"FS-\"+year+\"-\"+num1);",
							"pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);",
							"pm.environment.set(\"sProjectCode\", \"WIN-\"+year+\"-\"+num1);"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e66e82af-b8d7-4d6b-a73b-de371323bb05",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"pm.environment.set(\"sAEId\", jsonData.abstractEstimates[0].id);",
							"pm.environment.set(\"sAEdetailsId\", jsonData.abstractEstimates[0].abstractEstimateDetails[0].id);",
							"pm.environment.set(\"sAEstatus\", jsonData.abstractEstimates[0].status.code);",
							"",
							"pm.test(\"Abstract Estimate Number generated\", function () {",
							"pm.expect(pm.environment.get(\"abstractEstimateNumber\")).to.include(jsonData.abstractEstimates[0].abstractEstimateNumber);",
							"});",
							"pm.test(\"Abstract Estimate ID\", function () {",
							"pm.expect(pm.environment.get(\"sAEId\")).to.include(jsonData.abstractEstimates[0].id);",
							"});",
							"postman.setNextRequest(\"Search sAE\");"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"abstractEstimateNumber\": \"{{abstractEstimateNumber}}\",\n      \"dateOfProposal\": 1483228800000,\n      \"subject\": \"Spillover AE - Project Estimation\",\n      \"referenceType\": {\n        \"code\":\"{{referenceType}}\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Spillover AE Project Estimation for the proposed work\",\n      \"documentDetails\": [],\n      \"assetDetails\": [],      \n      \"budgetGroup\": {\n        \"name\": \"{{budgetGroup}}\"\n      },\n      \"department\": {\n        \"code\": \"{{dep}}\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"{{modeOfAllotment}}\"\n      },\n      \"fund\": {\n        \"code\": \"1\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": 1483228800000,\n      \"adminSanctionBy\": {\n        \"userName\": \"clerk\"\n      },\n      \"financialSanctionNumber\": \"{{financialSanctionNumber}}\",\n      \"financialSanctionDate\": 1483228800000,\n      \"financialSanctionBy\": {\n        \"userName\": \"clerk\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"{{typeCode}}\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"{{natureOfWork}}\"\n      },\n      \"ward\": {\n        \"code\": \"172\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": 1483228800000,\n      \"spillOverFlag\": true,\n      \"detailedEstimateCreated\": true,\n      \"workOrderCreated\": true,\n      \"billsCreated\": true,\n      \"implementationPeriod\": 5,\n      \"fundAvailable\": true,\n      \"fundSanctioningAuthority\": \"Municipal\",\n      \"pmcRequired\": false,\n      \"pmcType\": \"pmc type\",\n      \"pmcName\":{\n        \"code\": \"GRADE-A1\"\n      },\n      \"workProposedAsPerDP\": false,\n      \"dpRemarks\": \"Dp remarks\",\n      \"landAssetRequired\": true,\n      \"noOfLands\": 10,\n      \"otherAssetSpecificationRemarks\": \"Other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Hospital Building Construction\",\n          \"estimateAmount\": 1000,\n          \"grossAmountBilled\": 900,\n      \"projectCode\": {\n            \"code\": \"{{sProjectCode}}\"\n         }          \n        }\n      ]\n    }\n  ]\n}"
				},
				"url": {
					"raw": "{{url}}/works-estimate/v1/abstractestimates/_create",
					"host": [
						"{{url}}"
					],
					"path": [
						"works-estimate",
						"v1",
						"abstractestimates",
						"_create"
					]
				},
				"description": "Create APi for Data entry type of work estimation"
			},
			"response": []
		},
		{
			"name": "Search sAE",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6c4cab20-fd37-4e81-ba70-a50d50c4a6c3",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"pm.environment.set(\"sEstimateAmount\", jsonData.abstractEstimates[0].abstractEstimateDetails[0].estimateAmount);",
							"pm.environment.set(\"sProjectCode\", jsonData.abstractEstimates[0].abstractEstimateDetails[0].projectCode.code);",
							"pm.environment.set(\"sNameOfWork\", jsonData.abstractEstimates[0].abstractEstimateDetails[0].nameOfWork);",
							"",
							"pm.test(\"Spillover AE status is Admin Sanctioned\", function () {",
							"    pm.expect(\"ADMINISTRATIVE_SANCTIONED\").to.include(jsonData.abstractEstimates[0].status.code);",
							"    pm.environment.set(\"sAEstatus\", jsonData.abstractEstimates[0].status.code);",
							"});",
							"pm.test(\"Abstract Estimate Number matches\", function () {",
							"pm.expect(pm.environment.get(\"abstractEstimateNumber\")).to.include(jsonData.abstractEstimates[0].abstractEstimateNumber);",
							"});",
							"pm.test(\"Abstract Estimate ID matches\", function () {",
							"pm.expect(pm.environment.get(\"sAEId\")).to.include(jsonData.abstractEstimates[0].id);",
							"});",
							"postman.setNextRequest(\"Create sDE\");"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"requestInfo\": {\n    \"action\": \"search\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\"\n  }\n}"
				},
				"url": {
					"raw": "{{url}}/works-estimate/v1/abstractestimates/_search?tenantId={{tenantId}}&ids={{sAEId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"works-estimate",
						"v1",
						"abstractestimates",
						"_search"
					],
					"query": [
						{
							"key": "tenantId",
							"value": "{{tenantId}}",
							"equals": true
						},
						{
							"key": "ids",
							"value": "{{sAEId}}",
							"equals": true
						}
					]
				},
				"description": "Search AE for Spillover"
			},
			"response": []
		},
		{
			"name": "Create sDE",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "16059a6b-e8ad-498f-a09a-b2a43615c2fb",
						"type": "text/javascript",
						"exec": [
							"var num1 = Math.floor((Math.random() * 10000) + 1);",
							"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
							"var today = new Date();",
							"var epoch = Math.round(today.getTime()/1000);",
							"var year = today.getFullYear();",
							"",
							"",
							"pm.environment.get(\"sProjectCode\");",
							"pm.environment.get(\"sEstimateAmount\");",
							"pm.environment.get(\"sNameOfWork\");",
							"pm.environment.set(\"sDENum\", \"Spillover/DE/ENG/\"+num1);",
							"pm.environment.set(\"sDETechSanNum\", \"Spillover/DE/TS/\"+num1);",
							"pm.environment.set(\"sDEAdnSanNum\", \"Spillover/DE/ADN/\"+num1);",
							"pm.environment.get(\"sorCode\", \"sorCode\");",
							"pm.environment.get(\"sorId\", \"sorId\");"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "fd60a11d-ad06-46c8-b72c-b12b967365dc",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"var jsonData = JSON.parse(responseBody);",
							"var workValue = jsonData.detailedEstimates[0].workValue;",
							"var estimateValue = jsonData.detailedEstimates[0].estimateValue;",
							"var activityAmount = jsonData.detailedEstimates[0].estimateActivities[0].estimateRate;",
							"",
							"pm.environment.set(\"sDEstatus\", jsonData.detailedEstimates[0].status.code);",
							"pm.environment.set(\"sDEId\", jsonData.detailedEstimates[0].id);",
							"postman.setNextRequest(\"Search sDE\");"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"RequestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"1427784646000\",\n    \"requesterId\": \"clerk\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"detailedEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"estimateNumber\": \"{{sDENum}}\",\n      \"estimateDate\": 1483315200000,\n      \"nameOfWork\": \"{{sNameOfWork}}\",\n      \"description\": \"Spillover Detailed Estimation for the proposed work\",\n      \"department\": {\n        \"code\": \"{{dep}}\"\n      },\n      \"adminSanctionNumber\": \"{{sDEAdnSanNum}}\",\n      \"adminSanctionDate\": 1483315200000,\n      \"workValue\": 900,\n      \"estimateValue\": 1000,\n      \"projectCode\": {\n        \"code\": \"{{sProjectCode}}\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"EProcurement\"\n      },\n      \"worksType\": {\n        \"code\": \"Buildings\"\n      },\n      \"worksSubtype\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"{{natureOfWork}}\"\n      },\n      \"ward\": {\n        \"code\": \"172\"\n      },\n      \"location\": \"Roha, MH\",\n      \"workCategory\": \"NON_SLUM\",\n      \"workOrderCreated\": true,\n      \"billsCreated\": true,\n      \"spillOverFlag\": true,\n      \"abstractEstimateDetail\": {\n        \"tenantId\": \"{{tenantId}}\",\n        \"id\": \"{{sAEId}}\",\n        \"nameOfWork\": \"{{sNameOfWork}}\",\n        \"estimateAmount\": \"{{sEstimateAmount}}\",\n        \"projectCode\": {\n          \"code\": \"{{sProjectCode}}\"\n        }\n      },\n      \"documentDetails\": [],\n      \"assets\": [],\n      \"multiYearEstimates\": [],\n      \"estimateActivities\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"scheduleOfRate\": {\n            \"id\": \"fbbba5b04c254d65aeaafefe63c48105\",\n            \"tenantId\": \"{{tenantId}}\",\n            \"code\": \"SOR111\"\n          },\n          \"nonSor\": null,\n          \"uom\": {\n            \"code\": \"{{uom}}\"\n          },\n          \"unitRate\": 225,\n          \"estimateRate\": 225,\n          \"quantity\": 2,\n          \"serviceTaxPerc\": 0,\n          \"revisionType\": \"NON_TENDERED_ITEM\",\n          \"estimateMeasurementSheets\": [\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"slNo\": 1,\n              \"identifier\": \"A\",\n              \"remarks\": \"Sheet 1: with SOR\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1\n            },\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"slNo\": 2,\n              \"identifier\": \"A\",\n              \"remarks\": \"Sheet 2: with SOR\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1\n            }\n          ],\n          \"deleted\": false\n        },\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"scheduleOfRate\": null,\n          \"nonSor\": {\n            \"tenantId\": \"{{tenantId}}\",\n            \"description\": \"Man Power\",\n            \"uom\": {\n              \"code\": \"NOS\"\n            },\n            \"deleted\": false\n          },\n          \"uom\": {\n            \"code\": \"NOS\"\n          },\n          \"unitRate\": 225,\n          \"quantity\": 2,\n          \"estimateRate\": 225,\n          \"serviceTaxPerc\": 0,\n          \"revisionType\": \"NON_TENDERED_ITEM\",\n          \"estimateMeasurementSheets\": [\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"slNo\": 1,\n              \"identifier\": \"A\",\n              \"remarks\": \"Sheet 1: with NON-SOR\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1\n            },\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"slNo\": 2,\n              \"identifier\": \"A\",\n              \"remarks\": \"Sheet 2: with NON-SOR\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1\n            }\n          ],\n          \"deleted\": false\n        }\n      ],\n      \"estimateOverheads\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"overhead\": {\n            \"accountCode\": \"123\",\n            \"name\": \"TAXFake\",\n            \"code\": \"TAXFake\",\n            \"tenantId\": \"{{tenantId}}\"\n          },\n          \"amount\": 100\n        }\n      ],\n      \"detailedEstimateDeductions\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"chartOfAccounts\": {\n            \"glcode\": \"1981\"\n          },\n          \"amount\": 50\n        }\n      ],\n      \"estimateTechnicalSanctions\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"technicalSanctionNumber\": \"{{sDETechSanNum}}\",\n          \"technicalSanctionDate\": 1483315200000,\n          \"technicalSanctionBy\": {\n            \"userName\": \"clerk\"\n          }\n        }\n      ],\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUP\"\n      },\n      \"budgetGroup\": {\n        \"name\": \"{{budgetGroup}}\"\n      }\n    }\n  ]\n}"
				},
				"url": {
					"raw": "{{url}}/works-estimate/v1/detailedestimates/_create",
					"host": [
						"{{url}}"
					],
					"path": [
						"works-estimate",
						"v1",
						"detailedestimates",
						"_create"
					]
				},
				"description": "Create Detailed Estimate"
			},
			"response": []
		},
		{
			"name": "Search sDE",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4fe15700-d00a-47fc-ba4e-b4d675b0d06e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"var jsonData = JSON.parse(responseBody);",
							"pm.test(\"Spillover AE status is Technical Sanctioned\", function () {",
							"    pm.expect(\"TECHNICAL_SANCTIONED\").to.include(jsonData.detailedEstimates[0].status.code);",
							"    pm.environment.set(\"sDEstatus\", jsonData.detailedEstimates[0].status.code);",
							"});",
							"pm.environment.set(\"sDEid\", jsonData.detailedEstimates[0].id);",
							"pm.test(\"Detailed Estimae Number matches\", function () {",
							"pm.expect(pm.environment.get(\"sDENum\")).to.include(jsonData.detailedEstimates[0].estimateNumber);",
							"});",
							"pm.test(\"Deatiled Estimae ID matches\", function () {",
							"pm.expect(pm.environment.get(\"sDEid\")).to.include(jsonData.detailedEstimates[0].id);",
							"});",
							"postman.setNextRequest(\"Create sLOA\");"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"RequestInfo\": {\n    \"resMsgId\": \"placeholder\",\n    \"msgId\": \"123\",\n    \"status\": \"200\",\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.1\",\n    \"ts\": \"123456789456\",\n    \"key\": null,\n    \"action\":\"search\",\n    \"authToken\":\"{{access_token}}\"\n    }\n}"
				},
				"url": {
					"raw": "{{url}}/works-estimate/v1/detailedestimates/_search?tenantId={{tenantId}}&ids={{sDEId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"works-estimate",
						"v1",
						"detailedestimates",
						"_search"
					],
					"query": [
						{
							"key": "tenantId",
							"value": "{{tenantId}}",
							"equals": true
						},
						{
							"key": "ids",
							"value": "{{sDEId}}",
							"equals": true
						}
					]
				},
				"description": "Search Detailed Estimate by using params:\ntenantId\nspillOverFlag\nstatuses\ndetailedEstimateNumbers\nworkIdentificationNumbers\nabstractEstimateNumbers\nids\nfromDate\ntoDate\ndepartments\ntypeOfWork\nsubTypeOfWork\nfromAmount\ntoAmount\nnameOfWork\nwards\ncreatedBy\ncurrentOwner\npageSize\npageNumber\nsortBy"
			},
			"response": []
		},
		{
			"name": "Create sLOA",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e01b86cf-2f16-47a1-9dfd-f757aa9e4415",
						"type": "text/javascript",
						"exec": [
							"var num1 = Math.floor((Math.random() * 10000) + 1);",
							"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
							"var today = new Date();",
							"var epoch = Math.round(today.getTime()/1000);",
							"var year = today.getFullYear();",
							"",
							"pm.environment.set(\"loaNumber\", \"LOA-\"+num1);",
							"pm.environment.set(\"fileNumber\", \"FN-\"+num1);",
							"pm.environment.set(\"loaCRN\", \"CRN-LOA-\"+num1);",
							"pm.environment.get(\"sEstimateNum\");"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a5d61f00-c595-4550-b8cf-039f2bb3180d",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.environment.set(\"loaId\", jsonData.letterOfAcceptances[0].id);",
							"pm.environment.set(\"loaMBSheet1\", jsonData.letterOfAcceptances[0].letterOfAcceptanceEstimates[0].loaActivities[0].loaMeasurements[0].id);",
							"pm.environment.set(\"loaMBSheet2\", jsonData.letterOfAcceptances[0].letterOfAcceptanceEstimates[0].loaActivities[0].loaMeasurements[1].id);",
							"pm.environment.set(\"loaMBSheet3\",jsonData.letterOfAcceptances[0].letterOfAcceptanceEstimates[0].loaActivities[1].loaMeasurements[0].id);",
							"pm.environment.set(\"loaMBSheet4\",jsonData.letterOfAcceptances[0].letterOfAcceptanceEstimates[0].loaActivities[1].loaMeasurements[1].id);",
							"",
							"postman.setNextRequest(\"Search sLOA\");"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.works\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511171897140,\n    \"action\": \"create\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \n  \"letterofacceptances\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"contractor\": {\n        \"code\": \"Grade-38\",\n        \"tenantId\": \"{{tenantId}}\"\n      },\n      \"loaDate\": 1483315200000,\n      \"loaNumber\": \"{{loaNumber}}\",\n      \"contractPeriod\": 5,\n      \"emdAmountDeposited\": 200,\n      \"stampPaperAmount\": 100,\n      \"engineerIncharge\": {\n      \t\"code\": \"HOD\"\n      },\n      \"defectLiabilityPeriod\": 10,\n      \"tenderFinalizedPercentage\": 0,\n      \"loaAmount\": 900,\n      \"approvedDate\": 1483315200000,\n      \"fileNumber\": \"{{fileNumber}}\",\n      \"fileDate\": 1483315200000,\n      \"councilResolutionNumber\": \"{{loaCRN}}\",\n      \"councilResolutionDate\": 1483315200000,\n      \"spillOverFlag\": true,\n      \"status\": {\n        \"code\": \"APPROVED\"\n        },\n      \"letterOfAcceptanceEstimates\":[\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"detailedEstimate\": {\n          \"estimateNumber\": \"{{sDENum}}\"\n          },\n          \"workCompletionDate\": 1483315200000,\n          \"loaActivities\": [\n            {\n               \"tenantId\": \"{{tenantId}}\",\n               \"collectionMode\":\"CASH\",\n               \"percentage\": 10,\n               \"amount\": 100\n          }\n          ],\n          \"estimateLOAAmount\": 900\n      }\n      ],\n      \"securityDeposits\": []\n    }\n  ]\n}"
				},
				"url": {
					"raw": "{{url}}/works-workorder/v1/letterofacceptances/_create",
					"host": [
						"{{url}}"
					],
					"path": [
						"works-workorder",
						"v1",
						"letterofacceptances",
						"_create"
					]
				},
				"description": "LOA for the spillover estimates"
			},
			"response": []
		},
		{
			"name": "Search sLOA",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "532c25a2-440f-431e-9ab0-0e4566355448",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"pm.environment.set(\"loaId\", jsonData.letterOfAcceptances[0].letterOfAcceptanceEstimates[0].letterOfAcceptance);",
							"pm.environment.set(\"loaNumber\", jsonData.letterOfAcceptances[0].loaNumber);",
							"pm.environment.set(\"loaStatus\", jsonData.letterOfAcceptances[0].status.code);",
							"pm.environment.set(\"loaEstimateId\", jsonData.letterOfAcceptances[0].letterOfAcceptanceEstimates[0].id);",
							"pm.environment.set(\"loaActId1\", jsonData.letterOfAcceptances[0].letterOfAcceptanceEstimates[0].loaActivities[0].id);",
							"pm.environment.set(\"loaActId2\", jsonData.letterOfAcceptances[0].letterOfAcceptanceEstimates[0].loaActivities[1].id);",
							"",
							"pm.test(\"LOA ID matches\", function () {",
							"pm.expect(pm.environment.get(\"loaId\")).to.include(jsonData.letterOfAcceptances[0].id);",
							"});",
							"pm.test(\"LOA Number matches\", function () {",
							"pm.expect(pm.environment.get(\"loaNumber\")).to.include(jsonData.letterOfAcceptances[0].loaNumber);",
							"});",
							"pm.test(\"LOA status as Approved matches\", function () {",
							"    pm.expect(\"APPROVED\").to.include(jsonData.letterOfAcceptances[0].status.code);",
							"});",
							"postman.setNextRequest(\"Create sWO\");"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511171897140,\n    \"action\": \"search\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
				},
				"url": {
					"raw": "{{url}}/works-workorder/v1/letterofacceptances/_search?tenantId={{tenantId}}&loaNumbers={{loaNumber}}&ids={{loaId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"works-workorder",
						"v1",
						"letterofacceptances",
						"_search"
					],
					"query": [
						{
							"key": "tenantId",
							"value": "{{tenantId}}",
							"equals": true
						},
						{
							"key": "loaNumbers",
							"value": "{{loaNumber}}",
							"equals": true
						},
						{
							"key": "ids",
							"value": "{{loaId}}",
							"equals": true
						}
					]
				},
				"description": "Search LOA"
			},
			"response": []
		},
		{
			"name": "Create sWO",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "239540d5-d8d9-4973-ad24-99f80fead0d8",
						"type": "text/javascript",
						"exec": [
							"var num1 = Math.floor((Math.random() * 10000) + 1);",
							"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
							"var today = new Date();",
							"var epoch = Math.round(today.getTime()/1000);",
							"var year = today.getFullYear();",
							"pm.environment.set(\"workOrderNumber\", \"WO-\"+num1);",
							"pm.environment.get(\"loaId\");"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "b39e24dd-3ca7-4866-a092-296c9f4ff00b",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"var jsonData = JSON.parse(responseBody);",
							"pm.environment.set(\"woID\", jsonData.workOrders[0].id);",
							"pm.environment.set(\"woNum\", jsonData.workOrders[0].workOrderNumber);",
							"postman.setNextRequest(\"Search sWO\");"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511171897140,\n    \"action\": \"create\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"clerk\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \n  \"workOrders\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"letterOfAcceptance\": {\n        \"id\": \"{{loaId}}\",\n        \"loaNumber\": \"{{loaNumber}}\",\n        \"tenantId\": \"{{tenantId}}\",\n        \"spillOverFlag\": true\n      },\n      \"workOrderDate\": 1483315200000,\n      \"workOrderNumber\": \"{{workOrderNumber}}\",\n      \"status\": {\n        \"code\": \"APPROVED\"\n        },\n      \"workOrderDetails\": [\n        {\n        \"tenantId\": \"{{tenantId}}\",\n        \"remarks\":\"Approval\",\n        \"editable\": true\n        }    ],\n      \"documentDetails\":[]\n    }\n  ]\n}"
				},
				"url": {
					"raw": "{{url}}/works-workorder/v1/workorders/_create",
					"host": [
						"{{url}}"
					],
					"path": [
						"works-workorder",
						"v1",
						"workorders",
						"_create"
					]
				},
				"description": "Work Order for the spillover work"
			},
			"response": []
		},
		{
			"name": "Search sWO",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f353aa21-5a32-4351-8f07-104c93acef2f",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"pm.environment.get(\"loaNumber\");",
							"pm.environment.get(\"loaId\");",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"LOA ID matches\", function () {",
							"pm.expect(pm.environment.get(\"loaId\")).to.include(jsonData.workOrders[0].letterOfAcceptance.letterOfAcceptanceEstimates[0].letterOfAcceptance);",
							"});",
							"pm.test(\"LOA Number matches\", function () {",
							"pm.expect(pm.environment.get(\"loaNumber\")).to.include(jsonData.workOrders[0].letterOfAcceptance.loaNumber);",
							"});",
							"pm.test(\"LOA Estimate ID matches\", function () {",
							"pm.expect(pm.environment.get(\"loaEstimateId\")).to.include(jsonData.workOrders[0].letterOfAcceptance.letterOfAcceptanceEstimates[0].id);",
							"});",
							"pm.test(\"LOA Activity ID matches\", function () {",
							"pm.expect(pm.environment.get(\"loaActId1\")).to.include(jsonData.workOrders[0].letterOfAcceptance.letterOfAcceptanceEstimates[0].loaActivities[0].id);",
							"pm.expect(pm.environment.get(\"loaActId2\")).to.include(jsonData.workOrders[0].letterOfAcceptance.letterOfAcceptanceEstimates[0].loaActivities[1].id);",
							"});",
							"pm.test(\"Detailed Estimate ID matches\", function () {",
							"pm.expect(pm.environment.get(\"sDEid\")).to.include(jsonData.workOrders[0].letterOfAcceptance.letterOfAcceptanceEstimates[0].detailedEstimate.id);",
							"});",
							"pm.test(\"WO status as Approved matches\", function () {",
							"    pm.expect(\"APPROVED\").to.include(jsonData.workOrders[0].status.code);",
							"});",
							"postman.setNextRequest(\"Create sMB\");"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"RequestInfo\": {\n    \"action\": \"search\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"clerk\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n    }\n}"
				},
				"url": {
					"raw": "{{url}}/works-workorder/v1/workorders/_search?tenantId={{tenantId}}&ids={{woID}}&workOrderNumbers={{woNum}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"works-workorder",
						"v1",
						"workorders",
						"_search"
					],
					"query": [
						{
							"key": "tenantId",
							"value": "{{tenantId}}",
							"equals": true
						},
						{
							"key": "ids",
							"value": "{{woID}}",
							"equals": true
						},
						{
							"key": "workOrderNumbers",
							"value": "{{woNum}}",
							"equals": true
						}
					]
				},
				"description": "Search work order for the spillover"
			},
			"response": []
		},
		{
			"name": "Create sMB",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e164fb59-8c9d-46fe-95ae-d8e3a77c2016",
						"type": "text/javascript",
						"exec": [
							"var num1 = Math.floor((Math.random() * 10000) + 1);",
							"pm.environment.set(\"mbRef\", \"MBref-\"+num1);"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "6c313bc0-735a-4b20-8aa9-7a814fe130a6",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"pm.environment.set(\"MBid\", jsonData.measurementBooks[0].id);",
							"pm.environment.set(\"MBrefNo\", jsonData.measurementBooks[0].mbRefNo);",
							"",
							"postman.setNextRequest(\"Search sMB\");"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"clerk\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"measurementBooks\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"mbRefNo\": \"{{mbRef}}\",\n      \"contractorComments\": \"Measurement Book\",\n      \"mbDate\": 1483315200000,\n      \"mbIssuedDate\": 1483315200000,\n      \"mbAbstract\": \"Abstract MB\",\n      \"fromPageNo\": \"1\",\n      \"toPageNo\": \"100\",\n      \"letterOfAcceptanceEstimate\": {\n        \"tenantId\": \"{{tenantId}}\",\n        \"id\": \"{{loaEstimateId}}\",\n        \"letterOfAcceptance\": \"{{loaId}}\",\n        \"detailedEstimate\": {\n          \"id\": \"{{sDEid}}\",\n          \"tenantId\": \"{{tenantId}}\",\n          \"estimateNumber\": \"{{sDENum}}\"\n        }\n      },\n      \"status\": {\n      \t\"code\": \"APPROVED\"\n      },\n      \"measurementBookDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"quantity\": \"2\",\n          \"rate\": \"450\",\n          \"remarks\": \"Remarks\",\n          \"amount\": 450,\n          \"loaActivity\": {\n            \"id\": \"{{loaActId1}}\"\n          },\n          \"measurementSheets\": [\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"remarks\": \"Sheet remarks\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet1}}\"\n              }\n            },\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"remarks\": \"Sheet remarks\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet2}}\"\n              }\n            }\n          ]\n        },\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"quantity\": \"2\",\n          \"rate\": \"450\",\n          \"remarks\": \"Remarks\",\n          \"amount\": 450,\n          \"loaActivity\": {\n            \"id\": \"{{loaActId2}}\"\n          },\n          \"measurementSheets\": [\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"remarks\": \"Sheet remarks\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet3}}\"\n              }\n            },\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"remarks\": \"Sheet remarks\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet4}}\"\n              }\n            }\n          ]\n        }\n      ],\n      \"isLegacyMB\": \"true\",\n      \"mbAmount\": \"900\",\n      \"approvedDate\": 1483315200000,\n      \"documentDetails\": []\n    }\n  ]\n}"
				},
				"url": {
					"raw": "{{url}}/works-measurementbook/v1/measurementbooks/_create",
					"host": [
						"{{url}}"
					],
					"path": [
						"works-measurementbook",
						"v1",
						"measurementbooks",
						"_create"
					]
				},
				"description": null
			},
			"response": []
		},
		{
			"name": "Search sMB",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c9cdaee9-7451-41e6-920c-f1d3e1f15afa",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"var mbId = pm.environment.get(\"MBid\");",
							"var loaEstId = pm.environment.get(\"loaEstimateId\");",
							"",
							"pm.test(\"MB id Matches\", function () {",
							"    pm.expect(mbId).to.include(jsonData.measurementBooks[0].id);",
							"});",
							"pm.test(\"LOA ID in MB Matches\", function () {",
							"    pm.expect(loaEstId).to.include(jsonData.measurementBooks[0].letterOfAcceptanceEstimate.id);",
							"});",
							"",
							"postman.setNextRequest(\"Logout\");"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"RequestInfo\": {\n    \"resMsgId\": \"placeholder\",\n    \"msgId\": \"123\",\n    \"status\": \"200\",\n    \"apiId\": \"org.egov.works\",\n    \"ver\": \"1.1\",\n    \"ts\": \"123456789456\",\n    \"key\": null,\n    \"action\":\"search\",\n    \"authToken\":\"{{access_token}}\"\n    }\n}"
				},
				"url": {
					"raw": "{{url}}/works-measurementbook/v1/measurementbooks/_search?tenantId={{tenantId}}&ids={{MBid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"works-measurementbook",
						"v1",
						"measurementbooks",
						"_search"
					],
					"query": [
						{
							"key": "tenantId",
							"value": "{{tenantId}}",
							"equals": true
						},
						{
							"key": "ids",
							"value": "{{MBid}}",
							"equals": true
						}
					]
				},
				"description": "Search spillover MB"
			},
			"response": []
		},
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pgr\",\n    \"ver\": \"1.0\",\n    \"ts\": \"13-04-2017 12:13:30\",\n    \"action\": \"POST\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
				},
				"url": {
					"raw": "{{url}}/user/_logout?access_token={{access_token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"_logout"
					],
					"query": [
						{
							"key": "access_token",
							"value": "{{access_token}}",
							"equals": true
						}
					]
				},
				"description": null
			},
			"response": []
		}
	]
}