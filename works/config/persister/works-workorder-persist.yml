serviceMaps:
 serviceName: Works Work Order
 mappings:
 - version: 1.0
   name: Letter of Acceptance Create
   description: Persists Letter of Acceptance in egw_letterofacceptance table
   fromTopic: works-letterofacceptance-create-validated
   isTransaction: true
   queryMaps:
    - query: INSERT INTO egw_letterofacceptance(id, tenantid, contractor, loadate, loanumber, contractperiod, emdamountdeposited, stamppaperamount,engineerincharge, defectliabilityperiod, loaamount, status, tenderfinalizedpercentage, approveddate, filenumber, filedate,  parent, stateid, cancellationreason, cancellationremarks, createdby, createdtime,councilResolutionNumber,councilResolutionDate,spilloverflag,lastmodifiedby,lastmodifiedtime,deleted, approvedby) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) on CONFLICT (id,tenantid) DO UPDATE SET contractor=EXCLUDED.contractor, loadate=EXCLUDED.loadate, loanumber=EXCLUDED.loanumber, contractperiod=EXCLUDED.contractperiod, emdamountdeposited=EXCLUDED.emdamountdeposited, stamppaperamount=EXCLUDED.stamppaperamount, engineerincharge=EXCLUDED.engineerincharge, defectliabilityperiod=EXCLUDED.defectliabilityperiod, loaamount=EXCLUDED.loaamount, status=EXCLUDED.status, tenderfinalizedpercentage=EXCLUDED.tenderfinalizedpercentage, approveddate=EXCLUDED.approveddate, filenumber=EXCLUDED.filenumber, filedate=EXCLUDED.filedate, stateid=EXCLUDED.stateid, lastmodifiedby=EXCLUDED.lastmodifiedby, lastmodifiedtime=EXCLUDED.lastmodifiedtime, deleted=EXCLUDED.deleted, approvedby=EXCLUDED.approvedby;

      basePath: $.letterOfAcceptances.*
      jsonMaps:
         
       - jsonPath: $.letterOfAcceptances.*.id
       
       - jsonPath: $.letterOfAcceptances.*.tenantId
         
       - jsonPath: $.letterOfAcceptances.*.contractor.code
         
       - jsonPath: $.letterOfAcceptances.*.loaDate
         dbType: LONG
       
       - jsonPath: $.letterOfAcceptances.*.loaNumber
       
       - jsonPath: $.letterOfAcceptances.*.contractPeriod
       
       - jsonPath: $.letterOfAcceptances.*.emdAmountDeposited
       
       - jsonPath: $.letterOfAcceptances.*.stampPaperAmount
       
       - jsonPath: $.letterOfAcceptances.*.engineerIncharge.code
       
       - jsonPath: $.letterOfAcceptances.*.defectLiabilityPeriod

       - jsonPath: $.letterOfAcceptances.*.loaAmount
       
       - jsonPath: $.letterOfAcceptances.*.status.code
                 
       - jsonPath: $.letterOfAcceptances.*.tenderFinalizedPercentage
                 
       - jsonPath: $.letterOfAcceptances.*.approvedDate
         dbType: LONG
         
       - jsonPath: $.letterOfAcceptances.*.fileNumber
                  
       - jsonPath: $.letterOfAcceptances.*.fileDate
         dbType: LONG
       
       - jsonPath: $.letterOfAcceptances.*.parent
       
       - jsonPath: $.letterOfAcceptances.*.stateId
                  
       - jsonPath: $.letterOfAcceptances.*.cancellationReason
       
       - jsonPath: $.letterOfAcceptances.*.cancellationRemarks

       - jsonPath: $.letterOfAcceptances.*.auditDetails.createdBy
 
       - jsonPath: $.letterOfAcceptances.*.auditDetails.createdTime

       - jsonPath: $.letterOfAcceptances.*.councilResolutionNumber
       
       - jsonPath: $.letterOfAcceptances.*.councilResolutionDate
         dbType: LONG

       - jsonPath: $.letterOfAcceptances.*.spillOverFlag

       - jsonPath: $.letterOfAcceptances.*.auditDetails.lastModifiedBy
 
       - jsonPath: $.letterOfAcceptances.*.auditDetails.lastModifiedTime

       - jsonPath: $.letterOfAcceptances.*.deleted

       - jsonPath: $.letterOfAcceptances.*.approvedBy.userName

    - query: INSERT INTO egw_letterofacceptanceestimate(id, tenantid, letterofacceptance, detailedestimate, workcompletiondate, estimateloaamount, createdby, createdtime,lastmodifiedby,lastmodifiedtime,deleted) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) on CONFLICT (id,tenantid) DO UPDATE SET workcompletiondate=EXCLUDED.workcompletiondate, estimateloaamount=EXCLUDED.estimateloaamount, lastmodifiedby=EXCLUDED.lastmodifiedby, lastmodifiedtime=EXCLUDED.lastmodifiedtime, deleted=EXCLUDED.deleted;
      basePath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*
      jsonMaps:
         
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.id
         
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.tenantId
         
       - jsonPath: $.letterOfAcceptances.letterOfAcceptanceEstimates.*.letterOfAcceptance
       
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.detailedEstimate.estimateNumber
       
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.workCompletionDate
         dbType: LONG

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.estimateLOAAmount

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.auditDetails.createdBy
       
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.auditDetails.createdTime
         dbType: LONG

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.auditDetails.lastModifiedBy
 
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.auditDetails.lastModifiedTime

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.deleted
         type: BOOLEAN

    - query: INSERT INTO egw_securitydeposit(id, tenantid, letterofacceptance, collectionmode, percentage, amount, createdby, createdtime,lastmodifiedby,lastmodifiedtime,deleted) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) on CONFLICT (id,tenantid) DO UPDATE SET collectionmode=EXCLUDED.collectionmode, percentage=EXCLUDED.percentage, amount=EXCLUDED.amount, lastmodifiedby=EXCLUDED.lastmodifiedby, lastmodifiedtime=EXCLUDED.lastmodifiedtime, deleted=EXCLUDED.deleted;
      basePath: $.letterOfAcceptances.*.securityDeposits.*
      jsonMaps:
         
       - jsonPath: $.letterOfAcceptances.*.securityDeposits.*.id
       
       - jsonPath: $.letterOfAcceptances.*.securityDeposits.*.tenantId
         
       - jsonPath: $.letterOfAcceptances.*.securityDeposits.*.letterOfAcceptance
       
       - jsonPath: $.letterOfAcceptances.*.securityDeposits.*.collectionMode
       
       - jsonPath: $.letterOfAcceptances.*.securityDeposits.*.percentage

       - jsonPath: $.letterOfAcceptances.*.securityDeposits.*.amount

       - jsonPath: $.letterOfAcceptances.*.securityDeposits.*.auditDetails.createdBy
       
       - jsonPath: $.letterOfAcceptances.*.securityDeposits.*.auditDetails.createdTime
         dbType: LONG

       - jsonPath: $.letterOfAcceptances.*.securityDeposits.*.auditDetails.lastModifiedBy
       
       - jsonPath: $.letterOfAcceptances.*.securityDeposits.*.auditDetails.lastModifiedTime
         dbType: LONG

       - jsonPath: $.letterOfAcceptances.*.securityDeposits.*.deleted

    - query: INSERT INTO egw_assetsforloa(id, tenantid, asset, letterofacceptanceestimate, createdby, createdtime,deleted) VALUES (?, ?, ?, ?, ?, ?, ?) on CONFLICT (id,tenantid) DO UPDATE SET asset=EXCLUDED.asset, lastmodifiedby=EXCLUDED.lastmodifiedby, lastmodifiedtime=EXCLUDED.lastmodifiedtime, deleted=EXCLUDED.deleted;
      basePath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.assetForLOAs.*
      jsonMaps:
         
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.assetForLOAs.*.id
         
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.assetForLOAs.*.tenantId
         
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.assetForLOAs.*.asset.code
       
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.assetForLOAs.*.letterOfAcceptanceEstimate

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.assetForLOAs.*.auditDetails.createdBy
       
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.assetForLOAs.*.auditDetails.createdTime
         dbType: LONG

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.assetForLOAs.*.auditDetails.lastModifiedBy
       
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.assetForLOAs.*.auditDetails.lastModifiedTime
         dbType: LONG

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.assetForLOAs.*.deleted

    - query: INSERT INTO egw_loaactivity(id, tenantid, letterofacceptanceestimate, estimateactivity, parent,approvedrate, approvedquantity,approvedamount, remarks, createdby, createdtime,lastmodifiedby,lastmodifiedtime, deleted) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) on CONFLICT (id,tenantid) DO UPDATE SET estimateactivity=EXCLUDED.estimateactivity, parent=EXCLUDED.parent, approvedrate=EXCLUDED.approvedrate, approvedquantity=EXCLUDED.approvedquantity, approvedamount=EXCLUDED.approvedamount, remarks=EXCLUDED.remarks, lastmodifiedby=EXCLUDED.lastmodifiedby, lastmodifiedtime=EXCLUDED.lastmodifiedtime, deleted=EXCLUDED.deleted;
      basePath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*
      jsonMaps:
         
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.id
         
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.tenantId

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.letterOfAcceptanceEstimate
       
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.estimateActivity.id
       
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.parent

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.approvedRate

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.approvedQuantity

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.approvedAmount

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.remarks

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.auditDetails.createdBy

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.auditDetails.createdTime
         dbType: LONG

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.auditDetails.lastModifiedBy

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.auditDetails.lastModifiedTime
         dbType: LONG

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.deleted

    - query: INSERT INTO egw_loameasurementsheet(id, tenantid, "number", length, width, depthorheight, quantity, loaactivity, estimatemeasurementsheet, createdby, createdtime, lastmodifiedby, lastmodifiedtime, deleted, multiplier) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)  on CONFLICT (id,tenantid) DO UPDATE SET "number"=EXCLUDED."number", length=EXCLUDED.length, width=EXCLUDED.width, depthorheight=EXCLUDED.depthorheight, quantity=EXCLUDED.quantity, loaactivity=EXCLUDED.loaactivity, estimatemeasurementsheet=EXCLUDED.estimatemeasurementsheet, lastmodifiedby=EXCLUDED.lastmodifiedby, lastmodifiedtime=EXCLUDED.lastmodifiedtime, deleted=EXCLUDED.deleted, multiplier=EXCLUDED.multiplier;
      basePath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.loaMeasurements.*
      jsonMaps:
         
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.loaMeasurements.*.id
         
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.loaMeasurements.*.tenantId
         
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.loaMeasurements.*.number

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.loaMeasurements.*.length
       
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.loaMeasurements.*.width
       
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.loaMeasurements.*.depthOrHeight
       
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.loaMeasurements.*.quantity

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.loaMeasurements.*.loaActivity
       
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.loaMeasurements.*.estimateMeasurementSheet

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.loaMeasurements.*.auditDetails.createdBy

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.loaMeasurements.*.auditDetails.createdTime
         dbType: LONG

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.loaMeasurements.*.auditDetails.lastModifiedBy

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.loaMeasurements.*.auditDetails.lastModifiedTime
         dbType: LONG

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.loaMeasurements.*.deleted

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.loaMeasurements.*.multiplier

    - query: INSERT INTO egw_documentdetail(id, tenantid, objectid, objecttype, documenttype, filestore, latitude, longitude, description, dateofcapture, workprogress, createdby, createdtime, lastmodifiedby, lastmodifiedtime, deleted) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)  on CONFLICT (id,tenantid) DO UPDATE SET filestore=EXCLUDED.filestore, documenttype= EXCLUDED.documenttype, latitude=EXCLUDED.latitude, longitude=EXCLUDED.longitude, description=EXCLUDED.description, dateofcapture=EXCLUDED.dateofcapture, workprogress=EXCLUDED.workprogress, lastmodifiedtime=EXCLUDED.lastmodifiedtime, lastmodifiedby=EXCLUDED.lastmodifiedby, deleted=EXCLUDED.deleted;

      basePath: $.letterOfAcceptances.*.documentDetails.*
      jsonMaps:
         
       - jsonPath: $.letterOfAcceptances.*.documentDetails.*.id
         
       - jsonPath: $.letterOfAcceptances.*.documentDetails.*.tenantId
         
       - jsonPath: $.letterOfAcceptances.*.documentDetails.*.objectId
       
       - jsonPath: $.letterOfAcceptances.*.documentDetails.*.objectType
       
       - jsonPath: $.letterOfAcceptances.*.documentDetails.*.documentType

       - jsonPath: $.letterOfAcceptances.*.documentDetails.*.fileStore

       - jsonPath: $.letterOfAcceptances.*.documentDetails.*.latitude

       - jsonPath: $.letterOfAcceptances.*.documentDetails.*.longitude

       - jsonPath: $.letterOfAcceptances.*.documentDetails.*.description

       - jsonPath: $.letterOfAcceptances.*.documentDetails.*.dateOfCapture
         dbType: LONG

       - jsonPath: $.letterOfAcceptances.*.documentDetails.*.workProgress

       - jsonPath: $.letterOfAcceptances.*.documentDetails.*.auditDetails.createdBy

       - jsonPath: $.letterOfAcceptances.*.documentDetails.*.auditDetails.createdTime
         dbType: LONG

       - jsonPath: $.letterOfAcceptances.*.documentDetails.*.auditDetails.lastModifiedBy

       - jsonPath: $.letterOfAcceptances.*.documentDetails.*.auditDetails.lastModifiedTime
         dbType: LONG

       - jsonPath: $.letterOfAcceptances.*.documentDetails.*.deleted

 - version: 1.0
   name: Work Order
   description: Persists Work Order in egw_workorder table
   fromTopic: works-workorder-createupdate-validated
   isTransaction: true
   queryMaps:
    - query: INSERT INTO egw_workorder(id, tenantid, letterofacceptance, workorderdate, workordernumber, status, stateid, createdby, createdtime,lastmodifiedby, lastmodifiedtime, deleted,remarks,approveddate, approvedby) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) on CONFLICT (id,tenantid) DO UPDATE SET workorderdate=EXCLUDED.workorderdate, status= EXCLUDED.status, stateid=EXCLUDED.stateid, lastmodifiedtime=EXCLUDED.lastmodifiedtime, lastmodifiedby=EXCLUDED.lastmodifiedby, deleted=EXCLUDED.deleted, remarks=EXCLUDED.remarks, approveddate=EXCLUDED.approveddate, approvedby=EXCLUDED.approvedby;

      basePath: $.workOrders.*
      jsonMaps:

       - jsonPath: $.workOrders.*.id

       - jsonPath: $.workOrders.*.tenantId

       - jsonPath: $.workOrders.*.letterOfAcceptance.id

       - jsonPath: $.workOrders.*.workOrderDate
         dbType: LONG

       - jsonPath: $.workOrders.*.workOrderNumber

       - jsonPath: $.workOrders.*.status.code

       - jsonPath: $.workOrders.*.stateId

       - jsonPath: $.workOrders.*.auditDetails.createdBy

       - jsonPath: $.workOrders.*.auditDetails.createdTime
         dbType: LONG

       - jsonPath: $.workOrders.*.auditDetails.lastModifiedBy

       - jsonPath: $.workOrders.*.auditDetails.lastModifiedTime
         dbType: LONG

       - jsonPath: $.workOrders.*.deleted

       - jsonPath: $.workOrders.*.remarks

       - jsonPath: $.workOrders.*.approvedDate
         dbType: LONG
       
       - jsonPath: $.workOrders.*.approvedBy.userName

    - query: INSERT INTO egw_workorder_details(id, tenantid, workorder, remarks, editable, createdby, createdtime, lastmodifiedby, lastmodifiedtime, deleted) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) on CONFLICT (id,tenantid) DO UPDATE SET remarks=EXCLUDED.remarks, editable=EXCLUDED.editable, lastmodifiedtime=EXCLUDED.lastmodifiedtime, lastmodifiedby=EXCLUDED.lastmodifiedby, deleted=EXCLUDED.deleted;

      basePath: $.workOrders.*.workOrderDetails.*
      jsonMaps:

       - jsonPath: $.workOrders.*.workOrderDetails.*.id

       - jsonPath: $.workOrders.*.workOrderDetails.*.tenantId

       - jsonPath: $.workOrders.*.workOrderDetails.*.workOrder

       - jsonPath: $.workOrders.*.workOrderDetails.*.remarks

       - jsonPath: $.workOrders.*.workOrderDetails.*.editable

       - jsonPath: $.workOrders.*.workOrderDetails.*.auditDetails.createdBy

       - jsonPath: $.workOrders.*.workOrderDetails.*.auditDetails.createdTime
         dbType: LONG

       - jsonPath: $.workOrders.*.workOrderDetails.*.auditDetails.lastModifiedBy

       - jsonPath: $.workOrders.*.workOrderDetails.*.auditDetails.lastModifiedTime
         dbType: LONG

       - jsonPath: $.workOrders.*.workOrderDetails.*.deleted

    - query: INSERT INTO egw_documentdetail(id, tenantid, objectid, objecttype, documenttype, filestore, latitude, longitude, description, dateofcapture, workprogress, createdby, createdtime, lastmodifiedby, lastmodifiedtime,deleted) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)  on CONFLICT (id,tenantid) DO UPDATE SET filestore=EXCLUDED.filestore, documenttype= EXCLUDED.documenttype, latitude=EXCLUDED.latitude, longitude=EXCLUDED.longitude, description=EXCLUDED.description, dateofcapture=EXCLUDED.dateofcapture, workprogress=EXCLUDED.workprogress, lastmodifiedtime=EXCLUDED.lastmodifiedtime, lastmodifiedby=EXCLUDED.lastmodifiedby, deleted=EXCLUDED.deleted;

      basePath: $.workOrders.*.documentDetails.*
      jsonMaps:

       - jsonPath: $.workOrders.*.documentDetails.*.id

       - jsonPath: $.workOrders.*.documentDetails.*.tenantId

       - jsonPath: $.workOrders.*.documentDetails.*.objectId

       - jsonPath: $.workOrders.*.documentDetails.*.objectType

       - jsonPath: $.workOrders.*.documentDetails.*.documentType

       - jsonPath: $.workOrders.*.documentDetails.*.fileStore

       - jsonPath: $.workOrders.*.documentDetails.*.latitude

       - jsonPath: $.workOrders.*.documentDetails.*.longitude

       - jsonPath: $.workOrders.*.documentDetails.*.description

       - jsonPath: $.workOrders.*.documentDetails.*.dateOfCapture
         dbType: LONG

       - jsonPath: $.workOrders.*.documentDetails.*.workProgress

       - jsonPath: $.workOrders.*.documentDetails.*.auditDetails.createdBy

       - jsonPath: $.workOrders.*.documentDetails.*.auditDetails.createdTime
         dbType: LONG

       - jsonPath: $.workOrders.*.documentDetails.*.auditDetails.lastModifiedBy

       - jsonPath: $.workOrders.*.documentDetails.*.auditDetails.lastModifiedTime
         dbType: LONG

       - jsonPath: $.workOrders.*.documentDetails.*.deleted

 - version: 1.0
   name: Letter of Acceptance Create
   description: Persists Revision Letter of Acceptance in egw_letterofacceptance table
   fromTopic: works-revision-loa-create-update
   isTransaction: true
   queryMaps:
    - query: INSERT INTO egw_letterofacceptance(id, tenantid, loadate, loanumber, loaamount, status, approveddate, parent, createdby, createdtime,lastmodifiedby,lastmodifiedtime) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) on CONFLICT (id,tenantid) DO UPDATE SET loadate=EXCLUDED.loadate, loanumber=EXCLUDED.loanumber, loaamount=EXCLUDED.loaamount, status=EXCLUDED.status, approveddate=EXCLUDED.approveddate, lastmodifiedby=EXCLUDED.lastmodifiedby, lastmodifiedtime=EXCLUDED.lastmodifiedtime;

      basePath: $.letterOfAcceptances.*
      jsonMaps:
         
       - jsonPath: $.letterOfAcceptances.*.id
       
       - jsonPath: $.letterOfAcceptances.*.tenantId
         
       - jsonPath: $.letterOfAcceptances.*.loaDate
         dbType: LONG
       
       - jsonPath: $.letterOfAcceptances.*.loaNumber
       
       - jsonPath: $.letterOfAcceptances.*.loaAmount
       
       - jsonPath: $.letterOfAcceptances.*.status
                 
       - jsonPath: $.letterOfAcceptances.*.approvedDate
         dbType: LONG
         
       - jsonPath: $.letterOfAcceptances.*.parent
       
       - jsonPath: $.letterOfAcceptances.*.auditDetails.createdBy
 
       - jsonPath: $.letterOfAcceptances.*.auditDetails.createdTime

       - jsonPath: $.letterOfAcceptances.*.auditDetails.lastModifiedBy
 
       - jsonPath: $.letterOfAcceptances.*.auditDetails.lastModifiedTime

    - query: INSERT INTO egw_letterofacceptanceestimate(id, tenantid, letterofacceptance, detailedestimate, workcompletiondate, estimateloaamount, createdby, createdtime,lastmodifiedby,lastmodifiedtime) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) on CONFLICT (id,tenantid) DO UPDATE SET workcompletiondate=EXCLUDED.workcompletiondate, estimateloaamount=EXCLUDED.estimateloaamount, lastmodifiedby=EXCLUDED.lastmodifiedby, lastmodifiedtime=EXCLUDED.lastmodifiedtime;
      basePath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*
      jsonMaps:
         
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.id
         
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.tenantId
         
       - jsonPath: $.letterOfAcceptances.letterOfAcceptanceEstimates.*.letterOfAcceptance
       
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.detailedEstimate.estimateNumber
       
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.workCompletionDate
         dbType: LONG

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.estimateLOAAmount

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.auditDetails.createdBy
       
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.auditDetails.createdTime
         dbType: LONG

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.auditDetails.lastModifiedBy
 
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.auditDetails.lastModifiedTime

    - query: INSERT INTO egw_loaactivity(id, tenantid, letterofacceptanceestimate, estimateactivity, parent,approvedrate, approvedquantity,approvedamount, remarks, createdby, createdtime,lastmodifiedby,lastmodifiedtime) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) on CONFLICT (id,tenantid) DO UPDATE SET estimateactivity=EXCLUDED.estimateactivity, parent=EXCLUDED.parent, approvedrate=EXCLUDED.approvedrate, approvedquantity=EXCLUDED.approvedquantity, approvedamount=EXCLUDED.approvedamount, remarks=EXCLUDED.remarks, lastmodifiedby=EXCLUDED.lastmodifiedby, lastmodifiedtime=EXCLUDED.lastmodifiedtime;
      basePath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*
      jsonMaps:
         
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.id
         
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.tenantId

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.letterOfAcceptanceEstimate
       
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.estimateActivity.id
       
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.parent

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.approvedRate

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.approvedQuantity

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.approvedAmount

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.remarks

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.auditDetails.createdBy

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.auditDetails.createdTime
         dbType: LONG

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.auditDetails.lastModifiedBy

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.auditDetails.lastModifiedTime
         dbType: LONG

    - query: INSERT INTO egw_loameasurementsheet(id, tenantid, "number", length, width, depthorheight, quantity, loaactivity, estimatemeasurementsheet, createdby, createdtime, lastmodifiedby, lastmodifiedtime) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)  on CONFLICT (id,tenantid) DO UPDATE SET "number"=EXCLUDED."number", length=EXCLUDED.length, width=EXCLUDED.width, depthorheight=EXCLUDED.depthorheight, quantity=EXCLUDED.quantity, loaactivity=EXCLUDED.loaactivity, estimatemeasurementsheet=EXCLUDED.estimatemeasurementsheet, lastmodifiedby=EXCLUDED.lastmodifiedby, lastmodifiedtime=EXCLUDED.lastmodifiedtime;
      basePath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.loaMeasurements.*
      jsonMaps:
         
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.loaMeasurements.*.id
         
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.loaMeasurements.*.tenantId
         
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.loaMeasurements.*.number

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.loaMeasurements.*.length
       
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.loaMeasurements.*.width
       
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.loaMeasurements.*.depthOrHeight
       
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.loaMeasurements.*.quantity

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.loaMeasurements.*.loaActivity
       
       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.loaMeasurements.*.estimateMeasurementSheet

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.loaMeasurements.*.auditDetails.createdBy

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.loaMeasurements.*.auditDetails.createdTime
         dbType: LONG

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.loaMeasurements.*.auditDetails.lastModifiedBy

       - jsonPath: $.letterOfAcceptances.*.letterOfAcceptanceEstimates.*.loaActivities.*.loaMeasurements.*.auditDetails.lastModifiedTime
         dbType: LONG

 - version: 1.0
   name: Notice
   description: Persists Notice in egw_notice table
   fromTopic: works-notice-createupdate-validated
   isTransaction: true
   queryMaps:
    - query: INSERT INTO egw_notice(id, tenantid, letterofacceptance, noticenumber, closingline, daysofreply, status, createdby, createdtime,lastmodifiedby, lastmodifiedtime, deleted) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) on CONFLICT (id,tenantid) DO UPDATE SET closingline= EXCLUDED.closingline, daysofreply=EXCLUDED.daysofreply, status = EXCLUDED.status, lastmodifiedtime=EXCLUDED.lastmodifiedtime, lastmodifiedby=EXCLUDED.lastmodifiedby, deleted=EXCLUDED.deleted;

      basePath: $.notices.*
      jsonMaps:

       - jsonPath: $.notices.*.id

       - jsonPath: $.notices.*.tenantId

       - jsonPath: $.notices.*.letterOfAcceptance.id

       - jsonPath: $.notices.*.noticeNumber

       - jsonPath: $.notices.*.closingLine

       - jsonPath: $.notices.*.daysOfReply

       - jsonPath: $.notices.*.status

       - jsonPath: $.notices.*.auditDetails.createdBy

       - jsonPath: $.notices.*.auditDetails.createdTime
         dbType: LONG

       - jsonPath: $.notices.*.auditDetails.lastModifiedBy

       - jsonPath: $.notices.*.auditDetails.lastModifiedTime
         dbType: LONG

       - jsonPath: $.notices.*.deleted

    - query: INSERT INTO egw_notice_details(id, tenantid, notice, remarks, createdby, createdtime, lastmodifiedby, lastmodifiedtime, deleted) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) on CONFLICT (id,tenantid) DO UPDATE SET remarks=EXCLUDED.remarks, lastmodifiedtime=EXCLUDED.lastmodifiedtime, lastmodifiedby=EXCLUDED.lastmodifiedby, deleted=EXCLUDED.deleted;

      basePath: $.notices.*.noticeDetails.*
      jsonMaps:

       - jsonPath: $.notices.*.noticeDetails.*.id

       - jsonPath: $.notices.*.noticeDetails.*.tenantId

       - jsonPath: $.notices.*.noticeDetails.*.notice

       - jsonPath: $.notices.*.noticeDetails.*.remarks

       - jsonPath: $.notices.*.noticeDetails.*.auditDetails.createdBy

       - jsonPath: $.notices.*.noticeDetails.*.auditDetails.createdTime
         dbType: LONG

       - jsonPath: $.notices.*.noticeDetails.*.auditDetails.lastModifiedBy

       - jsonPath: $.notices.*.noticeDetails.*.auditDetails.lastModifiedTime
         dbType: LONG

       - jsonPath: $.notices.*.noticeDetails.*.deleted

    - query: INSERT INTO egw_documentdetail(id, tenantid, objectid, objecttype, documenttype, filestore, latitude, longitude, description, dateofcapture, workprogress, createdby, createdtime, lastmodifiedby, lastmodifiedtime,deleted) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)  on CONFLICT (id,tenantid) DO UPDATE SET filestore=EXCLUDED.filestore, documenttype= EXCLUDED.documenttype, latitude=EXCLUDED.latitude, longitude=EXCLUDED.longitude, description=EXCLUDED.description, dateofcapture=EXCLUDED.dateofcapture, workprogress=EXCLUDED.workprogress, lastmodifiedtime=EXCLUDED.lastmodifiedtime, lastmodifiedby=EXCLUDED.lastmodifiedby, deleted=EXCLUDED.deleted;

      basePath: $.notices.*.documentDetails.*
      jsonMaps:

       - jsonPath: $.notices.*.documentDetails.*.id

       - jsonPath: $.notices.*.documentDetails.*.tenantId

       - jsonPath: $.notices.*.documentDetails.*.objectId

       - jsonPath: $.notices.*.documentDetails.*.objectType

       - jsonPath: $.notices.*.documentDetails.*.documentType

       - jsonPath: $.notices.*.documentDetails.*.fileStore

       - jsonPath: $.notices.*.documentDetails.*.latitude

       - jsonPath: $.notices.*.documentDetails.*.longitude

       - jsonPath: $.notices.*.documentDetails.*.description

       - jsonPath: $.notices.*.documentDetails.*.dateOfCapture
         dbType: LONG

       - jsonPath: $.notices.*.documentDetails.*.workProgress

       - jsonPath: $.notices.*.documentDetails.*.auditDetails.createdBy

       - jsonPath: $.notices.*.documentDetails.*.auditDetails.createdTime
         dbType: LONG

       - jsonPath: $.notices.*.documentDetails.*.auditDetails.lastModifiedBy

       - jsonPath: $.notices.*.documentDetails.*.auditDetails.lastModifiedTime
         dbType: LONG

       - jsonPath: $.notices.*.documentDetails.*.deleted

 - version: 1.0
   name: Milestone
   description: Persists Milestone in egw_milestone table
   fromTopic: works-milestone-saveorupdate-validated
   isTransaction: true
   queryMaps:
    - query: INSERT INTO egw_milestone(id, tenantid, letterofacceptanceestimate, status, cancellationreason, cancellationremarks, deleted, createdby, createdtime,lastmodifiedby, lastmodifiedtime) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) on CONFLICT (id,tenantid) DO UPDATE SET letterofacceptanceestimate=EXCLUDED.letterofacceptanceestimate, status= EXCLUDED.status, cancellationreason=EXCLUDED.cancellationreason, cancellationremarks=EXCLUDED.cancellationremarks, deleted= EXCLUDED.deleted, lastmodifiedtime=EXCLUDED.lastmodifiedtime, lastmodifiedby=EXCLUDED.lastmodifiedby;

      basePath: $.milestones.*
      jsonMaps:

       - jsonPath: $.milestones.*.id

       - jsonPath: $.milestones.*.tenantId

       - jsonPath: $.milestones.*.letterOfAcceptanceEstimate.id

       - jsonPath: $.milestones.*.status.code

       - jsonPath: $.milestones.*.cancellationReason

       - jsonPath: $.milestones.*.cancellationRemarks

       - jsonPath: $.milestones.*.deleted

       - jsonPath: $.milestones.*.auditDetails.createdBy

       - jsonPath: $.milestones.*.auditDetails.createdTime
         dbType: LONG

       - jsonPath: $.milestones.*.auditDetails.lastModifiedBy

       - jsonPath: $.milestones.*.auditDetails.lastModifiedTime
         dbType: LONG

    - query: INSERT INTO egw_milestoneactivity(id, tenantid, milestone, schedulestartdate, scheduleenddate, percentage, description, stageordernumber, deleted, createdby, createdtime, lastmodifiedby, lastmodifiedtime) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) on CONFLICT (id,tenantid) DO UPDATE SET schedulestartdate=EXCLUDED.schedulestartdate, scheduleenddate=EXCLUDED.scheduleenddate, percentage=EXCLUDED.percentage, description=EXCLUDED.description, stageordernumber=EXCLUDED.stageordernumber, deleted= EXCLUDED.deleted, lastmodifiedtime=EXCLUDED.lastmodifiedtime, lastmodifiedby=EXCLUDED.lastmodifiedby;

      basePath: $.milestones.*.milestoneActivities.*
      jsonMaps:

       - jsonPath: $.milestones.*.milestoneActivities.*.id

       - jsonPath: $.milestones.*.milestoneActivities.*.tenantId

       - jsonPath: $.milestones.*.milestoneActivities.*.milestone

       - jsonPath: $.milestones.*.milestoneActivities.*.scheduleStartDate
         dbType: LONG

       - jsonPath: $.milestones.*.milestoneActivities.*.scheduleEndDate
         dbType: LONG

       - jsonPath: $.milestones.*.milestoneActivities.*.percentage

       - jsonPath: $.milestones.*.milestoneActivities.*.description

       - jsonPath: $.milestones.*.milestoneActivities.*.stageOrderNumber

       - jsonPath: $.milestones.*.milestoneActivities.*.deleted

       - jsonPath: $.milestones.*.milestoneActivities.*.auditDetails.createdBy

       - jsonPath: $.milestones.*.milestoneActivities.*.auditDetails.createdTime
         dbType: LONG

       - jsonPath: $.milestones.*.milestoneActivities.*.auditDetails.lastModifiedBy

       - jsonPath: $.milestones.*.milestoneActivities.*.auditDetails.lastModifiedTime
         dbType: LONG

 - version: 1.0
   name: Milestone
   description: Persists Track Milestone in egw_trackmilestone table
   fromTopic: works-trackmilestone-saveorupdate-validated
   isTransaction: true
   queryMaps:
    - query: INSERT INTO egw_trackmilestone(id, tenantid, milestone, status, totalpercentage, projectcompleted, deleted, createdby, createdtime, lastmodifiedby, lastmodifiedtime) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) on CONFLICT (id,tenantid) DO UPDATE SET milestone=EXCLUDED.milestone, status= EXCLUDED.status, totalpercentage=EXCLUDED.totalpercentage, projectcompleted=EXCLUDED.projectcompleted, deleted= EXCLUDED.deleted, lastmodifiedtime=EXCLUDED.lastmodifiedtime, lastmodifiedby=EXCLUDED.lastmodifiedby;

      basePath: $.trackMilestones.*
      jsonMaps:

       - jsonPath: $.trackMilestones.*.id

       - jsonPath: $.trackMilestones.*.tenantId

       - jsonPath: $.trackMilestones.*.milestone.id

       - jsonPath: $.trackMilestones.*.status.code

       - jsonPath: $.trackMilestones.*.totalPercentage

       - jsonPath: $.trackMilestones.*.projectCompleted

       - jsonPath: $.trackMilestones.*.deleted

       - jsonPath: $.trackMilestones.*.auditDetails.createdBy

       - jsonPath: $.trackMilestones.*.auditDetails.createdTime
         dbType: LONG

       - jsonPath: $.trackMilestones.*.auditDetails.lastModifiedBy

       - jsonPath: $.trackMilestones.*.auditDetails.lastModifiedTime
         dbType: LONG

    - query: INSERT INTO egw_trackmilestoneactivity(id, tenantid, trackmilestone, milestoneactivity, remarks, percentage, actualstartdate, actualenddate, status, deleted, createdby, createdtime, lastmodifiedby, lastmodifiedtime) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) on CONFLICT (id,tenantid) DO UPDATE SET milestoneactivity=EXCLUDED.milestoneactivity, remarks=EXCLUDED.remarks, percentage=EXCLUDED.percentage, actualstartdate=EXCLUDED.actualstartdate, actualenddate=EXCLUDED.actualenddate, status=EXCLUDED.status, deleted= EXCLUDED.deleted, lastmodifiedtime=EXCLUDED.lastmodifiedtime, lastmodifiedby=EXCLUDED.lastmodifiedby;

      basePath: $.trackMilestones.*.trackMilestoneActivities.*
      jsonMaps:

       - jsonPath: $.trackMilestones.*.trackMilestoneActivities.*.id

       - jsonPath: $.trackMilestones.*.trackMilestoneActivities.*.tenantId

       - jsonPath: $.trackMilestones.*.trackMilestoneActivities.*.trackMilestone

       - jsonPath: $.trackMilestones.*.trackMilestoneActivities.*.milestoneActivity.id

       - jsonPath: $.trackMilestones.*.trackMilestoneActivities.*.remarks

       - jsonPath: $.trackMilestones.*.trackMilestoneActivities.*.percentage

       - jsonPath: $.trackMilestones.*.trackMilestoneActivities.*.actualStartDate

       - jsonPath: $.trackMilestones.*.trackMilestoneActivities.*.actualEndDate

       - jsonPath: $.trackMilestones.*.trackMilestoneActivities.*.status.code

       - jsonPath: $.trackMilestones.*.trackMilestoneActivities.*.deleted

       - jsonPath: $.trackMilestones.*.trackMilestoneActivities.*.auditDetails.createdBy

       - jsonPath: $.trackMilestones.*.trackMilestoneActivities.*.auditDetails.createdTime
         dbType: LONG

       - jsonPath: $.trackMilestones.*.trackMilestoneActivities.*.auditDetails.lastModifiedBy

       - jsonPath: $.trackMilestones.*.trackMilestoneActivities.*.auditDetails.lastModifiedTime
         dbType: LONG

 - version: 1.0
   name: Contractor Advance
   description: Persists Contractor Advance in egw_contractoradvance table
   fromTopic: works-contractoradvance-saveorupdate-validated
   isTransaction: true
   queryMaps:
    - query: INSERT INTO egw_contractoradvance(id, tenantid, letterofacceptanceestimate, stateid, createdby, createdtime, lastmodifiedby, lastmodifiedtime, deleted) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) on CONFLICT (id,tenantid) DO UPDATE SET letterofacceptanceestimate=EXCLUDED.letterofacceptanceestimate, stateid= EXCLUDED.stateid, deleted= EXCLUDED.deleted, lastmodifiedtime=EXCLUDED.lastmodifiedtime, lastmodifiedby=EXCLUDED.lastmodifiedby;

      basePath: $.contractorAdvanceRequisitions.*
      jsonMaps:

       - jsonPath: $.contractorAdvanceRequisitions.*.id

       - jsonPath: $.contractorAdvanceRequisitions.*.tenantId

       - jsonPath: $.contractorAdvanceRequisitions.*.letterOfAcceptanceEstimate.id

       - jsonPath: $.contractorAdvanceRequisitions.*.stateid

       - jsonPath: $.contractorAdvanceRequisitions.*.auditDetails.createdBy

       - jsonPath: $.contractorAdvanceRequisitions.*.auditDetails.createdTime
         dbType: LONG

       - jsonPath: $.contractorAdvanceRequisitions.*.auditDetails.lastModifiedBy

       - jsonPath: $.contractorAdvanceRequisitions.*.auditDetails.lastModifiedTime
         dbType: LONG

       - jsonPath: $.contractorAdvanceRequisitions.*.deleted

 - version: 1.0
   name: Letter Of Acceptance Backupdate
   description: Backupdate workordercreated flag isWorkOrderCreated on creation/cancel of Letter Of Acceptance in egw_letterofacceptance table
   fromTopic: works-letterofacceptance-wo-backupdate
   isTransaction: true
   queryMaps:
    - query: Update egw_letterofacceptance set isWorkOrderCreated=? where id=? and tenantId=?;
      basePath: $.workOrders.*
      jsonMaps:

       - jsonPath: $.workOrders.*.backUpdateLOA
         type: BOOLEAN

       - jsonPath: $.workOrders.*.letterOfAcceptance.id

       - jsonPath: $.workOrders.*.tenantId

 - version: 1.0
   name: Letter Of Acceptance Backupdate
   description: Backupdate offlinestatus flag isOfflineStatusCreated on creation of Letter Of Acceptance in egw_letterofacceptance table
   fromTopic: works-letterofacceptance-os-backupdate
   isTransaction: true
   queryMaps:
    - query: Update egw_letterofacceptance set isOfflineStatusCreated=? where id=? and tenantId=?;
      basePath: $.letterOfAcceptances.*
      jsonMaps:

       - jsonPath: $.letterOfAcceptances.*.backUpdateLOA
         type: BOOLEAN

       - jsonPath: $.letterOfAcceptances.*.id

       - jsonPath: $.letterOfAcceptances.*.tenantId

 - version: 1.0
   name: Letter Of Acceptance Backupdate
   description: Backupdate milestone flag isMilestoneCreated on creation of Milestone in egw_letterofacceptance table
   fromTopic: works-letterofacceptance-milestone-backupdate
   isTransaction: true
   queryMaps:
    - query: Update egw_letterofacceptance set isMilestoneCreated=? where id=? and tenantId=?;
      basePath: $.milestones.*
      jsonMaps:

       - jsonPath: $.milestones.*.backUpdateLOA
         type: BOOLEAN

       - jsonPath: $.milestones.*.letterOfAcceptanceEstimate.letterOfAcceptance

       - jsonPath: $.milestones.*.tenantId

 - version: 1.0
   name: Letter Of Acceptance Backupdate
   description: Backupdate billscreated flag isbillscreated on creation of Bill in egw_letterofacceptance table
   fromTopic: works-letterofacceptance-bill-backupdate
   isTransaction: true
   queryMaps:
    - query: Update egw_letterofacceptance set isBillsCreated=? where id=? and tenantId=?;
      basePath: $.contractorBills.*
      jsonMaps:

       - jsonPath: $.contractorBills.*.backUpdateLOA
         type: BOOLEAN

       - jsonPath: $.contractorBills.*.letterOfAcceptanceEstimate.letterOfAcceptance

       - jsonPath: $.contractorBills.*.tenantId

 - version: 1.0
   name: Letter Of Acceptance Backupdate
   description: Backupdate advancerequisition flag isarfcreated on creation of ARF in egw_letterofacceptance table
   fromTopic: works-letterofacceptance-arf-backupdate
   isTransaction: true
   queryMaps:
    - query: Update egw_letterofacceptance set isarfCreated=? where id=? and tenantId=?;
      basePath: $.contractorAdvanceRequisitions.*
      jsonMaps:

       - jsonPath: $.contractorAdvanceRequisitions.*.backUpdateLOA
         type: BOOLEAN

       - jsonPath: $.contractorAdvanceRequisitions.*.letterOfAcceptanceEstimate.letterOfAcceptance

       - jsonPath: $.contractorAdvanceRequisitions.*.tenantId

 - version: 1.0
   name: Letter Of Acceptance Backupdate
   description: Backupdate mb flag isarfcreated on creation of MB in egw_letterofacceptance table
   fromTopic: works-letterofacceptance-mb-backupdate
   isTransaction: true
   queryMaps:
    - query: Update egw_letterofacceptance set ismbCreated=? where id=? and tenantId=?;
      basePath: $.measurementBooks.*
      jsonMaps:

       - jsonPath: $.measurementBooks.*.backUpdateLOA
         type: BOOLEAN

       - jsonPath: $.measurementBooks.*.letterOfAcceptanceEstimate.letterOfAcceptance

       - jsonPath: $.measurementBooks.*.tenantId

 - version: 1.0
   name: WorkOrder Backupdate
   description: Backupdate offlinestatus flag isOfflineStatusCreated on creation of WorkOrder in egw_workorder table
   fromTopic: works-workorder-os-backupdate
   isTransaction: true
   queryMaps:
    - query: Update egw_workorder set isOfflineStatusCreated=? where id=? and tenantId=?;
      basePath: $.workOrders.*
      jsonMaps:

       - jsonPath: $.workOrders.*.backUpdateWO
         type: BOOLEAN

       - jsonPath: $.workOrders.*.id

       - jsonPath: $.workOrders.*.tenantId

 - version: 1.0
   name: WorkOrder Backupdate
   description: Backupdate milestone flag isMilestoneCreated on creation of Milestone in egw_workorder table
   fromTopic: works-workorder-milestone-backupdate
   isTransaction: true
   queryMaps:
    - query: Update egw_workorder set isMilestoneCreated=? where id=? and tenantId=?;
      basePath: $.workOrders.*
      jsonMaps:

       - jsonPath: $.workOrders.*.backUpdateWO
         type: BOOLEAN

       - jsonPath: $.workOrders.*.id

       - jsonPath: $.workOrders.*.tenantId

 - version: 1.0
   name: WorkOrder Backupdate
   description: Backupdate billscreated flag isbillscreated on creation of Bill in egw_workorder table
   fromTopic: works-workorder-bill-backupdate
   isTransaction: true
   queryMaps:
    - query: Update egw_workorder set isBillsCreated=? where id=? and tenantId=?;
      basePath: $.workOrders.*
      jsonMaps:

       - jsonPath: $.workOrders.*.backUpdateWO
         type: BOOLEAN

       - jsonPath: $.workOrders.*.id

       - jsonPath: $.workOrders.*.tenantId

 - version: 1.0
   name: WorkOrder Backupdate
   description: Backupdate advancerequisition flag isarfcreated on creation of ARF in egw_workorder table
   fromTopic: works-workorder-arf-backupdate
   isTransaction: true
   queryMaps:
    - query: Update egw_workorder set isarfCreated=? where id=? and tenantId=?;
      basePath: $.workOrders.*
      jsonMaps:

       - jsonPath: $.workOrders.*.backUpdateWO
         type: BOOLEAN

       - jsonPath: $.workOrders.*.id

       - jsonPath: $.workOrders.*.tenantId

 - version: 1.0
   name: WorkOrder Backupdate
   description: Backupdate mb flag isarfcreated on creation of MB in egw_workorder table
   fromTopic: works-workorder-mb-backupdate
   isTransaction: true
   queryMaps:
    - query: Update egw_workorder set ismbCreated=? where id=? and tenantId=?;
      basePath: $.workOrders.*
      jsonMaps:

       - jsonPath: $.workOrders.*.backUpdateWO
         type: BOOLEAN

       - jsonPath: $.workOrders.*.id

       - jsonPath: $.workOrders.*.tenantId
